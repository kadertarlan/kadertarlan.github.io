<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[KaderTarlan]]></title>
  <link href="http://kadertarlan.github.io/atom.xml" rel="self"/>
  <link href="http://kadertarlan.github.io/"/>
  <updated>2017-05-14T20:43:36+03:00</updated>
  <id>http://kadertarlan.github.io/</id>
  <author>
    <name><![CDATA[KaderTarlan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mobil Otomasyon Ve Cihaz Desteği]]></title>
    <link href="http://kadertarlan.github.io/blog/2017/05/17/mobil-otomasyon-ve-cihaz-destegi/"/>
    <updated>2017-05-17T01:49:55+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2017/05/17/mobil-otomasyon-ve-cihaz-destegi</id>
    <content type="html"><![CDATA[<p><span style="font-family: terminal, monaco, monospace;">Mobil Otomasyon için  Cihaz Desteği  veren Toolar var. Kullandığım ve fikrim olan cihazlardan biraz bahsetmek istiyorum:</span></p>

<h4>Appium</h4>


<blockquote>
<p><span style="color: #003366;"><span style="color: #993300;">Appium</span> açık kaynak kodlu, cross-platform test automation aracıdır. Native, hybrid ve mobile web uygulamalarını simulator (iOS, FirefoxOS), emulators (Android), veya real cihazlarda (iOS, Android, Windows, FirefoxOS) test etme imkanı sağlayan bir araç. </span></p>

<p><span style="color: #ff0000;">Appium avantajları: </span>
<ul style="list-style-type: disc;">
<li>Her iki platformda da kullanabilme iOS ve android için.</li>
<li>Sürekli entegrasyon desteği, jenkins, saucelabs kullanabilme</li>
<li>Kaynak kod veya kütüphanelerine erişimi gerektirmez.  (Robotium istiyor mesela)</li>
<li>Çeşitli framework desteği.</li>
<li>Herhangi bir programlama dili destekler</li>
<li>Uygulamalarda hybris, native ve webapps çeşitliliklerini destekliyor</li>
<li>Bedava, açık kaynak</li>
<li>Simulator/emulator ve real device ile de çalışıyor </li></ul>

<span style="color: #ff0000;">Dezavantajı:</span>
<ul style="list-style-type: disc;">
<li>Waitleri statik vermek gerekiyor, bu konuda iyi bir çözümleri yok</li>
<li>Dökümantasyon biraz eksik </li>
<li>Apple dünyasında Appium ile otomasyon testlerinde paralel çalıştırmada limit var</li>
<li>Mobil dünyadaki özellikle oyun uygulamaları için hareketlere (zoom, double tap) ihtiyaç var. Bu hareketler için Javascript koşmak lazım</li></ul>
</blockquote>


<h4>Bulut Tabanlı Mobil Cihaz Desteği: </h4>




<p><span style="color: #0000ff;">Bitbar Testdroid</span></p>


<p><strong>Bitbar Public Cloud (Testdroid Cloud),</strong>  Android ve IOS manuel ve otomasyon testleri için bulut tabanlı mobil cihaz desteği sağlıyor.  Bir nevi cihaz desteği aslında. Burası test ortamlarının sağlandığı bir hizmet aslında. Mobil uygulamalar ve ilgili hizmetler için fonksiyonel, performans, stres, regresyon ve kararlılık testlerini otomatik hale getirir.  Burada monitoring yapmak mümkün günün her saatinde. 
<br />Cihazları ise : <a href="https://cloud.testdroid.com/#public/devices">https://cloud.testdroid.com/#public/devices</a></p>


<p><span style="color: #0000ff;">Sauce Labs</span></p>

<p><p><strong>Bulut tabanlı olan Sauce Labs</strong> Android , IOS ve web uygulamaları için simulator, emilator ve gerçek cihaz desteği sağlıyor. Native, hibrit ve mobil web testlerini koşmak mümkün. Çeşitli işletim sistemleri ve browserlarla 800’den fazla platform sunuyor.  Appium ve Seleniuum ile test edebilir ve testleri paralel olarak çalıştırabilir.</p>

<p><span style="color: #0000ff;">
SauceLabs ve Testdroid Karşılaştırması:</span>
<ul style="list-style-type: square;"><blockquote>
<li>
<span style="color: #ff0000;">Testdroid</span>  mobil yazılım geliştirme ve test için kullandığımız bir Bitbar Teknolojisidir. <br/>
3 farklı ürünü var <span style="color: #003366;">Testdroid Cloud, Testdroid Recorder ve Testdroid Enterprise. </span> <span style="color: #ff0000;">Testdroid</span> GitHub üzerinde açık kaynak kodlu  bir  application programming interface aslında.
<ul>
<li>
Testdroid ile çeşitli test frameworklerini kullanabilir, örneğin native için Robotium, Appium ve uiautomator  veya web uygulamaları için  Selenium , aslında bu platformun hedef kitlesi mobil veya oyun geliştiricileridir.
<li>Gerçek Android ve iOS destekli cihazlar içerir bunun yanında bulut tabanlı test simulatorleri de sunuyor <span style="color: #003366;">Testdroid Cloud</span> ile.<br/>
<li><span style="color: #003366;">Testdroid Recorder</span>  ise developer ve testerlar için user-actions kaydediyor,  mobil uygulama ve oyunları üzerinde Junit tabanlı test caseler üretiyor,  Eclipse marketplace var.
<li><span style="color: #003366;">Testdroid Enterprise </span> ise gerçek Android ve IOS cihazlar için otomasyon testlerinin yönetildiği bir server yazılımıdır, Jenkins Continuous Integration destekler.
</li></ul>
 <li><span style="color: #ff0000;">Sauce Labs</span> desktop, mobile web, native, ve hybrid uygulamaları test etmek için için düyadaki en geniş ölçekli güvenilir ve ölçeklenebilir cloud ortamını oluşturur. <br/>
    450’den fazla platform sunar.
</li></ul></blockquote></p>

<p><p><span style="color: #0000ff;">Cross Browser Testing</span></p></p>

<p><p><span style="color: #003366;">Manuel ve otomasyon testleri ile fonksiyonel test ortamları sunar.</span>  Geliştiriciler için 1500'den fazla mobil cihazlar ve tarayıcı desteği. Burada browser testleri yapmak mümkün, mobil taraftada browser açıp testleri yürütüyor. Mobil App testleri yapmak için diğer toolara bakmak daha iyi. Test sonuçlarını video ve ekran görüntüleri kaydedilebilir. Selenyum, Appium ve diğer testler CrossBrowserTesting uzaktan cihazlarda çalıştırabiliriz. Güvenlik duvarı (firewall) test etmek istiyorsanız, CrossBrowserTesting kullanıcılar için Chrome uzantısı veya Node.js tünel bulunmaktadır.</p>

<p><span style="color: #003366;">Desteklenen Tarayıcılar: </span>Internet Explorer, Mozilla Firefox, Apple Safari, Google Chrome, Opera, Netscape ve daha birçok&hellip;</p>

<p><span style="color: #003366;">Desteklenen İşletim Sistemi: </span> Windows 98, Windows 2000, Windows XP, Windows Vista, 6, 5, Mac OS X 10.3–10.5, Fedora Core 6, O BlackBerry, BlackBerry OS, Apple iOS, Google Android, Windows Mobile 5.0 (RQVGA), Windows Mobile 6.0, Windows Mobile Professional 6.5</p>

<p><span style="color: #003366;"> Browserları: </span> <a href="https://crossbrowsertesting.com/browsers">https://crossbrowsertesting.com/browsers</a></p>

<p><blockquote>
<h4>Mobil Beta Testleri için:</h4></p>

<p><span style="color: #0000ff;">Ubertesters</span>
-Ubertesters kullanıcı deneyimini analiz etme, hata raporlama, kullanıcı testi  ortamları sağlar.  Development lifecycle yönetebilmek için hataları yakalama ve izlemeye yarar. Ubertesters ile mobil beta testleri yapmak, ekran görüntüleri ile video kayıtları ile takip etmeyi sağlar. Hataları raporlar.  Ubertester native ve cross-platform development destekler.</p>

<p><span style="color: #0000ff;">TestFairy</span>
- TestFairy mobil uygulamaları için beta test platformudur, yapılan her test videoya çekilir. Mobil uygulamaları test ederken bir sorun varsa tam olarak istemci tarafında neyin yanlış gittiğini asla bilemezsin.
TestFairy CPU, Bellek, GPS, Ağ ve çok daha fazla fazlası dahil olmak üzere tam bir deneme videosu sağlayarak bu sorunu çözer.
</blockquote></p>

<p><blockquote>
<h4>Fonksiyonel Test</h4>
<span style="color: #0000ff;">Sencha</span>
Mobil ve web uygulamaları için fonksiyonel test sunar. Sencha Test mobil tarayıcılarda gerçek cihazlarda kullanılabilen benzersiz bir URL oluşturmak için bir proxy mekanizması kullanır. Testler JavaScript ile yazılabilir. Unit testleri otomatize etme ve  end-to-end functional test için kapsamlı çözümler üretir, birden fazla tarayıcılarda aynı anda yürütebilirsiniz</p>

<p><span style="color: #0000ff;">Bugsee</span>
Otomasyon ile çok ilgisi yok aslında,
<a href="https://www.bugsee.com">https://www.bugsee.com</a>
Bugsee monitoring ve sistem durumunu kayıtları sağlar, geliştiriciler için hata takibi yapmak, gönderilen hata bilgileri ile hata raporları sunan, bulut tabanlı bir araçtır.  iOS veya Android uygulamaları için hata ayıklama desteği.
</blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test Otomasyonu Için Maliyeti Azaltan Yöntemler]]></title>
    <link href="http://kadertarlan.github.io/blog/2017/05/13/test-otomasyonu-icin-oaliyeti-azaltan-yontemler/"/>
    <updated>2017-05-13T02:03:29+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2017/05/13/test-otomasyonu-icin-oaliyeti-azaltan-yontemler</id>
    <content type="html"><![CDATA[<p><span style="font-family: terminal, monaco, monospace;">Yazılım otomasyon testlerinin büyük amacı manuel testlerle çok vakit kaybetmeden zamandan ve paradan kazanç sağlayabilmek işi otomotize etmek isterken yazılım otomasyonlarındaki yapılan bazı hatalardan dolayı buradaki zaman ve maliyet artmakta.</span></p>




<p><span style="color: #993300;">Yazılım otomasyon testleri yaparken otomasyon testlerinin maliyetini dusurebilecek durumlardan bahsedersek;</span></p>




<ul style="list-style-type: square;">
<li><span style="color: #ff0000;">
Maliyeti azaltmak için</span> düşük değerlikli özelliklerin test edilmesi ile stabil diyeceğimiz durumların test edilmesi durumlarını çıkartmalıyız.  Bunları test etmenin bir anlamı olmayacak. Burada neyi test etmemiz gerekiyor bunun analizi iyi çıkarılmalı. Bakım maliyeti yapacak gereksiz adımları çıkarırsak daha <span style="color: #ff0000;">kritik noktalar</span> üzerinde testi koşturmak gereksiz maliyeti önlemiş olacaktır.   Bu tarz ufak kritik olmayan noktaların  otomasyonunu gerçeklemeyin.
</li>

<li>
Testinizi birden fazla <span style="color: #ff0000;">tarayıcı</span> da birden fazla <span style="color: #ff0000;">işletim sistemi</span>nde uygulamanız gerekecek. Ama gerçekten tüm işletim sistemlerine ve tüm tarayıcılara ihtiyacımız var mı ? Bunun analizini yaparsak maliyetimiz biraz daha azalır. Şöyle ki mevcut sistemlerde <span style="color: #ff0000;">tarayıcıların kullanım oranlarına</span> göre bir eleme yapabilirsiniz. 
</li>

<li><span style="color: #ff0000;">Karmaşık test senaryolarını</span>  önleyiniz. Burada basitliğe ve esnekliğe odaklanmalıyız. Ancak karmaşık data-driven senaryolar oluşturacaksınız elbette bu karmaşık davranmak anlamına gelmez. Hünerli test kodu yazmak ile anlamsız parçaları birleştirip bir karmaşa oluşturmak arasındaki fark aslında. iç içe koşullardan kaçının testi okumak ve hata ayıklamak daha da zorlaşır. Tek bir testte bir çok adımı bir arada yapmaktan kaçının. <span style="color: #ff0000;">Karmaşıklık</span> sadece test değil tüm sistem için <span style="color: #ff0000;">ek bir maliyete</span> sebep olacaktır.
</li>
<li>
Web sayfasındaki <span style="color: #ff0000;">html elemanlarının</span> bulunmasını sağlamak önemli.  Çünkü patlayan testlerin çoğunluğu aslında bu elemanların bulunmayışından dolayıdır.  Takımdaki web sayfamızı kodlayan arkadaşların bu <span style="color: #ff0000;">id</span>lerin bulunabilme ihtimallerini yukseltmeleri test maliyeti etkileyecektir.
</li>
<li>
Sistemdeki <span style="color: #ff0000;">asenkron hareketleri</span> bilmeye ihtiyacımız var.  Asenkron hareket eden test komutları için herhangi bir değişiklik bunları etkileyecektir. Yazdığınız tüm test kodları küçük bir geliştirmede bile etkileneceğinden testleri buna <span style="color: #ff0000;">dikkat ederek yazarsanız </span>testlerin çalışmasını etkilememiş olursunuz. Veya takibinin iyi yapılıp yazılan test kodları hasar görmeyecek şekilde düzeltmeler ile maliyete gene sahip çıkarız.

</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Özetle Yazılım Test Otomasyon]]></title>
    <link href="http://kadertarlan.github.io/blog/2017/05/13/ozetle-yazilim-test-otomasyon/"/>
    <updated>2017-05-13T00:57:37+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2017/05/13/ozetle-yazilim-test-otomasyon</id>
    <content type="html"><![CDATA[<p><span style="color: #ff0000;  style="font-family: terminal, monaco, monospace; ">Otomasyon</span>, test kapsamının arttırılmasını, manuel test yükünün azaltılmasını sağladığımız bir metodolojidir aslında.
<span style="color: #993300;">Otomasyon yazmalı mıyız, buna ihtiyacımız var mı sorularının cevabı için projenizin durumu önemli.</span>Her defasında tekrar ettiğimiz test adımlarını otomatize edip iş yükünü azaltmak bir yöntemken, sürekli geliştirip bozup yeniden kurduğunuz bir tasarım içinde sürekli otomasyon testlerinin revize edilmesi ile de başka bir yük getirmek çok mantıklı olmaz. Daha çok gün yüzüne çıkmış, bir sistem oturtulup <span style="color: #993300;"> stabil olduğumuz projelerimizde otomasyon daha doğru bir karar.</span> Tabiki değişiklikler olacak ama tüm sayfaların, butonların, idl’erin değiştiği bir karmaşa halindeki değişiklikler değil kastımız.</p>

<p>Tasarımı oturmuş projemizde <span style="color: #993300;">manuel testlerin azaltılması</span> için otomasyon yazmanın yanında, otomasyonun getirdiği bir diğer güzellikler pek çok <span style="color: #993300;">farklı platformda</span> aynı testlerin çalıştırılmasının sağlanılması ,  bir testi 4 farklı makinada ve her makinanın 3 farklı platformunda deneme 12 iş yükü iken otomasyon testlerinin paralel aynı işi aynı anda yapıyor olmasının getirdiği maliyet ve zaman kazancını tahmin edebiliriz. Bu ihtiyacımız yalnızca web tarafında değil mobil tarafta da <span style="color: #993300;">cihaz değişikliği ihityaçlarımızda</span> otomasyon sorunu çözecektir.  Bir çok farklı sürümdeki android cihaz çeşitliliğinin farkındayız bütün bu cihazları tedarik etmek de oldukça maliyetliyken, yazılım test scriptlerinizi cloud yöntemlerle cihaz desteği sunan toolara üye olarak koşmak mümkün. Böylece bir çok mobil cihazda da mobil app’lerin testlerini gerçekleştirmiş oluncak.</p>

<p><span style="font-family: terminal, monaco, monospace; ">
Herşeyde imdadımıza otomasyon testleri koşacak diye de bir  durum yok aslında, proje ve kaynaklara göre bunun ayrımının yapılması gerekir. Doğru zamanda doğru ihtiyacı yakalarsak test anlamındaki sistemi de oturtmuş oluruz. </span></p>

<p>Otomasyon testlerinin yapamadığı manuel testlere ihtiyacımız olan durumlarda olcak, kodlarımız da birim testlere deihtiyacımız olcak.</p>

<p><span style="color: #0000ff;  style="font-family: terminal, monaco, monospace; ">Projenin her adımında teste ihtyacımız olduğunu ve doğru test adımları ile çok daha kaliteli işler çıkacağını göreceğiz. </span></p>

<p>Bol testli günler :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appium Kurulumu]]></title>
    <link href="http://kadertarlan.github.io/blog/2017/02/01/appium-kurulumu/"/>
    <updated>2017-02-01T00:37:37+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2017/02/01/appium-kurulumu</id>
    <content type="html"><![CDATA[<p><span style="color: #993300;">Appium kurulumu kullanımı :  </span></p>

<p><ul>
<li>
İlk olarak Eclipse kurulu değil ise <a href="http://www.eclipse.org/downloads/">Eclipse IDE</a>‘yi indiriyoruz kullandığınız platforma göre linkten bulabilirsiniz. <br/>
     -> <a href="http://www.eclipse.org/downloads/">http://www.eclipse.org/downloads/</a></li></p>

<p><li>Ayrıca <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html">JDK</a> indirmeniz gerekiyor. Bunun için de aşağıdaki linkten, işletim sisteminizi seçip anlaşmayı onayladıktan sonra indirebilirsiniz.<br/>
    -> <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8- downloads-2133151.html">JDK</a></li></p>

<p><li><span style="color: #800000;">JDKʼ</span> ʼyı indirip kurun. Yükleme bitince <span style="color: #0000ff;">Eclipseʼyi</span> açın.</li></p>

<p><li>Android <span style="color: #800000;">SDK</span> indireceğiz.Bunun için aşağıdaki linkten indirme işlemini yapıyoruz. <br/>
    -> <a href="http://www.gezginler.net/indir/android-sdk.html">SDK</a></li></p>

<p><li>İndirdikten sonra çift tıklayıp kuralım. Eclipse dosyasının içine kurabilirsiniz. Yükleme bitince <span style="color: #800000;">SDK Manager</span> programı açılacaktır. Burada yüklemek istediğimiz <span style="color: #800000;">Android</span> sürümlerini seçerek kurulumunu sağlayabilirsiniz.</li></p>

<p><li>Şimdi Eclipseʼyi açın ve yukarıdaki menüden <span style="color: #800000;">Help-Install >  New Software </span>seçeneğine gelin. <br/>
  <span style="color: #800000;">Location</span> kısmına:  <a href="https://dl-ssl.google.com/android/eclipse/">https://dl-ssl.google.com/android/eclipse/</a>  adresini girin. <span style="color: #800000;">ADT (Android Development Tools)</span> için gelen verileri seçerek indirilmesini sağlayın.</li></p>

<p><li>Son olarak <span style="color: #800000;">Eclipse</span> içerisinde <span style="color: #800000;">Window-Preferences</span> ve soldaki <span style="color: #800000;">Android</span> kısmına tıklıyoruz.  Buradaki <span style="color: #800000;">SDK Location</span> bölümüne <span style="color: #800000;"> Android SDK</span>ʼyı nereye kurduysak onu işaretliyoruz.</li></p>

<p><span style="font-family: terminal, monaco, monospace;">Kurulum işlemlerimiz tamam.  <span style="color: #800000;">Android Tools</span> indirirken <span style="color: #800000;">Android DDMSʼ</span>de inmiş oldu. Bu bizim <span style="color: #800000;">Android</span> testlerimiz için mobil cihazın ekran görüntüsü almamızı sağlayacak. </span></p>

<p>Şimdi <span style="color: #0000ff;">Appium</span>  kuralım. Link: <a href="https://bitbucket.org/appium/appium.app/downloads/">Appium</a> buradan Appium versiyonunu projenize uygun şekilde seçmelisiniz. Ben Android 5 ve 6 sürümlerinde ayrıca ios 9 sürümünde test yapabilmek için 1.4.13 indirdim. IOS 10 için 1.6 beta sürümünü eklemek lazım.  Mac bilgisayarlar için kurulumu oldukça basit indirdiğiniz dosyanın üzerine gelerek kurulumu gerçekleştiriniz. appium.jpeg.</p>

<p>Burada localde bir android telefonu bilgisayarınıza bağlayıp resimde görüldüğü gibi Android iconuna tıklayıp Launch ettiğinizde status 200 alcaksınız başarılı bağlanma sonunda. appium2</p>

<p>Kurulumlar tamamlandıktan sonra bir test eclipse üzerinde çalıştırmaya çalıştığımızda: <br/>
<em><span style="color: #993300;">Could not find adb. Please set the ANDROID_HOME environment variable with the Android SDK root directory path. </span></em><br/>
Gibi bir hatamız olursa;</p>

<p><code>vi ~/.bash_profile</code>  girip</p>

<p><code>export ANDROID_HOME=/Applications/Android</code></p>

<p><code>export PATH=$ANDROID_HOME/platform-tools:$PATH export PATH=$ANDROID_HOME/tools:$PATH</code></p>

<p>Bunları yazmak gerekiyor dosyaya.</p>

<p><blockquote>
<h4> Özetle Tüm Kurulumlar: </h4></p>

<p><ul><li>
Buradan <span style="color: #0000ff;">xcode 7.3.1</span> :</p>

<p><a href="https://developer.apple.com/download/more/">https://developer.apple.com/download/more/</a></p>

<p><li>Daha sonra install nodejs:</p>

<p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p>

<p>Kurulan nde versiyonu için <code>node -v</code>diyoruz  &ndash; > v6.9.2 benimki. </li></p>

<p><li>Sonra path'e' nodejs tanımlayalım:</p>

<p><code>export PATH=/usr/local/bin/node:$PATH</code></li></p>

<p><li> <code>http://brew.sh/index_tr.html sitesinde linke(/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)")</code></p>

<p>terminale yazalım, sonra aşağıdaki komutları verelim:</p>

<p><code>Brew update</code></p>

<p><code>Brew doctor</code></p>

<p><code>sudo npm install -g appium</code></p>

<p>Ve <a href="https://bitbucket.org/appium/appium.app/downloads/">https://bitbucket.org/appium/appium.app/downloads/</a> buradan appium 1.4.13 kuralım</li></p>

<p><li>Şimdi java jdk indirelim:</p>

<p>&ndash;> <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html?ssSourceSiteId=otnes*">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html?ssSourceSiteId=otnes*</a></p>

<p>Buradan <span style="color: #0000ff;">Java SE Development Kit 8</span> indirdik. Kurulum tamamlayalım. </span><br/>
Şimdi <code>java -version</code> diyerek kurulum kontrol edelim.</li></p>

<p><li><code>echo export "JAVA_HOME=\$(/usr/libexec/java_home)" &gt;&gt; ~/.bash_profile</code> ile java path tanımlayalım bash_profile içine</li></p>

<p><li>Eclipse indirelim. <br/>
&ndash;> <a href="http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/2/eclipse-jee-mars-2-macosx-cocoa-x86_64.tar.gz">http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/2/eclipse-jee-mars-2-macosx-cocoa-x86_64.tar.gz</a> </li></p>

<p><li>Android sdk indirelim.<br/>
&ndash;> <a href="https://developer.android.com/studio/index.html#downloads">https://developer.android.com/studio/index.html#downloads</a>  </li></p>

<p><li>Eclipse indirelim. ADT ile android gerekliliklerini indirelim eclipse içinde  (help > install new software)</p>

<p>&ndash;> ADT Plugin - <a href="https://dl-ssl.google.com/android/eclipse">https://dl-ssl.google.com/android/eclipse</a></li></p>

<p><li>Konsolda bash profile içine:</p>

<p>`export PATH=&ldquo;/usr/local/bin:$PATH&rdquo;</p>

<p>export PATH=/usr/local/lib/node_modules/grunt/bin:$PATH</p>

<p>export PATH=/usr/local/bin/node:$PATH</p>

<p>export JAVA_HOME=$(/usr/libexec/java_home)</p>

<p>export ANDROID_HOME=&ldquo;/Users/kader.tarlan/Downloads/tools/&rdquo;</p>

<p>export PATH=&ldquo;/Users/kader.tarlan/Downloads/tools/tools:$PATH&rdquo;</p>

<p>export PATH=&ldquo;/Users/kader.tarlan/Downloads/tools/platform-tools:$PATH&rdquo;</p>

<p>export PATH=&ldquo;/Users/kader.tarlan/Downloads/tools/build-tools:$PATH&rdquo;`</p>

<p></li></ul></blockquote></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Python Ile Birim Testler]]></title>
    <link href="http://kadertarlan.github.io/blog/2016/02/23/python-ile-birim-testler/"/>
    <updated>2016-02-23T01:45:42+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2016/02/23/python-ile-birim-testler</id>
    <content type="html"><![CDATA[<blockquote><p>Merhaba uzun süredir uğraştığım test alanı ile ilgili faydalı bilgiler aktarabilmek adına Python ile birim testleri nasıl yazıyoruz ondan bahsedeceğim bu yazımda.</p></blockquote>

<p><font color=green>LibreOffice</font> projesinin kaynak koduna <font color=#990000>Python</font> ile birim testler yazdım. Oraya yazdığım ve kaynak koduna kabul ettirdiğim testlerden birini örnek vererek anlatacağım.</p>

<p>Öncelikle <font color=green>LibreOffice</font> test yazacaksanız yazdığınız kodun en başına bir lisans bildirimi ekliyorsunuz. Yazdığım dosya <font color=green>LibreOffice</font> aittir, belirtilen lisans doğrultusunda yazıyorum gibi.</p>

<p><font color=green>LibreOffice</font> geliştirdiği Uno modüllerinden testinizde hangilerini kullanacaksanız onları test dosyasına dahil ediyoruz. <br/>
<code>from com.sun.star.text import XTextDocument</code>
<code>from org.libreoffice.unotest import UnoInProcess</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">class</span> <span class="nc">CheckFlies</span><span class="p">(</span><span class="n">unittest</span><span class="o">.</span><span class="n">TestCase</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@classmethod</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">setUpClass</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span> <span class="o">=</span> <span class="n">UnoInProcess</span><span class="p">()</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">setUp</span><span class="p">()</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">document</span> <span class="o">=</span> <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">openWriterTemplateDoc</span><span class="p">(</span><span class="s">&quot;CheckFlies.odt&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@classmethod</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">tearDownClass</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">tearDown</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color=#990000>Python</font> ile yazılan tüm birim testlerimizin class parametresi <code>unittest.TestCase</code> şeklinde olmalı.</p>

<p>Testler için <font color=brown>SetUpClass</font> ve <font color=brown>tearDownClass</font> sınıf metotlarımız olması gereken metotlardır. <font color=brown>SetUpClass</font> metodumuz testler daha başlamadan hazırlanmasını istediğimiz adımları yazdığımız kısımdır. Burada <font color=green>LibreOffice</font> için dökümanları açtığımız, oluşturduğumuz yer de oluyor aynı zamanda. İşlem yapılacak belgemizi öncesinde hazır hale getiriyoruz. <font color=brown>tearDownClass</font> metodu ise testler bittikten sonra çalıştırılmasını istediğimiz adımları yazdığımız yerdir. Örneğin açılan dosyamızın kapatılma işlemi burada gerçekleşiyor.</p>

<p>Testlerin başlangıç fonksiyonu <font color=red>&ldquo;test&rdquo;</font> deyimi ile başlamalı. Eğer bunu yazmazsak o test aslında hiç çalışmamış olur. Fonksiyonların başına test yazmadığınız zaman çağırmadığınız sürece çalıştırılmayacak fonksiyonlar olur onlar. Ancak <font color=red>&ldquo;test&rdquo;</font> yazan her fonksiyonu siz çağırmak zorunda değilsiniz siz testleri çalıştırdığınızda o fonksiyonlarda otomatikmen çağrılırlar. Benim örneğimdeki fonksiyonumuzda <font color=brown>&ldquo;def test_checkFlies(self):&rdquo;</font> deyimi yer almakta.</p>

<p>Testlerde kullanılan diğer herşey kulandığınız dilin marifetleri ile şekillenecektir. Değindiğim noktalarla iskeleti oluşturduktan sonra <font color=#990000>Python</font> dilinde yapmak istediğim şeyleri yazdım.</p>

<p>Kullandığım diğer önemli yapı testlerin hepsinde olan <font color=red>Assert</font> adımlarıdır. <font color=#5276AC>AssertEqual</font> ile verilen iki parametre arasında eşitliği kontrol edip <font color=#5276AC>AssertTrue</font> ile doğruluğunun sağlandığını ölçüp <font color=#5276AC>AssertFail</font> ile hata mesajı dönebilirsiniz. <font color=#D01F54>Assertion</font> adımları testi test yapan adımlar. Eğer testinizde kontrol adımlarınız yoksa birşeyi test etmiş olmazsınız. <font color=red>Assert</font> çok çeşitlidir, örneğin kullanmanız gereken duruma göre aşağıdakilerden birini seçebilirsiniz:</p>

<p><font color=#E16F6F></p>

<p>|             |             |<br/>
| &mdash;&mdash;&mdash;&ndash; | &mdash;&mdash;&mdash;&ndash; | <br/>
|assertEqual(a, b) |  a == b|<br/>
| assertNotEqual(a, b)|a != b|<br/>
| assertTrue(x)          | bool(x) is True  |        <br/>
| assertFalse(x)            | bool(x) is False   |<br/>
| assertIs(a, b)         | a is b  |<br/>
| assertIsNot(a, b)         | a is not b  | <br/>
| assertIsNone(x)       | x is None   |<br/>
| assertIsNotNone(x)     | x is not None |  <br/>
| assertIn(a, b)        | a in b  s|<br/>
| assertNotIn(a, b)      | a not in b  |<br/>
| assertIsInstance(a, b) | isinstance(a, b)  |<br/>
| assertGreater(a, b) | a > b  |<br/>
| assertGreaterEqual(a, b )   | a >= b |  <br/>
| assertLess(a, b) |    a &lt; b  |<br/>
| assertLessEqual(a, b) |   a &lt;= b  |<br/>
</font></p>

<blockquote><p>Bahsini ettiğim testi de paylaşacağım. Testin üzerinden anlattıklarıma tekrar bakarsanız daha kalıcı olacağını düşünüyorum. Kolay gelsin.</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'><span class="sd">  This is file is part of the LibreOffice project.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">  This Source Code Form is subject to the terms of the Mozilla Public</span>
</span><span class='line'><span class="sd">  License, v. 2.0. If a copy of the MPL was not distributed with this</span>
</span><span class='line'><span class="sd">  file, You can obtain one at http://mozilla.org/MPL/2.0/.</span>
</span><span class='line'>
</span><span class='line'><span class="sd">  This file incorporates work covered by the following license notice:</span>
</span><span class='line'>
</span><span class='line'><span class="sd">    Licensed to the Apache Software Foundation (ASF) under one or more</span>
</span><span class='line'><span class="sd">    contributor license agreements. See the NOTICE file distributed</span>
</span><span class='line'><span class="sd">    with this work for additional information regarding copyright</span>
</span><span class='line'><span class="sd">    ownership. The ASF licenses this file to you under the Apache</span>
</span><span class='line'><span class="sd">    License, Version 2.0 (the &quot;License&quot;); you may not use this file</span>
</span><span class='line'><span class="sd">    except in compliance with the License. You may obtain a copy of</span>
</span><span class='line'><span class="sd">    the License at http://www.apache.org/licenses/LICENSE-2.0 .</span>
</span><span class='line'><span class="sd">&#39;&#39;&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.lang</span> <span class="kn">import</span> <span class="n">XMultiServiceFactory</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.text</span> <span class="kn">import</span> <span class="n">XTextDocument</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.text</span> <span class="kn">import</span> <span class="n">XTextFramesSupplier</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.text</span> <span class="kn">import</span> <span class="n">XTextGraphicObjectsSupplier</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.text</span> <span class="kn">import</span> <span class="n">XTextEmbeddedObjectsSupplier</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.container</span> <span class="kn">import</span> <span class="n">XNameAccess</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.container</span> <span class="kn">import</span> <span class="n">NoSuchElementException</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">com.sun.star.container</span> <span class="kn">import</span> <span class="n">XIndexAccess</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">org.libreoffice.unotest</span> <span class="kn">import</span> <span class="n">UnoInProcess</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">unittest</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">unohelper</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">CheckFlies</span><span class="p">(</span><span class="n">unittest</span><span class="o">.</span><span class="n">TestCase</span><span class="p">):</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@classmethod</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">setUpClass</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span> <span class="o">=</span> <span class="n">UnoInProcess</span><span class="p">()</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">setUp</span><span class="p">()</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">document</span> <span class="o">=</span> <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">openWriterTemplateDoc</span><span class="p">(</span><span class="s">&quot;CheckFlies.odt&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@classmethod</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">tearDownClass</span><span class="p">(</span><span class="n">cls</span><span class="p">):</span>
</span><span class='line'>        <span class="n">cls</span><span class="o">.</span><span class="n">_uno</span><span class="o">.</span><span class="n">tearDown</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">test_checkFlies</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>        <span class="n">xTFS</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">__class__</span><span class="o">.</span><span class="n">document</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">checkTextFrames</span><span class="p">(</span><span class="n">xTFS</span><span class="p">)</span>
</span><span class='line'>        <span class="n">xTGOS</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">__class__</span><span class="o">.</span><span class="n">document</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">checkGraphicFrames</span><span class="p">(</span><span class="n">xTGOS</span><span class="p">)</span>
</span><span class='line'>        <span class="n">xTEOS</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">__class__</span><span class="o">.</span><span class="n">document</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">checkEmbeddedFrames</span><span class="p">(</span><span class="n">xTEOS</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checkEmbeddedFrames</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">xTGOS</span><span class="p">):</span>
</span><span class='line'>        <span class="n">vExpectedEmbeddedFrames</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;Object1&quot;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">nEmbeddedFrames</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">vExpectedEmbeddedFrames</span><span class="p">)</span>
</span><span class='line'>        <span class="n">xEmbeddedFrames</span> <span class="o">=</span> <span class="n">xTGOS</span><span class="o">.</span><span class="n">getEmbeddedObjects</span><span class="p">()</span>
</span><span class='line'>        <span class="n">nCurrentFrameIdx</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">print</span> <span class="p">(</span><span class="n">xEmbeddedFrames</span><span class="p">)</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">sFrameName</span> <span class="ow">in</span> <span class="n">xEmbeddedFrames</span><span class="o">.</span><span class="n">getElementNames</span><span class="p">():</span>
</span><span class='line'>            <span class="n">vExpectedEmbeddedFrames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>                <span class="c"># raises ValueError if not found</span>
</span><span class='line'>            <span class="k">print</span> <span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>            <span class="n">xEmbeddedFrames</span><span class="o">.</span><span class="n">getByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span><span class="n">xEmbeddedFrames</span><span class="o">.</span><span class="n">hasByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">),</span> <span class="s">&quot;Could not find embedded frame by name.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span><span class="ow">not</span><span class="p">(</span><span class="n">vExpectedEmbeddedFrames</span><span class="p">),</span> <span class="s">&quot;Missing expected embedded frames.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">xEmbeddedFramesIdx</span> <span class="o">=</span> <span class="n">xEmbeddedFrames</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span><span class="n">nEmbeddedFrames</span><span class="p">,</span> <span class="n">xEmbeddedFramesIdx</span><span class="o">.</span><span class="n">getCount</span><span class="p">())</span> <span class="c">#Unexpected number of embedded frames reported</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">nCurrentFrameIdx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">xEmbeddedFramesIdx</span><span class="o">.</span><span class="n">getCount</span><span class="p">()):</span>
</span><span class='line'>            <span class="n">xEmbeddedFramesIdx</span><span class="o">.</span><span class="n">getByIndex</span><span class="p">(</span><span class="n">nCurrentFrameIdx</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checkGraphicFrames</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">xTGOS</span><span class="p">):</span>
</span><span class='line'>        <span class="n">vExpectedGraphicFrames</span> <span class="o">=</span> <span class="p">[</span><span class="s">&quot;graphics1&quot;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">nGraphicFrames</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">vExpectedGraphicFrames</span><span class="p">)</span>
</span><span class='line'>        <span class="n">xGraphicFrames</span> <span class="o">=</span> <span class="n">xTGOS</span><span class="o">.</span><span class="n">getGraphicObjects</span><span class="p">()</span>
</span><span class='line'>        <span class="n">nCurrentFrameIdx</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>        <span class="k">for</span> <span class="n">sFrameName</span> <span class="ow">in</span> <span class="n">xGraphicFrames</span><span class="o">.</span><span class="n">getElementNames</span><span class="p">():</span>
</span><span class='line'>            <span class="n">vExpectedGraphicFrames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>                <span class="c"># raises ValueError if not found</span>
</span><span class='line'>            <span class="n">xGraphicFrames</span><span class="o">.</span><span class="n">getByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span>
</span><span class='line'>                <span class="n">xGraphicFrames</span><span class="o">.</span><span class="n">hasByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">),</span>
</span><span class='line'>                <span class="s">&quot;Could not find graphics frame by name.&quot;</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span>
</span><span class='line'>            <span class="ow">not</span><span class="p">(</span><span class="n">vExpectedGraphicFrames</span><span class="p">),</span>
</span><span class='line'>            <span class="s">&quot;Missing expected graphics frames.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">xGraphicFramesIdx</span> <span class="o">=</span> <span class="n">xGraphicFrames</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span><span class="n">nGraphicFrames</span><span class="p">,</span><span class="n">xGraphicFramesIdx</span><span class="o">.</span><span class="n">getCount</span><span class="p">())</span> <span class="c">#Unexpected number of graphics frames reported</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">nCurrentFrameIdx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">xGraphicFramesIdx</span><span class="o">.</span><span class="n">getCount</span><span class="p">()):</span>
</span><span class='line'>            <span class="n">xGraphicFramesIdx</span><span class="o">.</span><span class="n">getByIndex</span><span class="p">(</span><span class="n">nCurrentFrameIdx</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">checkTextFrames</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">xTFS</span><span class="p">):</span>
</span><span class='line'>        <span class="n">vExpectedTextFrames</span><span class="o">=</span> <span class="p">[</span><span class="s">&quot;Frame1&quot;</span> <span class="p">,</span> <span class="s">&quot;Frame2&quot;</span><span class="p">]</span>
</span><span class='line'>        <span class="n">nTextFrames</span> <span class="o">=</span> <span class="nb">len</span><span class="p">(</span><span class="n">vExpectedTextFrames</span><span class="p">)</span>
</span><span class='line'>        <span class="n">xTextFrames</span> <span class="o">=</span> <span class="n">xTFS</span><span class="o">.</span><span class="n">getTextFrames</span><span class="p">()</span>
</span><span class='line'>        <span class="n">nCurrentFrameIdx</span><span class="o">=</span><span class="mi">0</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">sFrameName</span> <span class="ow">in</span> <span class="n">xTextFrames</span><span class="o">.</span><span class="n">getElementNames</span><span class="p">():</span>
</span><span class='line'>            <span class="n">vExpectedTextFrames</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>                <span class="c"># raises ValueError if not found</span>
</span><span class='line'>            <span class="n">xTextFrames</span><span class="o">.</span><span class="n">getByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">)</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span>
</span><span class='line'>                <span class="n">xTextFrames</span><span class="o">.</span><span class="n">hasByName</span><span class="p">(</span><span class="n">sFrameName</span><span class="p">),</span>
</span><span class='line'>                <span class="s">&quot;Could not find text frame by name.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertTrue</span><span class="p">(</span>
</span><span class='line'>            <span class="ow">not</span><span class="p">(</span><span class="n">vExpectedTextFrames</span><span class="p">),</span> <span class="s">&quot;Missing expected text frames.&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">xTextFramesIdx</span> <span class="o">=</span> <span class="n">xTextFrames</span>
</span><span class='line'>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">assertEqual</span><span class="p">(</span><span class="n">nTextFrames</span><span class="p">,</span> <span class="n">xTextFrames</span><span class="o">.</span><span class="n">getCount</span><span class="p">())</span> <span class="c">#Unexpected number of text frames reported</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">for</span> <span class="n">nCurrentFrameIdx</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">xTextFramesIdx</span><span class="o">.</span><span class="n">getCount</span><span class="p">()):</span>
</span><span class='line'>            <span class="n">xTextFramesIdx</span><span class="o">.</span><span class="n">getByIndex</span><span class="p">(</span><span class="n">nCurrentFrameIdx</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&quot;__main__&quot;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">unittest</span><span class="o">.</span><span class="n">main</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GDG DevFest - LibreOffice Katkı Süreci]]></title>
    <link href="http://kadertarlan.github.io/blog/2016/02/23/gdg-devfest-libreoffice-katki-sureci/"/>
    <updated>2016-02-23T01:26:54+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2016/02/23/gdg-devfest-libreoffice-katki-sureci</id>
    <content type="html"><![CDATA[<p>Merhaba bu yıl <font color=blue>GDG DevFest Istanbul-2015</font> etkinliğine ekip olarak katılıp <font color=#990000>LibreOffice Katkı Süreci ve Deneyimlerimizden</font> bahsettik.</p>

<p>Ben de etkinlikte konuşmacıydım ve test alanında yaptığım katkılardan bahsettim. Neleri anlatmış ve yapmışım tekrar bakmak isteyenler için bloğuma da eklemek istedim umarım faydalı olur.</p>

<blockquote><p><font color=#990000>Test</font> bir sistemin en küçük parçalarına kadar yapması gereken görevleri gerçekleştirip gerçekleştirmediğinin kontrolünün yapılması işlemidir.</p></blockquote>

<h5>YAZILIM YAŞAM DÖNGÜSÜ</h5>

<blockquote><p>Yazılım geliştirme döngüsünde <font color=#990000>denetleme, yönetilme, ölçülebilme </font> en önemli aşamalarımız.</p></blockquote>

<p>Yazılım parçalarını bu yaşam döngüsünde test ederek, geliştirmenin sonraki aşamalarını daha az hata ile ilerletmek istiyoruz. Bir bileşende yapılan değşişiklik diğer bileşenleri nasıl etkiledi bunu öğrenmek yazdığımız kodun kalitesini ölçmek önemli.</p>

<p>Yazılımın farklı platformalarda başarılı şekilde çalıştı mı beklenilen sağlandı mı? Bunlar sağlandı diyelim peki yazılan kod yük testlerinin altında da aynı şekilde çalıştı mı?  10 kullanıcı 100 kullanıcı 1000 kullanıcı son durum nedir?</p>

<h5>Kullanıcı Arayüzü(UI) Testi nedir?</h5>

<blockquote><p><font color=#990000>UI</font>, aslında arayüz tasarımıdır.</p></blockquote>

<p>Bilgisayarımızın tuşları bir arayüz tasarımı örneğidir. Tuşların yerleri, büyüklüğü, renkleri tasarımcının isteği doğrultusunda oluşur. Arayüz tasarımının internet dünyasındaki karşılığı ise butonlar, renkler, boşluklar gibi görsel tasarımlardır.</p>

<blockquote><p><font color=#990000>UI(User Interface) Test</font> , bu testler kodlanmış olan kullanıcı arayüzünün daha iyi şekilde, efektif, sorunsuz çalışmasının kontrolünü sağlayacak testlerdir. UI Test bir arayüz testidir.</p></blockquote>

<h5>Manul test nedir?</h5>

<blockquote><p>Kullanıcılar tarafından yazılımın test edilmesi işlemidir. Test işlemi <font color=grey>Yazılım Test Araçları</font> olmadan tamamen insanlar tarafından yapılır.</p></blockquote>

<p><font color=red>BugHunting</font>
LibreOffice sürüm öncesi ortaya çıkacak ürünün kalitesini ölçmek amacıyla tüm geliştirici ekibinde içinde bulunduğu belirli zaman dilimleri içerisinde hata yakalama etkinliği düzenliyor. Böylece manuel testler ile ürün düzgün çalışıyor mu, bir hata var mı, test edilmiş oluyor.</p>

<p>Hata bulunduysa <font color=#grey>Bugzilla</font> dediğimiz LibreOffice hata depolama aracına hatalarımızı raporluyoruz ve kontrolünü sağlıyoruz.</p>

<p>Burada işin içine kullanıcı arayüzü için oluşturulmuş <font color=grey>test durumları</font> giriyor.</p>

<blockquote><p><font color=#990000>Test durumları</font> gereksinimlere göre hazırladığımız, istenilen aksiyonları belirten ve bunları uyguladıktan sonra oluşmasını beklediğimiz sonuçları da belirttiğimiz belgelerdir.</p></blockquote>

<p> Test eden kişi hata aramak isterken bunu nasıl yapmalı? Bunun için şöyle düşünelim bir geliştirme yapıldı ve istenilen iki sayıyı topladık ve sonucu da bize ikilik tabana çevirip versin.</p>

<p> Test edecek kişiye; iki sayı girmesini, bunları toplamasını ve sonucun ikilik tabanda doğru şekilde geldi mi diye kontrolünü yapmasını isteyeceksiniz. Test durum belgelerimiz bu aşamaları anlatan rotamız olacak burada. Bir çok test durum belgesini depolayabildiğimiz bir araç geliyor gündeme, <font color=grey>Moztrap.</font></p>

<h5>Moztrap nedir?</h5>

<p>Bu tip büyük yazılımların özelliklerinin test edilmesi için farklı araçlar kullanılıyor. LibreOffice de bunun için <font color=grey>Moztrap</font> aracını kullanıyor. Moztrap, LibreOffice projesinde önemli bir araçtır.</p>

<blockquote><p><font color=#990000>Moztrap</font>, açık kaynak dağıtılmış, test durum yönetim sistemidir. <font color=#990000>Kullanıcı arayüzü(UI)</font> testlerinin tutulduğu bir platformdur. Bir çok manuel testi depoladığımız ve bunları çalıştırabildiğimiz bir ortam sunar.</p></blockquote>

<p>LibreOffice projesi bu aracı kullarak kalitesini daha da artırmayı amaçlar. Moztrap, yazılan test durumlarının her adımını çalıştırıp bu adımlar için <font color=green>Passed,</font> <font color=red>Failed,</font> <font color=#CCCC00>Invalidated </font> sonuçları ile raporlama yapar.</p>

<h5>Libreoffice manuel testlerini nasıl oluşturuyor?</h5>

<p>LibreOffice test mühendisleri Moztrap aracına test durum adımlarını yazıyorlar. Istenilen işletim sistemi üzerinde istenilen LibreOffice sürümü işaretlenerek hazırlanıyor bu belgeler.</p>

<p>Beklenilen adımlar yazıldıktan sonra bileşenin çalışmasını kontrol edebilmek için testimizi de anlamlı hale getirmek için  <font color=green>Verify</font> adımları ile beklenilen sonuçlar yazılır. Buradan yola çıkarak test gerçekler, beklenilen sağlanırsa <font color=green>Passed,</font> sağlanmaz ise <font color=red>Failed,</font>cevapları ile test durumunu incelenir.</p>

<h5>Automated UI Tests Nedir ?</h5>

<blockquote><p><font color=#990000>Automated UI</font> test bahsettiğimiz UI arayüz testlerinin otomatik hale getirilmesidir. Kodlanmış arayüzü testidir.</p></blockquote>

<h5>Otomasyon testlerin LibreOffice için önemi nedir?</h5>

<p>Birçok kullanıcı tarafından geliştirilen bu büyük projede herhangi bir kullanıcının yazdığı bir bileşen başka bir kodu tetikliyor olabilir. Bunu tek tek elle deneyip görmek çok zor bir iş. Bu yüzden LibreOffice için yazılan otomasyon testleri var siz bir bileşen geliştirdiğinizde ve bunu yüklediğinizde kodunuz öncelikle bu testlerden geçirilmeye çalışılıyor. Kodunuz testlerden geçemezse size hata mesajı dönüyor. Testten geçemeyen bir kod LibreOffice için geçerli değildir.</p>

<h5>Unit Test nedir?</h5>

<blockquote><p><font color=#990000>Unit test</font> yaparken temel amaç yazdığınız kodun her satırının başka bir kod tarafından otomatik olarak test edilmesidir.
Unit Test kodları yalnızca çalışması beklenen durumlar için değil var olan metodun vereceği hataları da test eder.</p></blockquote>

<h5>Unit testlerin LibreOffice için önemi nedir?</h5>

<p>LibreOffice projesi için hataların erken bulunup düzeltilebilmesi açısından bu sürecin en önemli aşamasını oluşturuyor.<br/>
Projeye eklenen her kod parçası için testler çalıştırılır. Bu sayede projede gözü kapalı değişiklik yapmak mümkün olabiliyor. Var olacak bir hatadan haberiniz olacak. Bunun anlamı sorun çok daha büyümeden ya da tasarımın içerisine girmeden sorunu çözmek demektir.</p>

<p>DevFest konuşmamızı yayınlamışlar. 16. dakikadan sonra anlattıklarımı sesli olarak da dinleyebilirsiniz. Kolay gelsin :)</p>

<p><a href="https://www.youtube.com/watch?v=BM-sun5eZY0"><img src="http://img.youtube.com/vi/BM-sun5eZY0/0.jpg" alt="IMAGE ALT TEXT HERE" /></a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[<font color=green>LibreOffice</font> Için Test Yazmak]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/11/03/libreofiice-icin-test-yazma/"/>
    <updated>2015-11-03T23:16:39+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/11/03/libreofiice-icin-test-yazma</id>
    <content type="html"><![CDATA[<p>Merhaba Arkadaşlar,  bu yıl Necdet Yücel hocamızın öncülüğü ile ÇOMÜ'den 10 kişilik bir ekiple LibreOffice için katkı sağlamaktayız. Ben de  LibreOffice için <font color=#990000>Unit Testler yazma, Kullanıcı Arayüzü Testlerini oluşturma ve Otomasyon Testleri</font> yazarak katkıcılar listesinde ve test ekibinde yer almaktayım. Bu aşamada yaptığım işleri blogumda paylaşarak sizleri de bilgilendirmeyi amaçlıyorum.</p>

<blockquote><p><font color=green>LibreOffice</font> Özgür ve Açık Kaynaklı Ofis yazılımıdır.  LibreOffice aşağıdaki bileşenleri içerir:<br/>
• <font color=blue> Writer; </font>kelime işlemci,<br/>
• <font color=green>Calc; </font> hesap tablosu uygulaması , <br/>
• <font color=brown>Impress; </font> sunu, <br/>
• <font color=#FF8000> Draw;  </font>çizim ve akış şeması uygulaması,<br/>
• <font color=purple> Base; </font>veritabanı ve veritabanı ön ucu <br/>
• <font color=gray>Math </font> matematik yazılımı</p></blockquote>

<p><font color=#FF3333>UI(User Interface) Test </font>, bu testler kodlanmış kullanıcı arayüzünün daha iyi şekilde, efektif, sorunsuz çalışmasının kontrolünü sağlayacak testlerdir.UI Test bir arayüz testidir.<br/>
<font color=#FF3333> Automated UI test</font> ise bu testlerin otomatik hale getirilmesidir.</p>

<p>Bu tip büyük yazılımların özelliklerinin test edilmesi için farklı araçlar kullanılıyor. LibreOffice de bunun için <a href="https://wiki.documentfoundation.org/MozTrap">Moztrap</a> aracını kullanıyor. Moztrap LibreOffice projesinde önemli bir araçtır. <font color=gray>Moztrap</font>, açık kaynak dağıtılmış,  test durum yönetim sistemidir. <font color=#FF3333> Kullanıcı arayüzü(UI)</font> testlerinin tutulduğu bir platformdur. Bir çok manuel testi depoladığımız ve bunları çalıştırabildiğimiz bir ortam sunar .</p>

<p>LibreOffice projesi bu aracı kullarak kalitesini daha da artırmayı amaçlar. <font color=gray>Moztrap</font>, yazılan test durumlarının depoladığımız ve çalıştırma sonucunda aldığımız çıktıları dökümante edebileceğimiz bir web sitesi. Testi belirlediğimiz bir sürüm için belirlediğimiz işletim sistemi özelliklerinde manuel olarak uyguluyoruz. Önceden yazılmış bu test adımları bu sürüm için çalışıyor mu? Hangi adım bu sürümde hata verdi bu durumları da <font color=green>Passed,</font> <font color=red>Failed,</font> <font color=#CCCC00>Invalidated </font>sonuçları ile raporlama yapar.</p>

<p>Ben de LibreOffice için Moztrapta <font color=#FF3333>Kullanıcı Arayüzü(UI)</font> testleri oluşturdum. Nasıl test case yazılır  anlatımını başka bir blogumda paylaşmıştım   <a href="http://kadertarlan.github.io/blog/2014/08/07/selenium-ikinci-asama/">buradan</a> inceleyebilirsiniz.
LibreOffice için yazdığım test durumlarını <a href="http://manual-test.libreoffice.org/manage/cases/">buradan</a> inceleyebilirsiniz.
Testleri okumanıza yardımcı olabilmek için ben de bir örnek üzerinden anlatayım istiyorum.</p>

<p>Aşağıdaki test  <font color=gray>“Making Text Superscript or Subscript” </font>  adı ile yazdığım bir test LibreOffice için yazılan test caselerin içinde bulabilirsiniz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Open</span> <span class="n">a</span> <span class="kp">new</span> <span class="no">Writer</span> <span class="n">document</span>
</span><span class='line'><span class="no">Fill</span> <span class="k">in</span> <span class="n">the</span> <span class="n">document</span> <span class="n">with</span> <span class="n">characters</span> <span class="p">(</span><span class="ss">example</span><span class="p">:</span> <span class="mi">12</span><span class="no">Mg2</span><span class="o">+</span><span class="p">)</span>
</span><span class='line'><span class="no">Select</span> <span class="n">the</span> <span class="n">characters</span> <span class="n">that</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="n">put</span> <span class="k">in</span> <span class="n">subscript</span> <span class="p">(</span><span class="no">Select</span> <span class="mi">12</span> <span class="k">for</span> <span class="mi">12</span><span class="no">Mg2</span><span class="o">+</span><span class="p">)</span>
</span><span class='line'><span class="no">Choose</span> <span class="s2">&quot;Format&quot;</span> <span class="n">menu</span> <span class="n">bar</span><span class="o">.</span> <span class="no">And</span> <span class="k">then</span> <span class="no">Select</span> <span class="s2">&quot;Character&quot;</span>
</span><span class='line'><span class="no">Click</span> <span class="n">the</span> <span class="s2">&quot;Position&quot;</span> <span class="n">tab</span><span class="o">.</span>
</span><span class='line'><span class="no">Select</span> <span class="n">the</span> <span class="s2">&quot;Subscript&quot;</span> <span class="n">option</span> <span class="k">for</span> <span class="n">position</span><span class="o">.</span> <span class="no">And</span> <span class="k">then</span> <span class="no">Click</span> <span class="no">OK</span>
</span><span class='line'>  <span class="o">-</span><span class="no">Verify</span> <span class="n">that</span> <span class="n">the</span> <span class="n">subscript</span> <span class="k">for</span> <span class="n">the</span> <span class="n">selected</span> <span class="n">character</span> <span class="p">(</span><span class="n">here</span> <span class="n">this</span> <span class="n">character</span> <span class="mi">12</span><span class="p">)</span>
</span><span class='line'><span class="no">Select</span> <span class="n">the</span> <span class="n">characters</span> <span class="n">that</span> <span class="n">you</span> <span class="n">want</span> <span class="n">to</span> <span class="n">put</span> <span class="k">in</span> <span class="no">Superscript</span> <span class="p">(</span><span class="no">Select</span> <span class="mi">2</span><span class="o">+</span> <span class="k">for</span> <span class="mi">12</span><span class="no">Mg2</span><span class="o">+</span><span class="p">)</span>
</span><span class='line'><span class="no">Choose</span> <span class="s2">&quot;Format&quot;</span> <span class="n">menu</span> <span class="n">bar</span><span class="o">.</span> <span class="no">And</span> <span class="k">then</span> <span class="no">Select</span> <span class="s2">&quot;Character&quot;</span>
</span><span class='line'><span class="no">Click</span> <span class="n">the</span> <span class="s2">&quot;Position&quot;</span> <span class="n">tab</span><span class="o">.</span>
</span><span class='line'><span class="no">Select</span> <span class="n">the</span> <span class="s2">&quot;Superscript&quot;</span> <span class="n">option</span> <span class="k">for</span> <span class="n">position</span><span class="o">.</span> <span class="no">And</span> <span class="k">then</span> <span class="no">Click</span> <span class="no">OK</span>
</span><span class='line'>  <span class="o">-</span><span class="no">Verify</span> <span class="n">that</span> <span class="n">the</span> <span class="n">superscript</span> <span class="k">for</span> <span class="n">the</span> <span class="n">selected</span> <span class="n">character</span> <span class="p">(</span><span class="n">here</span> <span class="n">this</span> <span class="n">character</span> <span class="mi">2</span><span class="o">+</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p> 12Mg2+→ <sub>12</sub>Mg2+  → <sub>12</sub>Mg<sup>2+</sup></p>

<p>Testi incelediğinizde görüyorsunuz ki aslında anlaşılması oldukça basit. Libreoffice Writer dökümanına örnek olarak yazılan “12Mg2+ “ değerindeki &ldquo;12&rdquo; değerini <font color=gray>subcsript</font> “2+” değerini ise <font color=gray>superscript</font> yapabilmek amaçlanıyor.</p>

<p>Writer bu işi düzgün yapabildi mi? <font color=gray> Subscript ve Superscript</font> özellikleri doğru çalışıyor mu? Beklediğimiz sonuç geldi mi? Herhangi başka bir gelişme bizim bu özelliklerimizi bozmuş olabilir ve burası efektif şekilde çalışmıyor olabilir. Bu özelliği farklı işletim sistemlerinde de çalışmasını kontrol etmek mümkün. Testin yapıldığı platformu seçip testi uyguladıktan sonra sonuçlarını not ediyoruz. Özellik çalışmıyorsa test <font color=red> Fail!</font>  verecek ve biz bunu Moztrap dökğmanına <font color=red> Fail!</font> olarak bildireceğiz. Böylece hangi özellikler hala bu sürümde düzgün çalışıyor, hangileri hata veriyor bilgileneceğiz.</p>

<p>Testin çalışmasını kontrol edebilmek için <font color=#00CCCC>Verify</font> adımları ile beklenilen sonuç yazılmıştır. Buradan yola çıkarak test gerçekler, beklenilen sağlanırsa <font color=#00CC00>Passed</font>, sağlanmaz ise <font color=red>Failed</font> cevapları ile test durumunu bildirmek mümkün.</p>

<p>Bu şekilde test durumu nedir, nasıl yazılır biraz olsun fikriniz olduğunu düşünüyorum. Sonraki blog yazılarımda LibreOffice için oluşturduğum <font color=#FF3333>Unit Test</font> ve <font color=#FF3333>Otomasyon testlerinden</font> de bahsedeceğim. Kolay gelsin.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jmeter Ile Performans Testi]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/10/04/jmeter-ile-performans-testi/"/>
    <updated>2015-10-04T04:35:31+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/10/04/jmeter-ile-performans-testi</id>
    <content type="html"><![CDATA[<h5>Performans ve Yük Testi nedir?</h5>

<blockquote><p><font color=red>Performans Testi</font> Yazdığınız uygulamanın normal koşullarda olması gereken performansa ulaşıp ulaşılmadığının kontrolünü sağladığımız testlerdir.</p>

<p><font color=red>Yük Testi</font> ise uygulamanıza maksimum kaç kullanıcı ile eriştiğimizde performans değişiminin denetlemesi işlemini yapan testlerdir. Artan sayıda kullanıcılar sisteme giriş yapıp sistemin dayanıklılığını ölçeriz.<br/>
Uygulamanıza aşırı yüklendiğinde sistemin nasıl tepki verdiğini görmek böylece mümkün oluyor. Aslında bu da sistemin dayanıklılığını ölçtüğümüz bir performans testidir.</p></blockquote>

<h5>Jmeter Kullanımı</h5>

<ul>
<li>Uygulamanız aynı anda kaç kullanıcı için sorunsuz çalışıyor?<br/>
Bu süreci test etmek için <font color=#FF3333>Web Performans Test</font> aracına ihtiyacımız var.</li>
</ul>


<blockquote><p><font color=red>Jmeter</font> bir Java uygulamasıdır. Performans ölçmek için yazılmış açık kaynaklı bir yazılımdır.JMeter ile yukarıda bahsettiğimiz maksimum kullanıcı ile yük testleri yapabileceğimiz bir platform sağlar bize.</p></blockquote>

<p>Uygulamanın beklenen performansın yakalayıp yakalamadığımızı test etmemizi sağlar.<br/>
<font color=gray>Eşzamanlı</font> olarak belirlediğiniz sayıda sanal kullanıcıyı oluşturup sisteme giriş yapmaya çalışır. Ve çıkan sonuçları bize <font color=gray>raporlar</font>.</p>

<p><font color=red>Jmeter</font> her türde Web uygulamaları için kullanılabilir. Adresini verdiğiniz uygulamaya erişip amaçlanan adımları sağlar.</p>

<p>Jmeter belirli test senaryoları için kullanmak mümkün.</p>

<p><font color=#990000>
•Jmeter'da kullanıcı tanımladıktan sonra test yapacağımız web sunucu bilgilerini giriyoruz. Ve buraya giriş yapma isteğinde bulunuyoruz. Belirli kullanıcı sayısı ile giriş yapıp sonuçlar denetlenebilir. Bu kullanıcıların hepsini aynı anda uygulamaya giriş yapmasını sağlayabilirsiniz.</p>

<p> •Saniye başına maksimum kullanıcı belirlenip giriş yapılmasını sağlanabilir ve bu bir döngü içinde kaç kez yapılacağı bildirilebilir.</p>

<p>•Kullanıcı sayısını birden başlatıp artan şekilde uygulamaya giriş yapmasını sağlayıp nerede patlayacağını görebilirsiniz.
</font></p>

<p>Bu ve benzeri senaryoları uygulayarak <font color=red>Jmeter</font> üzerinde test sonuçlarını, grafikler ile gözlemlememiz mümkün.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bamboo Ile Sürekli Entegrasyon]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/09/04/bamboo-ile-surekli-entegrasyon/"/>
    <updated>2015-09-04T04:35:31+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/09/04/bamboo-ile-surekli-entegrasyon</id>
    <content type="html"><![CDATA[<blockquote><p><font color=#990000>Sürekli Entegrasyon (Continuous Integration)</font>  bir proje ekibinin oluşturduğu kaynak kodun geliştirilme aşamasında sorunsuz ilerlemesini sağlamak için her değişiklikten sonra sistemimizin hala çalışır durumda olduğunu kontrol etmek amacıyla kullandığımız yöntemdir.</p></blockquote>

<p>Entegrasyon sürecini araçlar ile otomatik hale getirmek mümkün. Böylece entegrasyon hatalarını erkenden yakalayabiliyoruz.</p>

<p>Projede yapılan değişiklikten sonra yolladığınız her commit için Entegrasyon işlemini otomatik olarak aktif edebiliyoruz.
Aktif olan entegrasyon işlemimiz hataları ayıklayabilmek için testlere ihtiyaç duymakta. Yazdığınız tüm unit testler proje üzerinde, her commit sonrası uygulanıyor. Commit ettiğiniz değişiklğiniz projede bir hataya neden olduğunda testler hata veriyor ve Entegrasyon işlemimiz başarılı olarak amacını gerçekliyor.</p>

<p>Sürekli Entegrasyon uygulanan projeler için hatalar hızlı bir şekilde erkenden fark ediliyor.
<font color=#990000>Manuel testler</font> ile gözümüzden kaçabilecek en küçük hatalar bile bu sayede bulunabiliyor.
Yazılan otomasyon testleri her değişiklikte otomatik çalışmış oluyor. Bir kullanıcının bu testleri çalıştır komutunu vermeden testler sürekli olarak uygulanmış oluyor.</p>

<h5>Bamboo ile CI arasındaki ilişki</h5>

<blockquote><p><font color=blue>Bamboo</font> yazılım uygulamaları için sürüm yönetimini otomatikleştirir.  <font color=blue>Atlassian</font> tarafından geliştirilen <font color=blue>CI</font> sunucu yazılımıdır.</p></blockquote>

<p><font color=#990000>CI(Continous Integration)</font>, her yapılan değişikliğin sistemde sistemde sınanması işlemiydi. Yazılım sürecinde farklı modülleri en az hatada birleştirmek istiyoruz.  Böylece kalitemizi artırmayı hedefliyoruz.</p>

<p><font color=blue>Bamboo</font> uygulamaların inşasını ve testini koordine eder ve zamanlar. Böylece kurulumlar ve testler otomatikleştirilmiş olur.</p>

<p><font color=blue>Bamboo</font>’nun yanı sıra Java ile yazılmış özgür araç olan <font color=red>Jenkins</font> de kullanılabilir.</p>

<h5>Bamboo için aşağıdakilere ihtiyaç vardır:</h5>

<p>•Projemizin bulunduğu kod depomuz(  Buradan test etmek istediğimiz projemizin kodlarına erişeceğiz.) <br/>
•İnşa betikleri (Koduna erişilen projeyi Bamboo için test edilmeye hazır vaziyette kurulumunu sağlacağız.)<br/>
•Testler (Asıl amacımız olan yer burası, kontrolleri sağlayacak birim testlerimiz yazılmış olacak.)</p>

<blockquote><p><font color=blue>Bamboo</font>, projemiz için kurulum ve test sürecini yürüten denetleyen aracımız.</p></blockquote>

<p> Kurulum ve testleri çalıştıracak olan komutlar geliştiricinin kodu commit etmesiyle otomatik olarak tetiklenir. Tetikleme sonucunda projemizin bulunduğu kod deposundan kodumuz çekilir. Çekilen kod kullanılarak yazmış olduğumuz betik ile kurulum sağlanacak. Bir kurulum dosyası oluşturuluyor. <font color=blue>Bamboo</font> da bu dosyayı kurulumu yapacağımız makinaya gönderir. Makina betikte belirtildiği şekilde bu dosyadan kurulumu gerçekler.</p>

<p> Kurulumdan sonra yazılmış olan otomasyon birim testleri aktif hale gelecek ve proje üzerinde yürütülecek. <font color=gray>Bamboo bütün bu süreçleri yönetir.</font> Testler bittiğinde sonuçları <font color=red>raporlar.</font></p>

<p> Tüm bu adımlar bir commit mesajı ile aktif olurken Bamboo ile bunları manuel gerçeklemek de mümkün. Var olan projenizi temiz bir şekilde bir makinaya kurup, tüm testleri üzerinde çalıştırıp, sonuçları görmek için <font color=blue>Bamboo</font> üzerinden <font color=red>Run!</font> demeniz yeterlidir.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Appium Ile Mobil Test]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/08/04/appium-ile-mobil-test/"/>
    <updated>2015-08-04T04:35:31+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/08/04/appium-ile-mobil-test</id>
    <content type="html"><![CDATA[<p>Web uygulamarımızı test etmek için pek çok araç var ancak günden güne popüler olan mobil uygulamalarımızın testini yapmak istediğimiz zaman neler kullanmalıyız? Bunun için geliştirilmiş <font color=#990000>Appium</font> aracından bahsedeceğim;</p>

<p><font color=#990000>Appium</font> açık kaynak kodlu mobil test aracıdır.  <font color=blue>iOS, Android, FirefoxOS</font> desteği bulunmakta bu aracın. IOS ve Android için yazılmış uygulamalarınızın geliştirme aşamasında ve sonrasında testini yapmak mümkün oluyor. <font color=#FF3333> Kullanıcı arayüzü(UI)</font> testlerini yazıp bunu <font color=#990000>Appium</font> üzerinde çalıştırıp aksaklıklar varsa bundan haberdar oluyoruz.<br/>
Bu testleri otomatikleştirip, <font color=#FF3333>Continous Integration(CI)</font> sağlamak da mümkün. Her geliştirme sonrası sizin önceden yazılmış testi <font color=red>Run!</font> etmeniz yeterli olacaktır.</p>

<p>Mobil test alanında çok sayıda farklı platform ve cihaz oluşunun farkındayız. Yazılmış uygulamanızın hangi platformda doğru çalıştığını hangisinde patladığını bulmanız oldukça zor, her cihazdan bir örnek alıp testi manuel gerçekleştirmek ise çılgınca bir fikir olabilir.<br/>
Ancak  <font color=#990000>Appium</font> kullanarak manuel yapmak istediğin testi  <font color=#990000>Appium'</font>a desteklediği herhangi bir programlama dili ile yazarsanız, bu testi otomatikleştirerek her seferinde istediğiniz her platformda çalıştırma imkanınız olacak.</p>

<blockquote><p>Appium desteklediği diller ise;<br/>
<font color=#006600>Java, Objective-C, JavaScript, Node.js, PHP, Python, Ruby, C#, Clojure, Perl </font></p></blockquote>

<p><font color=gray>Yazılım testlerini manuel testlerden arındırmanın yanında onları otomatikleştirme ve bunu mobil için her mobil cihaz modelini uygulayabilme fikri bana oldukça kullanışlı müthiş bir özellik geliyor, yaygın olmayan bu yöntem keşke daha çok kullanılabilse. </font></p>

<p>Kurulum aşamasından da biraz bahsetmek istiyorum.<br/>
<font color=#990000>Appium</font> için <font color=blue>Node.js</font> kurmamız gerekiyor. Bunun için ;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="err">$</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="err">$</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="o">-</span><span class="n">y</span> <span class="n">python</span><span class="o">-</span><span class="n">software</span><span class="o">-</span><span class="n">properties</span> <span class="n">python</span> <span class="n">g</span><span class="o">++</span> <span class="n">make</span>
</span><span class='line'><span class="err">$</span> <span class="n">sudo</span> <span class="n">add</span><span class="o">-</span><span class="n">apt</span><span class="o">-</span><span class="n">repository</span> <span class="n">ppa</span><span class="p">:</span><span class="n">chris</span><span class="o">-</span><span class="n">lea</span><span class="o">/</span><span class="n">node</span><span class="o">.</span><span class="n">js</span>
</span><span class='line'><span class="err">$</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">update</span>
</span><span class='line'><span class="err">$</span> <span class="n">sudo</span> <span class="n">apt</span><span class="o">-</span><span class="n">get</span> <span class="n">install</span> <span class="n">nodejs</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu aşamadan sonra aşağıda verdiğim komutta hata almıştım</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">grunt</span><span class="o">-</span><span class="n">cli</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span> <span class="ss">Error</span><span class="p">:</span> <span class="no">EACCES</span><span class="p">,</span> <span class="n">mkdir</span> <span class="s1">&#39;/home/kader/.npm/sigmund/1.0.1&#39;</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span>  <span class="p">{</span> <span class="o">[</span><span class="ss">Error</span><span class="p">:</span> <span class="no">EACCES</span><span class="p">,</span> <span class="n">mkdir</span> <span class="s1">&#39;/home/kader/.npm/sigmund/1.0.1&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span>   <span class="ss">errno</span><span class="p">:</span> <span class="mi">3</span><span class="p">,</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span>   <span class="ss">code</span><span class="p">:</span> <span class="s1">&#39;EACCES&#39;</span><span class="p">,</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span>   <span class="ss">path</span><span class="p">:</span> <span class="s1">&#39;/home/kader/.npm/sigmund/1.0.1&#39;</span><span class="p">,</span>
</span><span class='line'><span class="n">npm</span> <span class="no">ERR</span><span class="o">!</span>   <span class="ss">parent</span><span class="p">:</span> <span class="s1">&#39;minimatch&#39;</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Böyle bir hata alırsanız, aşağıdaki adımları uygulayalım.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'> <span class="err">$</span> <span class="n">export</span> <span class="n">NPM_PREFIX</span><span class="o">=</span><span class="err">$</span><span class="n">HOME</span><span class="o">/</span><span class="n">node</span>
</span><span class='line'> <span class="err">$</span> <span class="n">alias</span> <span class="n">npmg</span><span class="o">=</span><span class="s">&quot;npm -g --prefix $NPM_PREFIX&quot;</span>
</span><span class='line'> <span class="err">$</span> <span class="n">sudo</span> <span class="n">chown</span> <span class="o">-</span><span class="n">R</span> <span class="sb">`whoami`</span> <span class="o">~/.</span><span class="n">npm</span>
</span><span class='line'> <span class="err">$</span>  <span class="n">npm</span> <span class="n">install</span> <span class="o">-</span><span class="n">g</span> <span class="n">grunt</span><span class="o">-</span><span class="n">cli</span>
</span><span class='line'><span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">kader</span><span class="o">/.</span><span class="n">npm</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">grunt</span> <span class="o">-&gt;</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">kader</span><span class="o">/.</span><span class="n">npm</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">node_modules</span><span class="o">/</span><span class="n">grunt</span><span class="o">-</span><span class="n">cli</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">grunt</span>
</span><span class='line'><span class="n">grunt</span><span class="o">-</span><span class="n">cli</span><span class="nd">@0.1.13</span> <span class="o">/</span><span class="n">home</span><span class="o">/</span><span class="n">kader</span><span class="o">/.</span><span class="n">npm</span><span class="o">-</span><span class="n">packages</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">node_modules</span><span class="o">/</span><span class="n">grunt</span><span class="o">-</span><span class="n">cli</span>
</span><span class='line'><span class="err">├──</span> <span class="n">resolve</span><span class="nd">@0.3.1</span>
</span><span class='line'><span class="err">├──</span> <span class="n">nopt</span><span class="nd">@1.0.10</span> <span class="p">(</span><span class="n">abbrev</span><span class="nd">@1.0.7</span><span class="p">)</span>
</span><span class='line'><span class="err">└──</span> <span class="n">findup</span><span class="o">-</span><span class="n">sync</span><span class="nd">@0.1.3</span> <span class="p">(</span><span class="n">lodash</span><span class="nd">@2.4.2</span><span class="p">,</span> <span class="n">glob</span><span class="nd">@3.2.11</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Şimdi her şey yolunda. Ve <font color=#990000>Appium</font> kurmaya hazırız!</p>

<p><code>$ npm install -g appium</code><br/>
<code>$ appium &amp;</code></p>

<p><font color=#990000>Appium</font>&lsquo;u Python ile kullandım ben onun için de <font color=purple>Appium Python Client</font> kurulumu;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">git</span> <span class="nb">clone</span> <span class="n">git</span><span class="vi">@github</span><span class="o">.</span><span class="n">com</span><span class="ss">:appium</span><span class="o">/</span><span class="n">python</span><span class="o">-</span><span class="n">client</span><span class="o">.</span><span class="n">git</span>
</span><span class='line'><span class="err">$</span> <span class="n">cd</span> <span class="n">python</span><span class="o">-</span><span class="n">client</span>
</span><span class='line'><span class="err">$</span> <span class="n">python</span> <span class="n">setup</span><span class="o">.</span><span class="n">py</span> <span class="n">install</span>
</span></code></pre></td></tr></table></div></figure>


<p>veya</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">$</span> <span class="n">pip</span> <span class="n">install</span> <span class="no">Appium</span><span class="o">-</span><span class="no">Python</span><span class="o">-</span><span class="no">Client</span>
</span></code></pre></td></tr></table></div></figure>


<p>Herşey tamamlandıktan sonra test yazma aşamasında oluşturacağımız test dosyalarına<br/>
<code>from appium import webdriver</code><br/>
adımını dahil etmeyi unutmayalım.</p>

<p>Test dosyalarında adımları yazabilmek için <font color=#990000>Appium-Python</font> test diline hakim olmak gerekiyor.<br/>
Bir kaç test adımı örnek vermek gerekirse;</p>

<p>Dosyamızda Patformumuzun <font color=blue>Android</font> olmasını ve sürümünün 4.2 olmasını istediğimiz zaman;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="k">def</span> <span class="nf">setUp</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
</span><span class='line'>    <span class="n">desired_caps</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>    <span class="n">desired_caps</span><span class="p">[</span><span class="s">&#39;platformName&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Android&#39;</span>
</span><span class='line'>    <span class="n">desired_caps</span><span class="p">[</span><span class="s">&#39;platformVersion&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;4.2&#39;</span>
</span><span class='line'>    <span class="n">desired_caps</span><span class="p">[</span><span class="s">&#39;deviceName&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="s">&#39;Android Emulator&#39;</span>
</span><span class='line'>    <span class="n">desired_caps</span><span class="p">[</span><span class="s">&#39;app&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">PATH</span><span class="p">(</span> <span class="s">&#39;../../../&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>   <font color=gray>#şu anki içeriğimizi çeksin <br/>
   <code>current = driver.current_context</code></p>

<p>   #HTML ağacındaki istenilen yeri bulsun<br/>
   <code>textfield = self.driver.find_elements_by_class_name("android.EditText")</code></p>

<p>   #Bulunan text alanının ilk boşluğuna mail adresi yazsın<br/>
   <code>textfields[0].send_keys("blabla@appium.io")</code></p>

<p>   #Mail doğru mu kontrol etsin. Olması gerekenle var olan değerler eşit mi?
   <code>self.assertEqual('blabla@appium.io', textfields[0].text)</code></p>

<p>   #Ekrana gelen mesajı onaylasın<br/>
   <code>alert = self.driver.switch_to_alert()</code><br/>
   <code>alert.accept()</code></p>

<p>   #Gönder tuşuna tıklasın<br/>
   <code>self.driver.find_element_by_accessibility_id("Save").click()</code></p>

<p>   #Dokunmatik telefondaki hareket etsin<br/>
   <code>action = TouchAction(self.driver);</code><br/>
   <code>action.long_press(start).move_to(end).release().perform()</code></p>

<p>   #Belitrilen xpath adresinde pano değeri görünmüyor mu kontrol etsin<br/>
   <code>pano = self.driver.find_element_by_xpath('//[]')</code><br/>
   <code>self.assertIsNotNone(pano)</code>   </font></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RSpec Nedir?]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/02/09/rspec-nedir/"/>
    <updated>2015-02-09T19:41:16+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/02/09/rspec-nedir</id>
    <content type="html"><![CDATA[<blockquote><p><font color=red>Rspec</font> , Ruby dili ile yazılmış, ruby kodlarınızın testlerinde kullanılan bir test çatısıdır.</p></blockquote>

<p>RSpec ile ilk test kodlarımızı yazmaya başlayalım. Bunun için öncelikle rspec kurmalıyız. Dizinimizi yaratıp içine giriyoruz.<br/>
<code>mkdir example_rspec</code><br/>
<code>cd exapmle_rspec</code><br/>
<code>gem install rspec</code></p>

<p>Sonraki komutumuz, <br/>
<code>rspec --init</code><br/>
çıktımız ise;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="n">create</span>   <span class="o">.</span><span class="n">rspec</span>
</span><span class='line'>  <span class="n">create</span>   <span class="n">spec</span><span class="o">/</span><span class="n">spec_helper</span><span class="o">.</span><span class="n">rb</span>
</span></code></pre></td></tr></table></div></figure>


<p>Varsayılan olarak <font color=brown>.rspec</font> ve <font color=brown>spec_helper.rb</font> dosyalarını oluşturuyor.</p>

<blockquote><p><font color=brown>.rspec</font> gizli dosya olarak oluşturuluyor.<br/>
Bu dosya varsayılan olarak configurasyon seçeneklerini içeriyor.<br/>
İsterseniz bunları uygulamabilirsiniz veya deiğştirebilirsiniz.<br/>
Bu dosyada yer alan bazı seçenekler,</p></blockquote>

<p><font color=purple>&ndash;format progress:</font> Spec çalışmasında ilerlemeyi görüntüler. <br/>
<font color=purple>&ndash;out :</font> belirtilen dosyaya yönlendirme yapar.<br/>
<font color=purple>&ndash;color:</font> terminal çıktısında renk kullanır. Yeşil valid , red invalid testler için kullanılır.<br/>
<font color=purple>&ndash;fail-fast :</font> fail veren ilk testte spec durur.<br/>
<font color=purple>&ndash;format html:</font> Görüntüler html biçiminde bir dosyaya yönlendirilebilir. <br/>
Tüm seçeneklere erişmek isterseniz  <code>rspec --help</code> komutunu verebilirsiniz.</p>

<blockquote><p>Şimdide ana dizinimizin içinde <font color=brown>lib</font> dizini oluşturup kodlarımızı yazacağımız <font color=brown>ornek.rb</font> dosyası oluşturacağız.<br/>
Ayrıca ana dizinimizde <font color=purple>spec</font> dizinimizin altında bir <font color=purple>lib</font> dizini ve testlerimiz için <font color=purple>ornek_spec.rb</font> dosyası oluşturalım.</p></blockquote>

<p>project source code: <code>mkdir lib -&gt; cd lib -&gt; nano ornek.rb</code><br/>
rspec code:  <code>spec/lib/ornek_spec.rb</code></p>

<p>Burada <code>ornek_rspec.rb</code> dosyamıza test adımlarımızı yazacağız. <br/>
<code>ornek.rb</code> dosyamıza ise kodumuzun  kendisini yazacağız.</p>

<p>Şimdi <code>ornek_spec.rb</code> dosyamızı açıp içine,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;rspec&quot;</span>
</span><span class='line'><span class="nb">require</span> <span class="s2">&quot;spec_helper&quot;</span>
</span><span class='line'><span class="n">describe</span> <span class="s2">&quot;a example&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">it</span> <span class="s2">&quot;is name Ornek&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color=red>describe</font> ile oluturacağımız testi tanımlıyoruz.<br/>
<font color=red>it</font> oluşturulan testin tanımını yapıyoruz.</p>

<p>Kodumuzu yazıp kaydediyoruz ve <code>rspec spec/lib/ornek_spec.rb</code> komutu ile konsolda çalıştırdığımızda çıktımız;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Pending</span><span class="p">:</span>
</span><span class='line'>  <span class="n">a</span> <span class="n">example</span> <span class="n">is</span> <span class="nb">name</span> <span class="no">Ornek</span>
</span><span class='line'>    <span class="c1"># Not yet implemented</span>
</span><span class='line'>    <span class="c1"># ./spec/lib/ornek_spec.rb:4</span>
</span><span class='line'>
</span><span class='line'><span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0005</span><span class="mi">9</span> <span class="n">seconds</span> <span class="p">(</span><span class="n">files</span> <span class="n">took</span> <span class="mi">0</span><span class="o">.</span><span class="mi">10746</span> <span class="n">seconds</span> <span class="n">to</span> <span class="nb">load</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span> <span class="n">example</span><span class="p">,</span> <span class="mi">0</span> <span class="n">failures</span><span class="p">,</span> <span class="mi">1</span> <span class="n">pending</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Burada <font color=purple>Pending</font> ile  <font color=purple>Not yet implemented</font> çıktısı alıyoruz, kodumuzda şöyle bir değişiklik yaparsak;</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s2">&quot;spec_helper&quot;</span>
</span><span class='line'><span class="c1">#describe &quot;a exapmle&quot; do</span>
</span><span class='line'><span class="n">describe</span> <span class="no">Example</span> <span class="k">do</span>
</span><span class='line'> <span class="n">it</span> <span class="s2">&quot;is name Ornek&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kodumuzu kaydedip  <code>rspec spec/lib/ornek_spec.rb</code> komutuyla tekrar çalıştırırsak,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="sr">/example_rspec/s</span><span class="n">pec</span><span class="o">/</span><span class="n">lib</span><span class="o">/</span><span class="n">example_spectop</span> <span class="p">(</span><span class="n">required</span><span class="p">)</span><span class="o">&gt;</span> <span class="n">initialized</span> <span class="n">constant</span> <span class="no">Example</span> <span class="p">(</span><span class="no">NameError</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color=brown>Uninitialized</font> hatası aldık çünkü Example classımız henüz yok.</p>

<blockquote><p>Burada önce testi yazıp, çalıştırıp, Fail aldık. Testin verdiği çıktıya göre de yeterli kodumuzu yazıp Faili, Pass edeceğiz.
Bu da <font color=red>Test Driven Development (TDD)</font> yapısına uymakta.</p></blockquote>

<p>Bunun için <code>lib/ornek.rb</code> dosyamızda,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Example</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Şimdilik Classımızı oluşturmuş olduk. Test çalıştığında Classı bulamadım hatası vermeyecek.<br/>
Bu classı da <code>spec/lib/ornek_spec.rb</code> dosyamıza haber vereceğiz. Onu da <code>require "example"</code> komutunu  <code>lib/ornek_spec.rb</code> dosyamıza ekleyerek sağlayacağız, ekledikten sonra;</p>

<p><code>spec/lib/ornek_spec.rb</code> komutunu verdiğimizde,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="ss">Pending</span><span class="p">:</span>
</span><span class='line'>  <span class="no">Example</span> <span class="n">is</span> <span class="nb">name</span> <span class="no">Ornek</span>
</span><span class='line'>    <span class="c1"># Not yet implemented</span>
</span><span class='line'>    <span class="c1"># ./spec/lib/ornek_spec.rb:5</span>
</span><span class='line'>
</span><span class='line'><span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0002</span><span class="mi">9</span> <span class="n">seconds</span> <span class="p">(</span><span class="n">files</span> <span class="n">took</span> <span class="mi">0</span><span class="o">.</span><span class="mi">10765</span> <span class="n">seconds</span> <span class="n">to</span> <span class="nb">load</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span> <span class="n">example</span><span class="p">,</span> <span class="mi">0</span> <span class="n">failures</span><span class="p">,</span> <span class="mi">1</span> <span class="n">pending</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Gördüğünüz gibi hata almadık. Fakat hala implement edilmediğini söylüyor.</p>

<p>Şimdi de <code>spec/lib/ornek_spec.rb</code> dosyamıza bişeyler dolduralım;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">it</span> <span class="s2">&quot;is name Ornek&quot;</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">new_example</span> <span class="o">=</span><span class="no">Example</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'>  <span class="n">new_example</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s1">&#39;Ornek&#39;</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kodumuz da yeni bir Ornek methodu oluştuğunda ve adının Ornek olmasını istediğimizi söyledik.</p>

<p>Testimiz çalıştığında yeni oluşan örnek methodunun adını kontrol edip bunun &lsquo;Ornek&rsquo; olup olmadığını kontrol edecek.<br/>
Eğer adı &lsquo;Ornek&rsquo; ise testimiz <font color=green>Pass</font> edecek değilse <font color=red>Fail</font> edecek.</p>

<p>Testimizi kaydettikten sonra <code>rspec spec/lib/example_spec.rb</code> komutunu kullanarak çalıştırıyoruz ve çıktımız,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="mi">1</span><span class="p">)</span> <span class="n">E</span> <span class="n">is</span> <span class="nb">name</span> <span class="no">Ornek</span>
</span><span class='line'>     <span class="no">Failure</span><span class="o">/</span><span class="ss">Error</span><span class="p">:</span> <span class="n">new_example</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">should</span> <span class="o">==</span> <span class="s1">&#39;Ornek&#39;</span>
</span><span class='line'>     <span class="ss">NoMethodError</span><span class="p">:</span>
</span><span class='line'>       <span class="n">undefined</span> <span class="nb">method</span> <span class="sb">`name&#39; for #&lt;Example:0x007f5f89721c40&gt;</span>
</span><span class='line'><span class="sb">     # ./spec/lib/ornek_spec.rb:7:in `</span><span class="n">block</span> <span class="p">(</span><span class="mi">2</span> <span class="n">levels</span><span class="p">)</span> <span class="k">in</span> <span class="o">&lt;</span><span class="n">top</span> <span class="p">(</span><span class="n">required</span><span class="p">)</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00045</span> <span class="n">seconds</span> <span class="p">(</span><span class="n">files</span> <span class="n">took</span> <span class="mi">0</span><span class="o">.</span><span class="mi">1093</span> <span class="n">seconds</span> <span class="n">to</span> <span class="nb">load</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span> <span class="n">example</span><span class="p">,</span> <span class="mi">1</span> <span class="n">failure</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color=brown>NoMethodError</font> hatamızı aldık. Hatırlarsanız boş bir Class oluşturmuştuk, boş Classa gitti ve Ornek adında bir method bulamadı.</p>

<p>Şimdi kod parçamızdaki Classımızı hatamızı yok edecek şekilde düzenlemeliyiz.<br/>
Kırmızıyı yeşile çevirme aşaması. Değişikliklerimizi source kodumuzda yapacağız ki testimiz fail vermesin.</p>

<p><code>nano lib/ornek.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Example</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="s1">&#39;Ornek&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Testimizi <code>rspec spec/lib/ornek_spec.rb</code> komutumuzla tekrar calıştırdığımızda,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Finished</span> <span class="k">in</span> <span class="mi">0</span><span class="o">.</span><span class="mo">00212</span> <span class="n">seconds</span> <span class="p">(</span><span class="n">files</span> <span class="n">took</span> <span class="mi">0</span><span class="o">.</span><span class="mi">11077</span> <span class="n">seconds</span> <span class="n">to</span> <span class="nb">load</span><span class="p">)</span>
</span><span class='line'><span class="mi">1</span> <span class="n">example</span><span class="p">,</span> <span class="mi">0</span> <span class="n">failures</span>
</span></code></pre></td></tr></table></div></figure>


<p>Görüyoruz ki kırmızı yazımız yeşile dönmüş durumda. Testimiz Fail vermedi.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TDD Ve BDD Nedir?]]></title>
    <link href="http://kadertarlan.github.io/blog/2015/01/20/tdd-ve-bdd-nedir/"/>
    <updated>2015-01-20T09:40:23+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2015/01/20/tdd-ve-bdd-nedir</id>
    <content type="html"><![CDATA[<p><font color=red>TDD ve BDD</font></p>

<blockquote><p><font color=brown>Test Driven Development</font> nedir ?<br/>
  Burada mantık, önce testi yazacaksın sonra testi geçen kodları yazacaksın.<br/>
Belki size ters gelebilir ama durum aynen böyle.</p></blockquote>

<p>• Hiç bir kod yazmadan önce oluşturduğumuz testi çalıştrıyoruz, doğal olarak test adımları gerçekleyemediği için başarısız oluyor.</p>

<p>• Daha sonra bu testi doğru çalıştıracak kod parçasını yazıyoruz.</p>

<p>• İçeriği dolan kodlarla testin çalışacağı temel şekilleniyor. Testimizi şimdi çalıştırdığımızda içeriği dolmuş test parçası amacımızı gerçeklediğinden testimiz çalışmış, yazılan kodlar da testten başarı ile geçmiş oluyor.</p>

<p><img src="http://i.imgur.com/gwdBWy9.png"></p>

<p>Olaya <font color=brown>TDD</font> ile baktığımız zaman <font color=red>red/</font><font color=green>green/</font><font color=#FFCC00>refactor</font> tasarımları gelecek gözümüze.</p>

<blockquote><p>Eğer kodumuzu yazmayı bitirdikten sonra testleri yazmaya başlarsak buradaki patlayacağımızı öğrendik artık. Patlayan yerleri sürekli düzeltmek yerine test formları ile sorumlulukları belirleyip ilerlemek daha mantıklı.</p></blockquote>

<p>• Fail aldığımız yerde fail yok edecek yeterli bir kodu yazmak işimizi görecek. <br/>
• Kodumuz pass döndüğünde herşey yolundadır.
• En son aşamada kodumuza tekrar dönüp, tekrarlı yerleri silip kodumuzu düzenleriz (refactoring).</p>

<blockquote><p>O zaman sıramız söyle olacak önce bir test çalıştıracağız <font color=red>fail</font> dönecek bunu <font color=green>pass</font> yapacak hale getireceğiz sonra <font color=#FFCC00>refactor</font> edeceğiz.</p></blockquote>

<p>Önce test yazmak bizim olası hatalar yapmamızı engeller ve test adımlarını uygulaya uygulaya gittiğimizden büyük kod parçalarını da hatasız oluşturmayı sağlar.</p>

<blockquote><p><font color=brown>Behaviour Driven Development</font> nedir ?<br/>
Bu yöntem hem yazılımı daha test odaklı yapar hem de developerın yazdığı kodları , işi yaptıran kişinin de anlamasını sağlıyor.<br/>
 Burada konuşma dili gibi yazdığımız için anlaşılması da kolay oluyor.</p></blockquote>

<p>• Ben bir [X] olarak<br/>
• [Y]&lsquo;yi yapmak istiyorum<br/>
• Böylece [Z] olur</p>

<blockquote><p>Burada Y herhangi bir özellik, Z bu özelliğin getirdiği artı, X ise Y'yi uygulayacak kullanıcı veya bir faktördür.
Yukarıdaki adımları BDD da yazımı ;</p></blockquote>

<p><font color=purple>Given</font><br/>
<font color=brown>When</font> <br/>
<font color=red>Then</font></p>

<p><em>&ndash;Bir kullanıcı dosya yükler&ndash;</em><br/>
• Ben bir kullanıcı olarak<br/>
• Dropbox hesabıma dosya yüklemek istiyorum<br/>
• Böylece dosyalarımı daha güvenli şekilde saklamış olurum.</p>

<p>Burada senaryomuzun gerçekleşmesi için bir Dropbox hesabımız olmalı ve yüklenecek bir dosyamız olmalı.<br/>
Bu senaryomuzu BDD ile <font color=red> given - when - then  </font> kullanarak yazacak olursak;</p>

<p>&ndash;Bir hesabımız var ve yüklenecek dosyaya sahibiz;</p>

<p>• <font color=purple>Given</font> var olan bir hesap And yüklenecek dosya</p>

<p>• <font color=brown>When</font> kullanıcı dosya yüklemek istediği zaman</p>

<p>• <font color=red>Then</font> dosyanın dropbox hesabına yüklendiğine emin ol</p>

<p>Gördüğünüz gibi kullanımı oldukça basit , konuşur gibi test adımları oluşturuyoruz. Yapmak istediğimizi ve beklentimizi bu kalıplarda oluşturmuş oluyoruz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selenium Ve BrowserStack]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/08/20/selenium-ve-browserstack/"/>
    <updated>2014-08-20T00:27:52+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/08/20/selenium-ve-browserstack</id>
    <content type="html"><![CDATA[<p>Selenium Senaryomuzdan yola çıkarak Selenium Testimizi yazdık. Şimdi kendi localimizde düzgün çalışan testimiz acaba farklı işletim sistemlerinde ve farklı browserlarda onların farklı sürümlerinde de sorunsuz çalışıyor mu?</p>

<p>Web tasarımcıların en büyük sorunlarından birisi ortaya çıkan tasarımın farklı tarayıcılarda farklı şekilde görüntülenmesidir. Bunun nedeni yazılan <font color=purple>HTML, CSS veya javascript</font> kodlarının her tarayıcıda farklı şekilde yorumlanmasıdır.</p>

<p>Ben Linuxta Firefox kullanıyorum ve testlerimi bunlar üzerinden yazıyorum. Fakat oluşturduğunuz siteyi kullanan kişiler<font color=purple> Internet Explorer, Mozilla, Chrome, Firefox, Opera, Safari hatta iOS ve Android </font>gibi farklı tarayıcılardan sitenize erişmek isteyebilir. Bu yüzden oluşturduğunuz sitenin bu tarayıcıların hepsinde düzgün bir şekilde çalışması gerekir.</p>

<p>Oluşturduğunuz herhangi bir veriyi değişik tarayıcılarda test etmek gerçekten zordur.Bunun için bir çok tarayıcıda , platformda manuel test yapmak gerekir.<br/>
Browserstack ise 300'den fazla farklı tarayıcıda test etme imkanı ile farklı işletim sistemi , farklı tarayıcılar , farklı sürümlerle sitemizi test edip, ekran görüntüsünü bizimle paylaşır.</p>

<p>Browserstack bu alanda oldukça iyi, ancak ücretli. Denemek için ilk yarım saat ücretsiz. <a href="http://www.browserstack.com/screenshots">http://www.browserstack.com/screenshots</a> adresi ile sitesine girip üyelik alabilirsiniz.</p>

<p><img src="http://i.imgur.com/wWeZXAV.jpg"></p>

<p>Senaryosunu ve Selenium testini oluşturduğumuz testimizi Selenium'da <font color=red> Python, Ruby, Java ve CSharp</font> dillerini kullanabilecegimiz test case’lere dönüştürürüz. Çevirme işlemini Selenium bizim için yapıyor.</p>

<p>Selenium’un kullanmis oldugu kodlari istedigimiz dile dönüştürmek için <font color=purple> File</font> menusunden<font color=purple>  Export Test Case As… </font>‘i tikliyoruz. Menunun alt menüsünde ise dönüştürmek isteiğimiz dili seçiyoruz.
Bizim yazdığımız test üzeriden gidersek biz <font color=purple>Ruby'e</font> çevireceğiz;</p>

<p><img src="http://i.imgur.com/8bwWLQj.jpg"></p>

<p><font color=purple>Selenium</font>kodlarımız bu şekilde otomatik olarak <font color=purple>Ruby</font> kodlarına dönüşmüş olur;</p>

<p><img src="http://i.imgur.com/03iFFrF.jpg"></p>

<p>Testimizi Ruby kodlarına çevirmiş olduk. BrowserStack'te  Python Ruby Java C# Perl PHP Node.js  dillerini desteklenmektedir.<br/>
.rb uzantılı dosyamızı biz de BrowserStacke yükleyerek istediğimiz platformda testimizi çalıştırabiliriz. Linux, Firefox üzerinde yazdığım testim acaba Windows Chrome da çalışır durumda mı bunu test edelim. .rb uzantılı dosyamızı yollayalım ve Screenshotlarla adımları takip edelim.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selenium IDE]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/08/07/selenium-ide/"/>
    <updated>2014-08-07T20:51:12+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/08/07/selenium-ide</id>
    <content type="html"><![CDATA[<p>Test senaryolarımızı Selenium-IDE ile hayata geçireğiz. Senaryomuzun adımlarını anlayıp Selenium-İde de onlara uygun komutları bulup çalışabilir bir test oluşturacağız. Bir önceki yazımda bulunan test senaryosunu kullanacağım.</p>

<p>Seleniumda kodlarımızı yazabilmek için <font color=red>Command</font> kısmına yazacağımız komutların anlamını ve <font color=red>Target</font> kısmına yazacağımız yer bulucularını kullanmayı öğrenmeliyiz.</p>

<blockquote><p><font color=brown>İlk adım;</font></p></blockquote>

<ol>
<li><font color=grey><em>Go to</em> <a href="https://borc_takibi.herokuapp.com/">https://borc_takibi.herokuapp.com/</a></font></li>
</ol>


<p>Bu adıma uygun selenium komutumuz <font color=red> <em>Open</em></font> komutu olacak.<br/>
<font color=purple> Open</font> komutu ile herhangi bir URL adresini <font color=purple>Seleneium</font>da açabiliriz.<br/>
Open komutunu seleniumda yazıp Run! dersek istediğimiz sayfa resimdeki gibi açılmış olacak.</p>

<p><img src="http://i.imgur.com/xk8wDPm.png"></p>

<p><img src="http://i.imgur.com/GBxhLQs.png"></p>

<blockquote><p><font color=brown>İkinci adım;</font></p></blockquote>

<p>2.<font color=grey><em>Verify that &ldquo;BORÇ TAKİBİ&rdquo; appeared on the page</em></font></p>

<p>Sayfamızı <font color=purple> Open</font> komutu ile açmış olduk. Şimdi sayfamızın açıldığı kontrolünü de verify ile yazdığımız komutlarla sağlayacağız. Verify adımlarını <font color=purple>Assert </font> komutları ile yapacağız. Assert ile yazılan selenium komutları, eğer istenilen adım gerçekleşmemişse testi durdurur. Yanlış giden bir durum varsa engellenmiş olur.<br/>
Ben kısaca en çok kullanılacak bir kaç Assert komutundan bahsedeyim;</p>

<p><font color=red>AssertElementPresent(locator),</font>  bu komutumuz ekrandaki hedeflenen elemanı sayfada arar. Elemanı bulursa true bulamazsa false döndürür.<br/>
<font color=red>AssertTextPresent(pattern),</font>   bu komutumuz ekranda görmek istediğimiz yazıyı kontrol eder istenen metin ekranda varsa true yoksa false döndürür.<br/>
<font color=red>AssertVisible(locator),</font>  belirtilen ögenin görünür durumda olup olmadığı kontrolünü yapar , true veya false döndürür.<br/>
<font color=red>AssertTitle(pattern), </font>  geçerli sayfanın başlığını kontrol eder,  sayfa geçişlerinde başlık değişmiş mi kontrolü için işimize epey yarar.</p>

<p>Tekrar senaryomuza dönersek sayfamız açıldı ve beklediğimiz yazı geldi mi kontrolü için <font color=purple>AssertTextPresent</font> komutunu kullanacağız.<br/>
Sayfamızı açtık kontrolümüzü sağladık resimde de görüldüğü gibi;</p>

<p><img src="http://i.imgur.com/hdNn3Gk.png"></p>

<blockquote><p><font color=brown>Üçüncü adım;</font></p></blockquote>

<p>3.<font color=grey>  <em>Click on &ldquo;Arkadaş Ekle&rdquo; button</em></font><br/>
Bu adımımızda dikkatinizi iki komuta çekeceğim;<br/>
<font color=red><em>Click</em></font> ve  <font color=red><em>ClickAndWait</em></font><br/>
Bu komutları butona, seçeneklere tıklama işlemlerinde kullanıyoruz. Fakat aralarında bir fark var. Sayfa geçişlerinde butona tıkladıktan sonra sayfanın yüklenebilmesi için bir bekleme süremiz vardır işte bu beklemeyi ayarlayan butona tıklayan komut, <font color=purple>ClickAndWait</font> komutudur.<br/>
Sadece click işlemi yapacaksak, aynı sayfada kalıp o sayfa içindeki işlemlerimizi hal edeceksek  <font color=purple> Click </font>  komutunu kullanmalıyız. <br/>
Eğer aynı sayfadaysanız ve yaptığınız işlem sayfa değiştirmediyse, gene de tıkladıktan sonra beklememiz gereken işlem varsa işte onun içinde <font color=purple><em>Pause</em></font> komutunu kullanırız.<font color=purple> Pause </font> komutunda bekleme süresini siz ayarlarsınız, komutu verip bekleme süresini de yazarsak <font color=purple>click</font> işleminden sonra o süre kadar bekler.<br/>
Peki bekleme işlemi yapmasak neler olur? Biz selenium testlermizi fast konumda çalıştırırız. Adımlar akar gider siz o bekleme işini hesaba katmazsanız hala o işle oyalanırsa selenıum ikinci adımda yapması gereken işi arar ve bulamadığı için test patlar.<br/>
Testimize dönersek şimdi burada sayfa geçişi işi yapacağımız için <font color=purple>ClickAndWait</font> komutunu kullanacağız.</p>

<p>Komutumuzu yazdıktan sonra <font color=purple>clickandwait</font> işlemini yapacağımız yeri belirlemeliyiz.<br/>
<font color=purple>Selenium IDE</font> de çoğunlukla<font color=red> CSS Locator, Xpath, Locator</font>&lsquo;ları (Yer Bulucuları) kullanacağız.
<font color=purple>Xpath</font>, Selenium IDE de kullanılan bir yol göstericidir.Veritabanında sorgu çekileceği zaman Test Case'de sorguyu Path'e vermek için kullanılır. Bu Locatorı daha çok bu iş için kullanırız.<br/>
<font color=purple>CSS Locator</font> ise <font color=purple>Xpath</font> nazaran daha hızlıdır. Bu yer bulucuyu Web sitelerinde yer alan HTML sıralamasında <font color=purple>CSS class</font> ve <font color=purple>CSS id</font>'leri bularak kullanırız.<br/>
Erişmek istediğiniz yere <font color=purple>İnspect Element</font> derseniz Web sayfamızın bilgileri çıkar, erişeceğimiz yerinde HTML ağacındaki yeri bu bilginin içinde farklı renkte gözükür bize. O satıra sağ tıklayıp <font color=purple>Copy Unique Selector</font> dersek erişceğimiz yerin <font color=purple>Css</font> olarak adresi kopyalanmış olur. Bu kolay yolumuz olsun. Ama extrem şeyler için <font color=purple>Css ve Xpath</font> kullanmayı öğrenirsek işimiz kolaylaşır.<br/>
Adımları resimlerde de görelim.</p>

<p> <img src="http://i.imgur.com/AenyHlm.png"></p>

<p>Kopyaladığımız Css Adresini Komutumuzun Target alanını css=&hellip; olacak şekilde  yazdık. <font color=purple>Seleniumda</font> <font color=red>find</font> butonuna tıklarsak Target kısmına yazdığımız css ile bulduğumuz yeri gösterir bize, burada sarı renk alır.</p>

<p><img src="http://i.imgur.com/w1fxvXy.png"></p>

<p>4.<font color=grey> <em>Verify that &ldquo;Yeni Borçlu Ekle&rdquo; appeared on the page</em></font><br/>
Burada gene bir metin kontrolu var ve <font color=purple>AssertTextPresent</font> kullanacağız.</p>

<p>5.<font color=grey> <em>Fill in &ldquo;Borçlunun Adı Soyadı:&rdquo;,&ldquo;E-Mail Adresi:&rdquo;,&ldquo;Twitter Kullanıcı Adi:&rdquo; sections</em> </font><br/>
Bu adımda text alanlarını dolduracağız. Bunu <font color=purple>Seleniumda</font> <font color=red><em>Type(locator,pattern)</em></font> komutu ile sağlarız.<br/>
Parantez içine yazdığım şeylerden ilki <font color=purple>Target</font> ikincisi <font color=purple>Value</font> alanlarına yazılacak şeyler.<br/>
<font color=purple>Command</font> kısmına ise komutumuzun kendisi gelecek bu adım için <font color=purple> Type</font> komutu gelecek. Borçlu adı soyadı yazma şekli resimdeki gibi ;<br/>
<img src="http://i.imgur.com/8VXUT2X.png" alt="" /></p></p>

<p>aynı şekilde borçlu emaili ve twitter kullanıcı adı da böyle yazılacak.</p>

<p><img src="http://i.imgur.com/Kwfvqr5.png">
<img src="http://i.imgur.com/I3qWn1j.png"></p>

<p>6.<font color=grey> <em>Click on &ldquo;Create Friend&rdquo; button</em></font>
Burada bir sayfa geçişi söz konusu o zaman <font color=purple>ClickAndWait</font> komutu kullanmamız gerekir.<br/>
Create butonuna tıklayıp farklı bir sayfaya geçeriz resimdeki gibi;</p>

<p><img src="http://i.imgur.com/Rte0GRk.png"></p>

<p>7.<font color=grey> <em>Verify that &ldquo; Successful Created.&rdquo; appeared on the page</em> </font><br/>
Burada bir yazı kontrolümüz var <font color=purple> AssertTextPresent</font> yapacağız.</p>

<p><img src="http://i.imgur.com/iGZ7M9N.png"></p>

<p>Adımlarımızı Seleniumda yazdıktan sonra <font color=red>Run!</font> komutunu veririz ve <font color=red>Log</font> kısmından testimizin çalışmasını takip ederiz, hatasız adımlar yeşil renk olur.</p>

<p><img src="http://i.imgur.com/XAxycM0.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Test Senaryolarını Anlama]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/08/07/selenium-ikinci-asama/"/>
    <updated>2014-08-07T00:00:18+03:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/08/07/selenium-ikinci-asama</id>
    <content type="html"><![CDATA[<p>Yazdığımız uygulamalarda ,programlarda kodlarımız sayfalar dolu olsun ama arada öyle bir yer varki bizim gözümüzden kaçtı unuttuk yada yaptığımız yeni bir dokunuş uygulamanın herhangi bir yerini bozdu ve orası çalışmıyor.<br/>
Kullanıcı ise sizden önce bunun çalışmadığını fark etti. Uygulamanızın çok kritik işler yaptığını düşünürsek o küçüçük eksikliğin bile büyük hasarlar getireceğini unutmayalım.<br/>
Oluşturduguz bu ürün kulanıcı tarafından hoş karşılanmaz ve müşteri kaybına uğramış olursunuz.<br/>
Bu ve bunun gibi bir çok senaryoyu kafamızda düşünebiliriz.<br/>
Milyon dolarlık ürünlerin internet üzerinden satışını yapacağınız anda &ldquo;satın al&rdquo; butonunun çalışmayıp müşteri kaybetmeniz gibi çoğaltabiliriz.</p>

<p>Testlerin başka bir güzelliği de var örneğin firefoxda çalıştırdığımız uygulamanın hiç hatası yok her şey mükemmel sanıyoruz ki aslında üzerinde çalıştığınız uygulama  chrome da yada explorerda çalışmayabilir, sadece o da değil işletim sistemi değiştiğinde de çalışmayabilir. Linux da çalışan şey windowsta çalışmayabilir. Bu uygulamayı insan gücü ile her şeyiyle kontrol etmesi çok zor..</p>

<p>Test yazma işini 3 aşamada yapacağız;<br/>
Öncelikle test yazmak için elimizde bir <font color=red> Test Senaryosu </font> olmalı.<br/>
İkinci aşama da ise senaryomuzu <font color=red> Selenium IDE </font> de yazıp test adımlarımızı çalıştırıp görmeliyiz.<br/>
Son aşama da ise Selenium IDE sorunsuz çalışan testimizi Ruby koduna çevirip <font color=red > BrowserStack</font>&lsquo;e yükleyip birçok Browser ve işletim sistemi için test etmeyi sağlamalıyız.</p>

<p>Test yazma işi oldukça önemli , senaryolarımızı analiz ederek Selenium koduna dökebilmeliyiz.</p>

<p>Testleriniz anlaşılır olmalı öyle ki sizin yazdığınız bir senaryoyu bir başkası da okuyarak o testi yazabilmeli.</p>

<p>Testlerimizi benim oluşturduğum basit bir Rails uygulaması üzerinden anlatacağım.</p>

<p><font color=#bf5f00>Şimdi ilk senaryomuzu sunuyorum ;</font></p>

<pre><code>1.Go to https://heroku
   1.1 Verify that "BORÇ TAKİBİ" appeared on the page  

2.Click on "Arkadaş Ekle" button  
   2.1 Verify that "Yeni Borçlu Ekle" appeared on the page  

3.Fill in "Borçlunun Adı Soyadı:","E-Mail Adresi:","Twitter Kullanıcı Adi:" sections

4.Click on "Create Friend" button  
   4.1 Verify that " Successful Created. " appeared on the page  
</code></pre>

<blockquote><p><font color=#ff5656>Dört adımlık bir test senaryosu oluşturduk şimdi senaryomuzu anlayalım; </font></p>

<p><font color=brown>İlk adımda;</font></p></blockquote>

<p><font color=purple><em>Go to</em></font> komutu ile Sayfamızı browserdan açtırıyoruz ve sayfamız açıldı mı kontrolünü ise <font color=purple><em>Verify</em></font> komutu ile oluşturuyoruz. Sayfa açıldığında görmek istediğimiz yazı her ne ise onu yazıyoruz eğer bu yazı geldiyse butonumuz çalışıyor ve doğru adresteyiz demektir.</p>

<blockquote><p><font color=brown>İkinci adımda;</font></p></blockquote>

<p>Arkadaş ekle butonumuzdan bir arkadaş ekleyeceğiz. <font color=purple><em>Click</em></font> komutu ile butona tıklama işlemini yapıyoruz. Arkadaş ekle butonuna tıkladıktan sonra görmek istediğimiz sayfadaki herhangi ayırt edici bir yazıyı <font color=purple><em>Verify</em></font> ile kontrol edip sayfa açılmış mı, arkadaş ekle butonu çalışmış mı kontrolünü yaptık. <font color=purple><em>Verify</em></font> ile yazılan adımlar önemli işin içinde bir kontrol yoksa testiniz click clickten ibaret olur bu da işimize yaramaz bir şeyi test etmiş olmayız.</p>

<blockquote><p><font color=brown>Üçüncü adımda;</font></p></blockquote>

<p>Arkadaş ekle sayfasındaki doldurulması gereken yerleri <font color=purple> <em>Fill in</em></font> komutu ile sağladık.</p>

<blockquote><p><font color=brown>Dördüncü adımda;</font></p></blockquote>

<p><font color=purple><em>Click</em></font> komutu ile Arkadaşımızı oluştur dedik. Akabinde <font color=purple><em>Verify</em></font> komutu ile sonraki adımda karşımıza çıkacak ayırt edici herhangi yazıyı kullanarak arkadaşımız oluşmuş mu diye kontrol ettik.  Butona tıklandıktan sonra istediğimiz sayfaya geçiş sağlanmış mı kontrol etmiş olduk.</p>

<p>Ayırt edici yazıdan kastım; eğer bir önceki sayfada da aynı yazı varsa ve senin butonun çalışmadı bozuk diyelim , sayfa geçişi sağlayamadın ve aynı sayfada kaldın. Kontrol ettiğin yazı bulunduğun sayfada zaten vardı sayfa geçişi yapmadığın halde verify ile kontrol ettiğin yer true dönüp seni yanıltabilir, butonun doğru çalışmadığı halde fark edemezsin.</p>

<p>Ayrıca burada yazı değil bir elementi ,bir alert mesajını, bir title yada bir modal kontrolü de yapabilirsin.</p>

<p>Özetle test senaryolarında her adımı <font color=brown><em>click, select, fill in , fill out, choose</em></font> gibi komutlarla anlaşılır biçimde yazıyoruz. Adım sonlarında kontrolü sağlamak için de <font color=brown><em>Verify</em></font> komutunu kulanıyoruz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Selenium]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/03/19/selenium/"/>
    <updated>2014-03-19T17:23:59+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/03/19/selenium</id>
    <content type="html"><![CDATA[<p><font color='red'> Selenium </font>  web tabanlı uygulamaların testlerini browser üzerinden yapmamızı sağlayan bir araçtır.<br/>
Tüm web testlerinin yapılabileceği açık kaynak kodlu bir test aracıdır. Diğer test araçlarına göre daha fazla gelişmiştir.<br/>
Web ortamında testlerinizi kaydetme , çalıştırabilme, düzeltme, yeniden test etme imkanı verir.<br/>
Test adımları için <font color='purple'> java, ruby, python </font> gibi farklı yazılım dilleri kullanılabilir.</p>

<p>Test adımlarını web üzerinden görebilmek için <font color='red'>  selenium-ide  </font> kullanılır.Selenium-ide firefox için geliştirilmiş bir eklentidir.</p>

<p>Seleniumda firefoxdaki haraketlerimizi kayıt edebilir ve sonraki ürettiğimiz test kodlarını otomotik testler için kullanabiliriz.</p>

<p>Şimdi 4 adımda bir senaryo düşünelim , <a href="http://www.sahibinden.com/">http://www.sahibinden.com/</a> adresine girdik<br/>
<font color='red'>1-</font>  siteyi açtım<br/>
<font color='red'>2-</font>  arama kısmına tıkladım, telefon yazdım, aradım<br/>
<font color='red'>3-</font>  ilk çıkan sonuca tıkladım<br/>
<font color='red'>4-</font>  ilan no : 3123123 tarzı bişey yazıyo mu onu kontrol ettim</p>

<p>Diyelim ki sahibinden.com'da çalışıyoruz, kod yazdık, aramayı güçlendiriyoruz.<br/>
Kodumuzdan öyle eminiz ki, ya da arama kısmıyla beraber ürünle ilgili de bi kod yazıyoruz, en ucra köşede bir kod, evet kodumuz çalışıyor.  Ama, ya aramayı bozmuşsa? Ya aralarında bağ varsa? Ya ilan numarası gelmiyorsa? Sırf o yazdığımız küçük kod yüzünden? Bunlar olabilir..</p>

<p>Tester larımız vardır, click clickçiler, şu yukarıdaki senaryomuzu ona veririz, ve her bir güncellemede, bunları test eder.<br/>
Sen de bunu doğrularsın; kodun, aramayı bozmamış. Bunun gibi 100lerce senaryo düşünürsek;<br/>
Mesaj göndersin, paylaşsın, yazdırsın, favorilere eklesin vs..</p>

<p>Peki hep click clickçilerle mi uğraşaçağız? Bir sürü para, + insan, yanılabilir. İşte bu aşamada ,automated ui tests devreye giriyor..</p>

<p>Şimdi, <font color='purple'>  Selenium </font>  kendini burada gösteriyor kendi içinde,  <font color='purple'> “tıkla” , “aç”, “doğrula”, “yaz” </font> gibi automated test için çok kullanılan fonksiyonlara sahip.<br/>
Biz de onu kullanarak, senaryoyu yazarız. Ve <font color='red'>  RUN! </font> dediğimiz an , kendine kendine bizim senaryomuzu çalıştırır, ve bize, evet çalıştırdım, düzgün çalışıyor yada eğer bozuksa hata var! gibi çıktılar verir.<br/>
Biz her güncelleme yaptığımızda , sadece <font color='red'> RUN! </font> diyerek bu testimizi çalıştırabiliriz bu sayede.</p>

<p>Burada <font color='purple'> Selenium-İde </font> görüntüsü yer almakta ve aşağıda da açıklanmakta.</p>

<p><img src="http://i.imgur.com/4b584hS.png" alt="" /></p>

<p><font color='red'>  Selenium'da </font>;<br/>
<font color='brown'> 1-Dosya seçeneği </font>, yeni veya önceden açılmış test case açmaya , kaydetmeye,yarar.<br/>
<font color='brown'> 2-Düzenle seçeneği </font>, kontrol işlemlerini yapar (kes,yapıstır, geri al gibi).<br/>
<font color='brown'> 3-Options seçeneği </font>, ide ile alakalı ayarlar yapılır, varsayılan ide dili değiştirilir.<br/>
  <font color='brown'> 3.1-Options-Options seçeneği </font>, karakter kodlaması ve “*wait” komutu için milisaniye cinsinden sürenin belirlenmesi bu kısımda yapılır.Varsayılan bekleme süresi 30 sn .ayrıca bu bölümde kişisel java scriptler yüklenebilir.<br/>
  <font color='brown'> 3.2-Options-Format seçeneği </font>, html dilindeki scriptleri başka dile çevirmeye yarar.<br/>
  <font color='brown'> 3.3-Options-Clipboard format seçeneği </font> , hızlı şekilde mevcut diğer dillere çevirme işlemini yapar.</p>

<p><font color='purple'>Base URL </font>, test yapılmak istenen url adresi bu bölüme yazılır. Eğer kayıtlı bir test case varsa test case çalıştırıldığında bu url otomatık olarak gelir.<br/>
<font color='purple'>Fast &amp; slow </font>, bu kısımda testin hızı ayarlanır. Hız göstergesi ile 1 ile 10 arasındadır. Testin varsayılan hızı 10 dur.<br/>
<font color='purple'>Play all </font>, tüm test caseleri çalıştırmak için kullanılır.<br/>
<font color='purple'>Play </font>, üzerinde çalışılan test case çalıştırır.<br/>
<font color='purple'>Pause </font>, çalıştırılmış bir test case bekletir.<br/>
<font color='purple'>Step </font>, bekletilmiş bir test case adım adım ilerletir.<br/>
<font color='purple'>Test runner </font>, selenium kodunu, test case ve test yapılan siteyi gösterir.<br/>
<font color='purple'>Record </font>, testi kaydetmek ve testi durdurmak için kullanılır. Selenium-ide ilk başlatıldığında kayıt otomatik başlar.</p>

<p><font color='red'> Log: </font> testin çalıştırılması ile hatalı ve başarılı işlemlerin kaydını tutar.<br/>
<font color='red'> Reference: </font> Komutların açıklanmasını gösterir. Komutların nasıl kullanılacağı burada anlatılmaktadır.</p>

<h3>Selenium Nasıl Çalışır?</h3>

<p><font color='red'>1-Command: </font> Test için senaryomuzdaki komutları girdiğimiz yer.Bazı komutlar;</p>

<p>   <font color='purple'>Open: </font> Verilern URL'ye(siteye) ait web sayfasını açmak için kullanılır.<br/>
   <font color='purple'>Click: </font> Bir nesneyi tıklamak için kullanılır.<br/>
   <font color='purple'> ClickAndWait: </font> Nesneye tıklattıktan sonra sayfanın yüklenmesini beklemek için kullanılır.<br/>
   <font color='purple'>AssertElementPresent: </font> Belirtilen elemanın yüklenemesini beklemek için kullanılır.<br/>
   <font color='purple'>AssertTextPresent: </font> Belirtilen bir metnin sayfada olup olmadığını kontrol  eder.<br/>
   <font color='purple'>WaitForPageToload: </font> sayfanın yüklenmesini bekler.<br/>
   <font color='purple'>WaitForElementPresent: </font> Sayfadaki beklenen arayüz ekrana gelene kadar   testi bekletir.<br/>
   <font color='purple'>Type: </font> bir inputun içine yazmak için kullanılır.<br/>
   <font color='purple'>VerifyTextPresent: </font> Sayfanın herhangi bir yerinde beklenen yazının varlığını doğrular.<br/>
   <font color='purple'>VerifyElementPresent: </font> Sayfada olması beklenen arayüzün doğru yerde olup olmadığını kontrol eder.<br/>
   <font color='purple'>Title/AsertTitle: </font> Beklenen sayfa başlağını doğrular.<br/>
   <font color='purple'>DeleteCookie: </font> Belirtilen cookinin silinmesi sağlar.<br/>
   <font color='purple'>MouseOver: </font> Mouse belirtilen elemanın üzerine götürür.</p>

<p><font color='red'>2-Target: </font>  Commanda belirttiğimiz olayın hangi nesne üzerinde gerçekleşeceğini belirtiriz. Burada CSS Locator yada Xpath gibi yer bulucular kullanmamız gerekmekte.</p>

<p><font color='red'>3-Value: </font> Targette belirttiğimiz nesnenin bir değeri varsa ve o değeri belirtmemiz gerekiyorsa yada sitede bir yere değer yazmak gerekiyorsa kullanılır.</p>

<p>Şimdi elimizde 1 tane senaryomuz olsun</p>

<p>Scenario 1: cikti.al home page<br/>
<font color='red'>1- </font> Open page(<a href="http://cikti.al">http://cikti.al</a>)<br/>
<font color='red'>2- </font> Verify the page header(&lsquo;Çıktı Al ! Bulut Flash Bellek( (beta))</p>

<p><img src="http://i.imgur.com/4b584hS.png" alt="" /></p>

<p>burada (<a href="http://cikti.al">http://cikti.al</a>) adresine gidip ,<br/>
Çıktı Al ! Bulut Flash Bellek( (beta)) ,<br/>
yazısının sayfada olup olmadığının kontrolünü yaparız.<br/>
Seleniumu çalıştırdığımız anda bize tarayıcımızdan yeni bir sekme açarak
<a href="http://cikti.al">http://cikti.al</a> adresine gider.</p>

<p><img src="http://i.imgur.com/iOR3055.png" alt="" /></p>

<p><img src="http://i.imgur.com/4l1uAfK.png" alt="" /></p>

<p> Burada istediğimiz adrese gitti. <font color='blue'>Çıktı Al ! Bulut Flash Bellek </font> yazımızı kontrol etti evet böyle bir metin var ve  her şey yolunda dedi bize. <br/>
Peki ,bu Bulut Flaş bellek sitemiz ne işe yarıyor? Herhangi bir dökümanımızı yükleyip ,daha sonra istediğimiz bir yerde çıktısını almamızı sağlıyor, harici bellek kullanmadan hallediyoruz çıktı alma olayını ,site kendi hafızasında saklıyor bu dökümanı.<br/>
Peki o zaman bizde bir dosya yükleyelim <font color='red'> Selenium'a </font> komutları verelim o bizim için yüklesin ve baksın sitemizin dosya yükle butonu gerçekten çalışıyor mu bir sorunu var mı ?</p>

<p><img src="http://i.imgur.com/ckEDZYq.png" alt="" /></p>

<p><img src="http://i.imgur.com/GTcGqeZ.png" alt="" /></p>

<p>Seleniuma gireceğimiz  komutlar bu şekildedir.<br/>
Seleniuma <font color='red'>  Run! </font> komutunu verdiğimiz anda yeni sekmede <a href="http://cikti.al">http://cikti.al</a> adresine gitti yazımızı kontrol etti ve commanda kısmına yazdığımız type komutu ile target kısmına yazdığımız CSS Locator yer bulucusu  ile dosya yüklemesi gereken yeri bulmasını söyledik ve value kısmına yüklenecek dosyamızın adını verdik.</p>

<p><img src="http://i.imgur.com/2ojYL7I.png" alt="" /></p>

<p>Dosyamız yüklendi! Sitemizde hiç bir sorun olmadığını test ederek gördük.</p>

<p>Sizlerde Seleniumu çeşitli siteleri test etmek amaçlı kullanabilirsiniz hatta bunu farklı browserlarda deneyebilir hatta ve hatta farklı işletim sistemleri için bile test edebilir hale getirebilirsiniz.</p>

<p><a href="http://www.browserstack.com">http://www.browserstack.com</a> bu adres ile testlerinizi farklı web tarayıcılarında deneyebilirsiniz. Örneğin tekrar www.sahibinden.com dan tekrar bahsedersek ve buradaki bir ürünümüzü tam müşterinin biri 1500 dolarlık ürün alırken, İnternet explorer8 de göremediğimiz, ödemeyi onayla butonu , çalışmazsa ne olacak? Ve bizden önce bunu müşteri görmüş olsa, biz 1500 doları ve müşterizi kaybetsek, ne kötü olur değil mi? İşte bu gibi durumlara sebebiyet vermemek için testimizi farklı tarayıcılar ve farklı işletim sistemleri içinde kullanıma hazır hale getirebiliriz.</p>

<p> Yazıma burada son veriyorum Selenium hakkında bişeyler katabilmişsem ne mutlu :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCM Ile Push Notification]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/03/18/yeni/"/>
    <updated>2014-03-18T00:06:04+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/03/18/yeni</id>
    <content type="html"><![CDATA[<blockquote><p>Merhaba arkadaşlar bir cihaza Push Notification yapmak istediğimiz zaman <font color=blue>Google Cloud Messaging</font> dediğimiz servisi  kullanıyoruz. Kısaca <font color=blue>GCM</font> olan bu servis , sunucu görevi gören  bilgisayarımızdan göndereceğimiz verinin  , android cihaz tarafından alınmasını sağlayacak bir teknolojidir. Bulut teknolojisi kullanarak uygulamara veri göndermeyi sağlar.</p></blockquote>

<p>Android cihazımızda bir uygulamamız olduğunu farz edelim bu uygulama bize tatile çıktığımız zaman konum bilgimize erişip bize otel adları sunsun ve push notification mantığı ile çalışsın. O civarda otel arıyor olalım ve hareket etiiğimizi anlayan bu uygulama konum bilgimize erişsin. Biz bu uygulamaya sürekli otel var mı diye sormayalım da o bulunduğumuz yerde otel bulduğunda push notification ile bize otel adlarını yollasın.</p>

<p>Eğer uygulamamızda push notification yoksa bizim sürekli sormamız gerekecekti yeni otel buldun mu diye. Bu durum ayrıca zahmet ve serverımızda sürekli bir yogunluğa neden olur.<br/>
Fakat bizim uygulamamız GCM ile çalışıyor ve bana çok güzel kolaylık sunuyor. Biz sürekli sayfa güncelleyip sormadan uygulama bizim işimizi görecek ne kadar kolay değil mi ?</p>

<p>Uygulamalara bu push notification olayını yerleştirdiğimiz zaman istediğimiz kullanıcıya istediğimiz mesajı atarak kullanıcıyı uyarabiliyoruz.<br/>
Bankalar örneğin böyle bir uygulama kullansa bakiyesi eksiye inen kullanıcılarını tespit etse ve onlara otomatik push notification ile mesaj atsa Paraya ihtiyacın mı var dese çok da güzel olur.</p>

<blockquote><p>Push Notification ile bir android cihazımıza bildirim yollamak isteyelim bunun için bize bir android uygulaması lazım. Bir diğer olay GCM servisi lazım ve Sunucumuzun olması lazım.<br/>
GCM çalşma mantığı ise aşağıdaki resimdeki gibidir.</p></blockquote>

<p><img src="http://i.imgur.com/2jxRfN3.jpg"></p>

<ul>
<li><p>Ilk adımda android uygulaması application_id and sender_id bilgilerimizi GCM ile paylasır. GCM sunucusuda bu bilgileri tutar.</p></li>
<li><p>Ikinci adımda GCM sunucu uygulamasından register_id bilgisi gelir, bu bilgi gelen application_id and sender_id bilgilerini kullanarak uygulamayı register ettikten sonra oluşur.</p></li>
<li><p>Mobil uygulama GCM sunucusundan aldığı register_id bilgisini push notification yapacağı servera iletir.</p></li>
<li><p>Server da gelen bu regıster_id bilgisini kendi veritabanına kaydeder.</p></li>
<li><p>Server kendi application_id si için göndereceği bilgileri GCM'e registration_id olarak bildiriyor.</p></li>
<li><p>GCM de bu registration_id üzerinden belirlenen mobil cihaza serverdan gelen bilgiyi iletiyor.</p></li>
</ul>


<p>Tüm bu adımların tamamı bahsettiğimiz push notification işlemini gerçekleştiriyor.</p>

<blockquote><p>Ilk Adım;</p></blockquote>

<p>Google Cloud Messaging dediğimiz servisi kullanabilmemiz için <a href="https://cloud.google.com/console">Google Developer Console </a> girip hesap oluşturmamız gerekiyor. <font color=blue> Create New Project</font> e tıklıyoruz. Açılan sayfaya bilgileri giriyoruz (name,id). GCM ile paylaştığımız application_id olur bu.</p>

<p><img src="http://i.imgur.com/lKH63hw.jpg"></p>

<p>Projemizi oluşturduktan sonra;<br/>
Menuden  <font color=blue>APİs&amp;AUTH</font> menüsünden  <font color=blue>Credentials</font> seciyoruz. Açılan sayfadan  <font color=blue>Create New Key</font> tıklayıp  <font color=blue>Server Key</font> seçiyoruz. Ve  <font color=blue>Create</font> dıyoruz.  Gelen ekranda APi keyimizi göreceksiniz bunu kullanacağımız yerler olacak bu şekilde bunu da oluşturmuş olduk.</p>

<p><img src="http://i.imgur.com/vVnYbmA.png"></p>

<blockquote><p>İkinci Adım;</p></blockquote>

<p> <font color=red>Veritabanını Oluşturma</font></p>

<p>Bunun için phpMyAdmin kullanacağız. Web uygulamalarını kendi bilgisayarınızda test edebilmek için sisteminizde LAMP (Linux, Apache, MySQL, PHP) server kurulu olmalıdır. <a href="http://www.getgnu.org/gnulinux/gnulinux-ipuclari/lamp-linux-apache-mysql-php-server-kurulumu.html"> buradan </a> LAMP kurulumu gerçekleştirebilirsiniz.</p>

<p>Kurulumu tamamladıktan sonra
 <a href="http://localhost/phpmyadmin">http://localhost/phpmyadmin</a> adresine giriş yapabilirsiniz. Giriş yaptıktan sonra  <font color=green>GCM</font> adında database oluşturuyoruz.Daha sonra SQL tıklayıp aşağıdaki kodu çalıştırdığımızda  <font color=green>gcm_users</font> adında bir tablo oluşturmuş oluruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="no">CREATE</span> <span class="no">TABLE</span> <span class="no">IF</span> <span class="no">NOT</span> <span class="no">EXISTS</span> <span class="sb">`gcm_users`</span> <span class="p">(</span>
</span><span class='line'>  <span class="sb">`id`</span> <span class="n">int</span><span class="p">(</span><span class="mi">11</span><span class="p">)</span> <span class="no">NOT</span> <span class="no">NULL</span> <span class="no">AUTO_INCREMENT</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`gcm_regid`</span> <span class="n">text</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`android_id`</span> <span class="n">varchar</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="no">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`email`</span> <span class="n">varchar</span><span class="p">(</span><span class="mi">255</span><span class="p">)</span> <span class="no">NOT</span> <span class="no">NULL</span><span class="p">,</span>
</span><span class='line'>  <span class="sb">`created_at`</span> <span class="n">timestamp</span> <span class="no">NOT</span> <span class="no">NULL</span> <span class="no">DEFAULT</span> <span class="no">CURRENT_TIMESTAMP</span><span class="p">,</span>
</span><span class='line'>  <span class="no">PRIMARY</span> <span class="no">KEY</span> <span class="p">(</span><span class="sb">`id`</span><span class="p">)</span>
</span><span class='line'> <span class="p">)</span><span class="no">ENGINE</span><span class="o">=</span><span class="no">InnoDB</span> <span class="no">DEFAULT</span> <span class="no">CHARSET</span><span class="o">=</span><span class="n">latin1</span> <span class="no">AUTO_INCREMENT</span><span class="o">=</span><span class="mi">1</span> <span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><img src="http://i.imgur.com/4ErXDQT.png"></p>

<p> <font color=red>PHP Projelerini Oluşturma</font></p>

<p>Veritabanını oluşturduktan sonra php konfigurasyon dosyalarını oluşturmalıyız.</p>

<blockquote><p>İlk önce veritabanı bilgilerinin yer aldığı config.php dosyası oluşturalım ve aşağıdaki kodu ekleyelim.</p></blockquote>

<p>config.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'> <span class="c1">//Database config degiskenleri</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s2">&quot;DB_HOST&quot;</span><span class="p">,</span> <span class="s2">&quot;localhost&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s2">&quot;DB_USER&quot;</span><span class="p">,</span> <span class="s2">&quot;root&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s2">&quot;DB_PASSWORD&quot;</span><span class="p">,</span> <span class="s2">&quot;root_password&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s2">&quot;DB_DATABASE&quot;</span><span class="p">,</span> <span class="s2">&quot;gcm&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'> <span class="c1">//Projemizi oluştururken elde ettiğimiz API keye yazıyoruz</span>
</span><span class='line'><span class="nb">define</span><span class="p">(</span><span class="s2">&quot;GOOGLE_API_KEY&quot;</span><span class="p">,</span> <span class="s2">&quot;AIzaSyBuKjAAFTPaYIL83BvKzhfJ1patQfojz-w&quot;</span><span class="p">);</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Şimdi ikinci bir dosya oluşturuyoruz  db_connect.php adında burada da database bağlantımız sağlanacak.</p></blockquote>

<p>db_connect.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'> <span class="k">class</span> <span class="nc">DB_Connect</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>     <span class="c1">//constructor</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>     <span class="c1">//destructor</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__destruct</span><span class="p">()</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>     <span class="c1">//database bağlantısı</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">connect</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//config.php dosyamızı dahil ediyoruz</span>
</span><span class='line'>        <span class="k">require_once</span> <span class="s1">&#39;config.php&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">//config.php dosyamızdaki bilgiler eşliğinde mysql bağlanıyoruz.</span>
</span><span class='line'>        <span class="nv">$con</span> <span class="o">=</span> <span class="nb">mysql_connect</span><span class="p">(</span><span class="nx">DB_HOST</span><span class="p">,</span> <span class="nx">DB_USER</span><span class="p">,</span> <span class="nx">DB_PASSWORD</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">//databasemizi seçiyoruz</span>
</span><span class='line'>        <span class="nb">mysql_select_db</span><span class="p">(</span><span class="nx">DB_DATABASE</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$con</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">//database bağlantısı kesiliyor</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">close</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nb">mysql_close</span><span class="p">();</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Üçüncü dosyamız oluşturduğumuz veritabanında CRUD işlemleri gerçekleştirmek için db_functions.php adında bir dosya olacak ve bu dosya içine kullanıcı oluşturmak için bir fonksiyon yazıyoruz fazlasını yapmakda mümkün.</p></blockquote>

<p>db_functions.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">DB_Functions</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">private</span> <span class="nv">$db</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//yapıcı kodumuzu yerleştiriyoruz.</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">//oluşturduğumuz database bağlantısını çağırıyoruz.</span>
</span><span class='line'>        <span class="k">include_once</span> <span class="s1">&#39;./db_connect.php&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="c1">//database bağlantısı oluşturuldu</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DB_Connect</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">connect</span><span class="p">();</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__destruct</span><span class="p">()</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// CRUD işlemlerinden Create ile yeni bir kullanıcı ekleme işlemi yapılıyor</span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">storeUser</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$email</span><span class="p">,</span> <span class="nv">$gcm_regid</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// database kullanıcı ekleme</span>
</span><span class='line'>        <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="s2">&quot;INSERT INTO gcm_users(name, email, gcm_regid, created_at) VALUES(&#39;</span><span class="si">$name</span><span class="s2">&#39;, &#39;</span><span class="si">$email</span><span class="s2">&#39;, &#39;</span><span class="si">$gcm_regid</span><span class="s2">&#39;, NOW())&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="c1">// kullanıcı eklenmiş mi kontrol ediyoruz</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="c1">// kullanıcı bilgilerine erişiyoruz</span>
</span><span class='line'>            <span class="nv">$id</span> <span class="o">=</span> <span class="nb">mysql_insert_id</span><span class="p">();</span> <span class="c1">// en son eklenen id</span>
</span><span class='line'>            <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="s2">&quot;SELECT * FROM gcm_users WHERE id = </span><span class="si">$id</span><span class="s2">&quot;</span><span class="p">)</span> <span class="k">or</span> <span class="k">die</span><span class="p">(</span><span class="nb">mysql_error</span><span class="p">());</span>
</span><span class='line'>            <span class="c1">// kullanıcı bilgilerine geri dönüyoruz</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="nb">mysql_num_rows</span><span class="p">(</span><span class="nv">$result</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="nb">mysql_fetch_array</span><span class="p">(</span><span class="nv">$result</span><span class="p">);}</span>
</span><span class='line'>            <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">false</span><span class="p">;</span> <span class="p">}</span>  <span class="p">}</span>
</span><span class='line'>        <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">return</span> <span class="k">false</span><span class="p">;}</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">// Tüm kullanıcılara erişme </span>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">getAllUsers</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>        <span class="nv">$result</span> <span class="o">=</span> <span class="nb">mysql_query</span><span class="p">(</span><span class="s2">&quot;select * FROM gcm_users&quot;</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}}</span>
</span><span class='line'>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Dördüncü oluşturacağımız dosya GCM.php olacak. Bu dosya GCM sunucuya push bildirim istekleri göndermek için kullanılır.</p></blockquote>

<p>GCM.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>
</span><span class='line'>  <span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'> <span class="k">class</span> <span class="nc">GCM</span> <span class="p">{</span>
</span><span class='line'>    <span class="c1">// constructor</span>
</span><span class='line'>    <span class="k">function</span> <span class="nf">__construct</span><span class="p">()</span> <span class="p">{}</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Push notification yollama, resmimizdeki 5. adım</span>
</span><span class='line'>     <span class="c1">// yollanacak registerin idisi ve mesajımız burada kullanılacak</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">public</span> <span class="k">function</span> <span class="nf">send_notification</span><span class="p">(</span><span class="nv">$registatoin_ids</span><span class="p">,</span> <span class="nv">$message</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="c1">// ilk oluşturduğumuz database bilgimizin olduğu config.php dosyasını cağırıyoruz.</span>
</span><span class='line'>        <span class="k">include_once</span> <span class="s1">&#39;./config.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// adresimize gidiyoruz ardından ulaşılmasını istediğimiz cihazın register_id bilgisini ve mesajımızı buraya yerleştiriyoruz.</span>
</span><span class='line'>        <span class="nv">$url</span> <span class="o">=</span> <span class="s1">&#39;https://android.googleapis.com/gcm/send&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$fields</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;registration_ids&#39;</span> <span class="o">=&gt;</span> <span class="nv">$registatoin_ids</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;data&#39;</span> <span class="o">=&gt;</span> <span class="nv">$message</span><span class="p">,</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nv">$headers</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span>
</span><span class='line'>            <span class="s1">&#39;Authorization: key=&#39;</span> <span class="o">.</span> <span class="nx">GOOGLE_API_KEY</span><span class="p">,</span>
</span><span class='line'>            <span class="s1">&#39;Content-Type: application/json&#39;</span>
</span><span class='line'>        <span class="p">);</span>
</span><span class='line'>        <span class="c1">// bağlantımızı açtık</span>
</span><span class='line'>        <span class="nv">$ch</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// urlyi set ettik ve POST data</span>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="nv">$url</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POST</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_HTTPHEADER</span><span class="p">,</span> <span class="nv">$headers</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="k">true</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// SSL Certificate</span>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_SSL_VERIFYPEER</span><span class="p">,</span> <span class="k">false</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>        <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$ch</span><span class="p">,</span> <span class="nx">CURLOPT_POSTFIELDS</span><span class="p">,</span> <span class="nb">json_encode</span><span class="p">(</span><span class="nv">$fields</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">//post çalıştırılıyor</span>
</span><span class='line'>        <span class="nv">$result</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$result</span> <span class="o">===</span> <span class="k">FALSE</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">die</span><span class="p">(</span><span class="s1">&#39;Curl failed: &#39;</span> <span class="o">.</span> <span class="nb">curl_error</span><span class="p">(</span><span class="nv">$ch</span><span class="p">));</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>        <span class="c1">// Close connection</span>
</span><span class='line'>        <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$ch</span><span class="p">);</span>
</span><span class='line'>        <span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Beşinci oluşturacağımız dosya Register.php dosyası , Bu dosya Android cihazından gelen istekleri alır. Android cihazınızdan Adınız, Mailiniz ve bir Register_id niz ile ki bu id size ilk GCM kayıt olurken verildi, seni bu id ile kayıt ettim demişti GCM.<br/>
Bizde bunları kullanarak Böylece uygulamaya dahil olduk bilgilerimizde database aktarıldı, yazdığın register_id bilgisi de database tablomuzdaki Reg_id bilgisine eşitlenir. Aynı zamanda buradaki reg_id bilgimizi GCM.php dosyamıza da yolladık oluşturduğumuz bir mesajla birlikte. GCM.php bu reg_id sine ait cihaza bu mesajı push etmek için GCM servera bağlanacak.</p></blockquote>

<p>register.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'> <span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// response json</span>
</span><span class='line'>  <span class="nv">$json</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">//Kullanıcı cihazını kayıt eder,register eder</span>
</span><span class='line'>    <span class="nx">ve</span> <span class="nx">bunu</span> <span class="nx">kullanıcı</span> <span class="nx">tablosundaki</span> <span class="nx">reg_id</span> <span class="nx">depolar</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;email&quot;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;regId&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>    <span class="nv">$name</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">$email</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;email&quot;</span><span class="p">];</span>
</span><span class='line'>    <span class="nv">$gcm_regid</span> <span class="o">=</span> <span class="nv">$_POST</span><span class="p">[</span><span class="s2">&quot;regId&quot;</span><span class="p">];</span> <span class="c1">// GCM Registration ID</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//kullanıcı bilgilerini database yazıyor, </span>
</span><span class='line'>    <span class="c1">//Bunu da bilgileri alıp yazdığımız db_functions.php dosyasını kullanarak yapıyor</span>
</span><span class='line'>    <span class="k">include_once</span> <span class="s1">&#39;./db_functions.php&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="k">include_once</span> <span class="s1">&#39;./GCM.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DB_Functions</span><span class="p">();</span>
</span><span class='line'>    <span class="nv">$gcm</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GCM</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$res</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="na">storeUser</span><span class="p">(</span><span class="nv">$name</span><span class="p">,</span> <span class="nv">$email</span><span class="p">,</span> <span class="nv">$gcm_regid</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$registatoin_ids</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="nv">$gcm_regid</span><span class="p">);</span>
</span><span class='line'>    <span class="nv">$message</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;product&quot;</span> <span class="o">=&gt;</span> <span class="s2">&quot;shirt&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$gcm</span><span class="o">-&gt;</span><span class="na">send_notification</span><span class="p">(</span><span class="nv">$registatoin_ids</span><span class="p">,</span> <span class="nv">$message</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>  <span class="k">else</span> <span class="p">{}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Altıncı olarak oluşturacağımız dosya send_message.php dosyası , Bu dosya da reg_id ve mesaage bilgilerimizi alıp notification yapması için GCM.php dosyasını çağırır.</p></blockquote>

<p>send_message.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;regId&quot;</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="nb">isset</span><span class="p">(</span><span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;message&quot;</span><span class="p">]))</span> <span class="p">{</span>
</span><span class='line'>     <span class="nv">$regId</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;regId&quot;</span><span class="p">];</span>
</span><span class='line'>     <span class="nv">$message</span> <span class="o">=</span> <span class="nv">$_GET</span><span class="p">[</span><span class="s2">&quot;message&quot;</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'>     <span class="k">include_once</span> <span class="s1">&#39;./GCM.php&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>     <span class="nv">$gcm</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">GCM</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'>     <span class="nv">$registatoin_ids</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="nv">$regId</span><span class="p">);</span>
</span><span class='line'>     <span class="nv">$message</span> <span class="o">=</span> <span class="k">array</span><span class="p">(</span><span class="s2">&quot;price&quot;</span> <span class="o">=&gt;</span> <span class="nv">$message</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>     <span class="nv">$result</span> <span class="o">=</span> <span class="nv">$gcm</span><span class="o">-&gt;</span><span class="na">send_notification</span><span class="p">(</span><span class="nv">$registatoin_ids</span><span class="p">,</span> <span class="nv">$message</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>     <span class="k">echo</span> <span class="nv">$result</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Son olarak oluşturacağımız dosya index.php dosyası, Bu dosya takip edilen kodları basar. Bu kodlar basit bir admin panel oluşturur , kullanıcı cihazlarını sıralar , bireysel kullanıcılara push notıfıcatıon yollar.</p></blockquote>

<p>index.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;!</span><span class="nx">DOCTYPE</span> <span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">html</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">title</span><span class="o">&gt;&lt;/</span><span class="nx">title</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">meta</span> <span class="nx">http</span><span class="o">-</span><span class="nx">equiv</span><span class="o">=</span><span class="s2">&quot;Content-Type&quot;</span> <span class="nx">content</span><span class="o">=</span><span class="s2">&quot;text/html; charset=UTF-8&quot;</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js&quot;</span><span class="o">&gt;&lt;/</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="err">$</span><span class="p">(</span><span class="nx">document</span><span class="p">)</span><span class="o">.</span><span class="nx">ready</span><span class="p">(</span><span class="k">function</span><span class="p">(){</span>
</span><span class='line'>
</span><span class='line'>            <span class="p">});</span>
</span><span class='line'>            <span class="k">function</span> <span class="nf">sendPushNotification</span><span class="p">(</span><span class="nx">id</span><span class="p">){</span>
</span><span class='line'>                <span class="k">var</span> <span class="nx">data</span> <span class="o">=</span> <span class="err">$</span><span class="p">(</span><span class="s1">&#39;form#&#39;</span><span class="o">+</span><span class="nx">id</span><span class="p">)</span><span class="o">.</span><span class="nb">serialize</span><span class="p">();</span>
</span><span class='line'>                <span class="err">$</span><span class="p">(</span><span class="s1">&#39;form#&#39;</span><span class="o">+</span><span class="nx">id</span><span class="p">)</span><span class="o">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s1">&#39;submit&#39;</span><span class="p">);</span>
</span><span class='line'>                <span class="err">$</span><span class="o">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>                    <span class="nx">url</span><span class="o">:</span> <span class="s2">&quot;send_message.php&quot;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">type</span><span class="o">:</span> <span class="s1">&#39;GET&#39;</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">data</span><span class="o">:</span> <span class="nx">data</span><span class="p">,</span>
</span><span class='line'>                    <span class="nx">beforeSend</span><span class="o">:</span> <span class="k">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="p">},</span>
</span><span class='line'>                    <span class="nx">success</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">textStatus</span><span class="p">,</span> <span class="nx">xhr</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                          <span class="err">$</span><span class="p">(</span><span class="s1">&#39;.txt_message&#39;</span><span class="p">)</span><span class="o">.</span><span class="nx">val</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span>
</span><span class='line'>                    <span class="p">},</span>
</span><span class='line'>                    <span class="nx">error</span><span class="o">:</span> <span class="k">function</span><span class="p">(</span><span class="nx">xhr</span><span class="p">,</span> <span class="nx">textStatus</span><span class="p">,</span> <span class="nx">errorThrown</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>                    <span class="p">}</span>
</span><span class='line'>                <span class="p">});</span>
</span><span class='line'>                <span class="k">return</span> <span class="k">false</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="o">&lt;/</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="nx">style</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span><span class="o">&gt;</span>
</span><span class='line'>            <span class="o">.</span><span class="nx">container</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">width</span><span class="o">:</span> <span class="mi">950</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">margin</span><span class="o">:</span> <span class="mi">0</span> <span class="nx">auto</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">padding</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">h1</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">family</span><span class="o">:</span> <span class="s1">&#39;Helvetica Neue&#39;</span><span class="p">,</span> <span class="nx">Helvetica</span><span class="p">,</span> <span class="nx">Arial</span><span class="p">,</span> <span class="nx">sans</span><span class="o">-</span><span class="nx">serif</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">size</span><span class="o">:</span> <span class="mi">24</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">color</span><span class="o">:</span> <span class="c1">#777;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">div</span><span class="o">.</span><span class="nx">clear</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">clear</span><span class="o">:</span> <span class="nx">both</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">margin</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">padding</span><span class="o">:</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>                <span class="k">list</span><span class="o">-</span><span class="nx">style</span><span class="o">:</span> <span class="nx">none</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">border</span><span class="o">:</span> <span class="mi">1</span><span class="nx">px</span> <span class="nx">solid</span> <span class="c1">#dedede;</span>
</span><span class='line'>                <span class="nx">padding</span><span class="o">:</span> <span class="mi">10</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">margin</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">15</span><span class="nx">px</span> <span class="mi">25</span><span class="nx">px</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">border</span><span class="o">-</span><span class="nx">radius</span><span class="o">:</span> <span class="mi">3</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="o">-</span><span class="nx">webkit</span><span class="o">-</span><span class="nx">box</span><span class="o">-</span><span class="nx">shadow</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">1</span><span class="nx">px</span> <span class="mi">5</span><span class="nx">px</span> <span class="nx">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.35</span><span class="p">);</span>
</span><span class='line'>                <span class="o">-</span><span class="nx">moz</span><span class="o">-</span><span class="nx">box</span><span class="o">-</span><span class="nx">shadow</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">1</span><span class="nx">px</span> <span class="mi">5</span><span class="nx">px</span> <span class="nx">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.35</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">box</span><span class="o">-</span><span class="nx">shadow</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">1</span><span class="nx">px</span> <span class="mi">5</span><span class="nx">px</span> <span class="nx">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.35</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">family</span><span class="o">:</span> <span class="s1">&#39;Helvetica Neue&#39;</span><span class="p">,</span> <span class="nx">Helvetica</span><span class="p">,</span> <span class="nx">Arial</span><span class="p">,</span> <span class="nx">sans</span><span class="o">-</span><span class="nx">serif</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">color</span><span class="o">:</span> <span class="c1">#555;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span> <span class="nx">label</span><span class="p">,</span> <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span> <span class="nx">span</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">family</span><span class="o">:</span> <span class="s1">&#39;Helvetica Neue&#39;</span><span class="p">,</span> <span class="nx">Helvetica</span><span class="p">,</span> <span class="nx">Arial</span><span class="p">,</span> <span class="nx">sans</span><span class="o">-</span><span class="nx">serif</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">size</span><span class="o">:</span> <span class="mi">12</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">style</span><span class="o">:</span> <span class="nx">normal</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">variant</span><span class="o">:</span> <span class="nx">normal</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">font</span><span class="o">-</span><span class="nx">weight</span><span class="o">:</span> <span class="nx">bold</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">color</span><span class="o">:</span> <span class="c1">#393939;</span>
</span><span class='line'>                <span class="nx">display</span><span class="o">:</span> <span class="nx">block</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span> <span class="nx">label</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">height</span><span class="o">:</span> <span class="mi">25</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">width</span><span class="o">:</span> <span class="mi">50</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span> <span class="nx">textarea</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">float</span><span class="o">:</span> <span class="nx">left</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">resize</span><span class="o">:</span> <span class="nx">none</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="nx">ul</span><span class="o">.</span><span class="nx">devices</span> <span class="nx">li</span> <span class="o">.</span><span class="nx">send_btn</span><span class="p">{</span>
</span><span class='line'>                <span class="nx">background</span><span class="o">:</span> <span class="o">-</span><span class="nx">webkit</span><span class="o">-</span><span class="nx">gradient</span><span class="p">(</span><span class="nx">linear</span><span class="p">,</span> <span class="mi">0</span><span class="o">%</span> <span class="mi">0</span><span class="o">%</span><span class="p">,</span> <span class="mi">0</span><span class="o">%</span> <span class="mi">100</span><span class="o">%</span><span class="p">,</span> <span class="nx">from</span><span class="p">(</span><span class="c1">#0096FF), to(#005DFF));</span>
</span><span class='line'>                <span class="nx">background</span><span class="o">:</span> <span class="o">-</span><span class="nx">webkit</span><span class="o">-</span><span class="nx">linear</span><span class="o">-</span><span class="nx">gradient</span><span class="p">(</span><span class="mi">0</span><span class="o">%</span> <span class="mi">0</span><span class="o">%</span><span class="p">,</span> <span class="mi">0</span><span class="o">%</span> <span class="mi">100</span><span class="o">%</span><span class="p">,</span> <span class="nx">from</span><span class="p">(</span><span class="c1">#0096FF), to(#005DFF));</span>
</span><span class='line'>                <span class="nx">background</span><span class="o">:</span> <span class="o">-</span><span class="nx">moz</span><span class="o">-</span><span class="nx">linear</span><span class="o">-</span><span class="nx">gradient</span><span class="p">(</span><span class="nx">center</span> <span class="nx">top</span><span class="p">,</span> <span class="c1">#0096FF, #005DFF);</span>
</span><span class='line'>                <span class="nx">background</span><span class="o">:</span> <span class="nx">linear</span><span class="o">-</span><span class="nx">gradient</span><span class="p">(</span><span class="c1">#0096FF, #005DFF);</span>
</span><span class='line'>                <span class="nx">text</span><span class="o">-</span><span class="nx">shadow</span><span class="o">:</span> <span class="mi">0</span> <span class="mi">1</span><span class="nx">px</span> <span class="mi">0</span> <span class="nx">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mf">0.3</span><span class="p">);</span>
</span><span class='line'>                <span class="nx">border</span><span class="o">-</span><span class="nx">radius</span><span class="o">:</span> <span class="mi">3</span><span class="nx">px</span><span class="p">;</span>
</span><span class='line'>                <span class="nx">color</span><span class="o">:</span> <span class="c1">#fff;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="o">&lt;/</span><span class="nx">style</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;/</span><span class="nx">head</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="nx">body</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'>    <span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'>        <span class="k">include_once</span> <span class="s1">&#39;db_functions.php&#39;</span><span class="p">;</span>
</span><span class='line'>        <span class="nv">$db</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">DB_Functions</span><span class="p">();</span>
</span><span class='line'>        <span class="nv">$users</span> <span class="o">=</span> <span class="nv">$db</span><span class="o">-&gt;</span><span class="na">getAllUsers</span><span class="p">();</span>
</span><span class='line'>        <span class="k">if</span> <span class="p">(</span><span class="nv">$users</span> <span class="o">!=</span> <span class="k">false</span><span class="p">)</span>
</span><span class='line'>            <span class="nv">$no_of_users</span> <span class="o">=</span> <span class="nb">mysql_num_rows</span><span class="p">(</span><span class="nv">$users</span><span class="p">);</span>
</span><span class='line'>        <span class="k">else</span>
</span><span class='line'>            <span class="nv">$no_of_users</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>        <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">        &lt;div class=&quot;container&quot;&gt;</span>
</span><span class='line'><span class="x">            &lt;h1&gt;No of Devices Registered: </span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$no_of_users</span><span class="p">;</span> <span class="cp">?&gt;</span><span class="x">&lt;/h1&gt;</span>
</span><span class='line'><span class="x">            &lt;hr/&gt;</span>
</span><span class='line'><span class="x">            &lt;ul class=&quot;devices&quot;&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span>
</span><span class='line'>                <span class="k">if</span> <span class="p">(</span><span class="nv">$no_of_users</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                    <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                    </span><span class="cp">&lt;?php</span>
</span><span class='line'>                    <span class="k">while</span> <span class="p">(</span><span class="nv">$row</span> <span class="o">=</span> <span class="nb">mysql_fetch_array</span><span class="p">(</span><span class="nv">$users</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>                        <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                        &lt;li&gt;</span>
</span><span class='line'><span class="x">                            &lt;form id=&quot;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]</span> <span class="cp">?&gt;</span><span class="x">&quot; name=&quot;&quot; method=&quot;post&quot; onsubmit=&quot;return sendPushNotification(&#39;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s2">&quot;id&quot;</span><span class="p">]</span> <span class="cp">?&gt;</span><span class="x">&#39;)&quot;&gt;</span>
</span><span class='line'><span class="x">                                &lt;label&gt;Name: &lt;/label&gt; &lt;span&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s2">&quot;name&quot;</span><span class="p">]</span> <span class="cp">?&gt;</span><span class="x">&lt;/span&gt;</span>
</span><span class='line'><span class="x">                                &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="x">                                &lt;label&gt;Email:&lt;/label&gt; &lt;span&gt;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s2">&quot;email&quot;</span><span class="p">]</span> <span class="cp">?&gt;</span><span class="x">&lt;/span&gt;</span>
</span><span class='line'><span class="x">                                &lt;div class=&quot;clear&quot;&gt;&lt;/div&gt;</span>
</span><span class='line'><span class="x">                                &lt;div class=&quot;send_container&quot;&gt;                               </span>
</span><span class='line'><span class="x">                                    &lt;textarea rows=&quot;3&quot; name=&quot;message&quot; cols=&quot;25&quot; class=&quot;txt_message&quot; placeholder=&quot;Type message here&quot;&gt;&lt;/textarea&gt;</span>
</span><span class='line'><span class="x">                                    &lt;input type=&quot;hidden&quot; name=&quot;regId&quot; value=&quot;</span><span class="cp">&lt;?php</span> <span class="k">echo</span> <span class="nv">$row</span><span class="p">[</span><span class="s2">&quot;gcm_regid&quot;</span><span class="p">]</span> <span class="cp">?&gt;</span><span class="x">&quot;/&gt;</span>
</span><span class='line'><span class="x">                                    &lt;input type=&quot;submit&quot; class=&quot;send_btn&quot; value=&quot;Send&quot; onclick=&quot;&quot;/&gt;</span>
</span><span class='line'><span class="x">                                &lt;/div&gt;</span>
</span><span class='line'><span class="x">                            &lt;/form&gt;</span>
</span><span class='line'><span class="x">                        &lt;/li&gt;</span>
</span><span class='line'><span class="x">                    </span><span class="cp">&lt;?php</span> <span class="p">}</span>
</span><span class='line'>                <span class="p">}</span> <span class="k">else</span> <span class="p">{</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">                    &lt;li&gt;</span>
</span><span class='line'><span class="x">                        No Users Registered Yet!</span>
</span><span class='line'><span class="x">                    &lt;/li&gt;</span>
</span><span class='line'><span class="x">                </span><span class="cp">&lt;?php</span> <span class="p">}</span> <span class="cp">?&gt;</span><span class="x"></span>
</span><span class='line'><span class="x">            &lt;/ul&gt;</span>
</span><span class='line'><span class="x">        &lt;/div&gt;</span>
</span><span class='line'><span class="x">    &lt;/body&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Son olarak yaptığımız bu uygulamayı şimdilik bağlı bir Cihazımız olmadığı için bir test.php  dosyamız ile Adımızı, Mailimizi ve Random bir Reg_id vererek kayıt işlemlerinin nasıl gerçekleştiğini görelim.</p></blockquote>

<p>test.php</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="o">&lt;!--</span>
</span><span class='line'><span class="no">To</span> <span class="n">change</span> <span class="n">this</span> <span class="n">template</span><span class="p">,</span> <span class="n">choose</span> <span class="no">Tools</span> <span class="o">|</span> <span class="no">Templates</span>
</span><span class='line'><span class="ow">and</span> <span class="nb">open</span> <span class="n">the</span> <span class="n">template</span> <span class="k">in</span> <span class="n">the</span> <span class="n">editor</span><span class="o">.</span>
</span><span class='line'><span class="o">--&gt;</span>
</span><span class='line'><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">html</span><span class="o">&gt;</span>
</span><span class='line'>    <span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class='line'>        <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;&lt;</span><span class="sr">/title&gt;</span>
</span><span class='line'><span class="sr">        &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/</span><span class="n">html</span><span class="p">;</span> <span class="n">charset</span><span class="o">=</span><span class="no">UTF</span><span class="o">-</span><span class="mi">8</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">        &lt;script src=&quot;</span><span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">ajax</span><span class="o">.</span><span class="n">googleapis</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">ajax</span><span class="o">/</span><span class="n">libs</span><span class="o">/</span><span class="n">jquery</span><span class="o">/</span><span class="mi">1</span><span class="o">.</span><span class="mi">8</span><span class="o">.</span><span class="mi">2</span><span class="o">/</span><span class="n">jquery</span><span class="o">.</span><span class="n">min</span><span class="o">.</span><span class="n">js</span><span class="s2">&quot;&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="s2">        &lt;script type=&quot;</span><span class="n">text</span><span class="o">/</span><span class="n">javascript</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">            $(document).ready(function(){</span>
</span><span class='line'><span class="s2">            });</span>
</span><span class='line'><span class="s2">        &lt;/script&gt;</span>
</span><span class='line'><span class="s2">    &lt;/head&gt;</span>
</span><span class='line'><span class="s2">    &lt;body&gt;</span>
</span><span class='line'><span class="s2">        &lt;form name=&quot;&quot; method=&quot;</span><span class="n">post</span><span class="s2">&quot; action=&quot;</span><span class="n">register</span><span class="o">.</span><span class="n">php</span><span class="s2">&quot;&gt;</span>
</span><span class='line'><span class="s2">         &lt;input type=&quot;</span><span class="n">text</span><span class="s2">&quot; name=&quot;</span><span class="nb">name</span><span class="s2">&quot;/&gt;</span>
</span><span class='line'><span class="s2">         &lt;input type=&quot;</span><span class="n">text</span><span class="s2">&quot; name=&quot;</span><span class="n">email</span><span class="s2">&quot;/&gt;</span>
</span><span class='line'><span class="s2">         &lt;input type=&quot;</span><span class="n">text</span><span class="s2">&quot; name=&quot;</span><span class="n">regId</span><span class="s2">&quot;/&gt;</span>
</span><span class='line'><span class="s2">         &lt;input type=&quot;</span><span class="n">submit</span><span class="s2">&quot;/&gt;</span>
</span><span class='line'><span class="s2">     &lt;/form&gt;</span>
</span><span class='line'><span class="s2">    &lt;/body&gt;</span>
</span><span class='line'><span class="s2">&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><font color=red>Şimdi çalıştırma zamanı!</font> <br/>
Kurulumunu gerçekleştirdiğiniz LAMP ile uygulamarımızı kendi bilgisayarımızda test etmek mümkün demiştik. Bunun için benim bilgisayarım için uzantısı  /var/www/html/ olan dizinimin altına tüm bu dosyalarımın olduğu GCM adlı dizinimi yerleştiriyorum. Yeni dizinim  /var/www/html/GCM oluyor.</p>

<p>Browsera gelip <a href="http://localhost/GCM/">http://localhost/GCM/</a> dediğimiz zaman çıkan ekran;</p>

<p><img src="http://i.imgur.com/ajNjohE.jpg"></p>

<p>Şimdi bir cihaz bağlıyormuşuz gibi test.php dosyamızı çalıştıralım.<br/>
Bunun için <a href="http://localhost/GCM/test.php">http://localhost/GCM/test.php</a> adresine girelim ve bir ad, mail, reg_id bilgisi girelim.<br/>
 <a href="http://localhost/GCM/">http://localhost/GCM/</a> adresini tekrar kontrol edelim.</p>

<p><img src="http://i.imgur.com/OlHKXxk.jpg"></p>

<p><img src="http://i.imgur.com/XVLWaba.jpg"></p>

<p>Gördüğünüz gibi bir cihaz eklendi index.php dosyamıza. Burada eklenen cihazlar sıralanır. Ve push bildirimlerimizi mesaj kısmına yazıp send dediğimizde o cihazlara bildirim gitmiş olur.</p>

<p>Bu arada Database de durumlar ne oldu derseniz? O halde ekran görüntüsünü paylaşayım sizinle;</p>

<p><img src="http://i.imgur.com/LDhTI6X.png"></p>

<p>Gördüğünüz gibi girdiğimiz Ad, Mail ve Reg_id bilgileri otomatik olarak oraya kayıt oldu.</p>

<p>Yazımı burada bitireceğim , sonraki aşamada Gerçek bir android cihaz bağlayıp uygulamamıza gerçek bir notification yollayacağız.<br/>
İyi çalışmalar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails-4]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/03/17/ruby-on-rails-4/"/>
    <updated>2014-03-17T16:14:30+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/03/17/ruby-on-rails-4</id>
    <content type="html"><![CDATA[<p><font color='red'> CRUD </font> işlemlerinden <font color='red'>  Update</font> etme seçeneğine göz atalım bu yazımda ;<br/>
öncelikle aşağıdaki komutla dosyamızı açalım</p>

<p><code>$ nano app/models/post.rb</code></p>

<p>dosyasına girdikten sonra dosya içeriğimiz aşağıdaki gibidir;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>şeklinde henüz doldurulmamış sadece<font color='red'> Post </font>  sınıfının <font color='red'> ActiveRecord::Base  </font>
sınıfını miras aldığını görürüz.<font color='red'>  ActiveRecord </font>  sayesinde <font color='red'> Rails </font>  modelleri için işlevselllik sağlanıyor.<br/>
Bunlar ;   CRUD (Create, Read, Update,Destroy) işlemleri, veri doğrulama, gelişmiş arama desteği ve çoklu modellerin birbirleriyle ilişki yeteneği..</p>

<h3>Veri Doğrulama</h3>

<p>Rails modellere gönderilen verileri doğrulamak için yardımcı yöntemleri içerir. Bunun için;</p>

<p><code>$nano app/models/post.rb</code><br/>
 dosyasını açalım ve düzenleyelim.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Post</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Base</span>
</span><span class='line'><span class="err">  </span><span class="n">validates</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">presence</span><span class="p">:</span> <span class="kp">true</span><span class="p">,</span>
</span><span class='line'><span class="err">                    </span><span class="ss">length</span><span class="p">:</span> <span class="p">{</span> <span class="ss">minimum</span><span class="p">:</span> <span class="mi">5</span> <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Bu değişiklik ile , başlık yazarken en az beş karakter uzunluğunda bir başlık yazmanız istenecek. <br/>
Rails bir modelde çeşitli koşulları doğrulamak için; <br/>
kolonların yapısını ,biçimini , ilişkili nesnelerin varlığını kontrol eder.</p>

<p>Geçersiz bir post oluşturduğunuzda <font color='red'>  @post.save </font> çağrıldığı zaman , yaptığınız doğrulama kontrolü sayesinde yanlış olan şeyler onaylanmayacaktır.<br/>
Mesela  5 harften az bir <font color='red'> title </font> karakteri girdiğinizde indeximizin olduğu sayfaya gönderileceksiniz ve yazdığınız titlenin gelmediğini göreceksiniz. Eğer yanlış giden bişey varsa <font color='red'> index </font> sayfasına gelmek yerine yeni post oluşturma sayfasına yönlendirilmek isteyelim.<br/>
Bunun için düzenlemeler yapmamız gerekir;</p>

<p><code>$nano app/controllers/posts_controller.rb</code> <br/>
 dosyasını açtığımızda; <br/>
Create metotunda yer alan <font color='red'>@post.save </font> satırımızda değişiklikler yapacağız.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">new</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">].</span><span class="n">permit</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:text</span><span class="p">))</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="err">    </span><span class="n">redirect_to</span> <span class="vi">@post</span>
</span><span class='line'><span class="err">  </span><span class="k">else</span>
</span><span class='line'><span class="err">    </span><span class="n">render</span> <span class="s1">&#39;new&#39;</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>Komutumuzda yanlış giden bişeyler varsa <font color='red'>create </font> metotumuzda  <font color='red'>redirect_to</font> yerine <font color='red'> render </font>  kullanılacak.</p>

<p><font color='red'>Render </font> methodu <font color='red'>@post  </font> objesini geçerek  <font color='red'>new </font> şablonuna geçer. Yeni form gönderme isteği oluşturur.</p>

<p>bu komutları yazıp çıktıktan sonra <a href="http://localhost:3000/posts">http://localhost:3000/posts</a> adresimize girip<br/>
title kısmını 5 harftan fazla olunca title ve textimizin kayıt edildiğini index sayfasında görürüz.<br/>
Ancak 5 harften az karakterler yazıp <font color='blue'> Save Post </font> dersek aynı sayfada kaldığımızı göreceğiz. Biz aynı sayfada kalıyoruz ancak kullanıcıya bir hata raporu vermiyoruz eksik girmemesini söylemek istiyoruz.</p>

<p><code>$ nano app/views/posts/new.html.erb</code><br/>
sayfasına gireriz ve içini aşağıdaki şekilde değiştiririz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for :post, url: posts_path do |f| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% if @post.errors.any? %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div id=</span><span class="s2">&quot;error_explanation&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;</span><span class="sx">%= pluralize(@post.errors.count, &quot;error&quot;) %&gt; prohibited</span>
</span><span class='line'><span class="sx">      this post from being saved:&lt;/h2&gt;</span>
</span><span class='line'><span class="sx">    &lt;ul&gt;</span>
</span><span class='line'><span class="sx">    &lt;% @post.errors.full_messages.each do |msg| %&gt;</span>
</span><span class='line'><span class="sx">      &lt;li&gt;&lt;%=</span> <span class="n">msg</span> <span class="sx">%&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">    &lt;/ul&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">  &lt;% end %&gt;</span>
</span><span class='line'><span class="sr">  &lt;p&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.label :title %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.text_field :title %&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.label :text %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:text</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.submit %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'><span class="sx"> </span>
</span><span class='line'><span class="sx">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">posts_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>şimdi sayfamızı tekrar yenilersek ve 5 harften kısa bir title yazarsak aşağıdaki şekilde bir uyarı alırız.</p>

<p><img src="http://i.imgur.com/WMcmd7z.jpg?1" alt="" /></p>

<p>Herhangi bir hata varsa <font color='red'> @post.errors.any?</font> Satırı ile kontrol ediliyor ve
<font color='red'> @post.errors.full_messages </font>  satırı ile de tüm hataların listesini gösteriyoruz.</p>

<p>ÇoğunluklA Rails de yardımcı değişkenler sayılar ve dizelerdir. Sayı büyük olduğu taktirde
dize otomatik olarak çoğul olacak .</p>

<p><font color='red'> posts_controller</font>  da <font color='red'>@post = Post.new </font>  satırı koymazsak <font color='red'>@post.errors.any?  </font> bize hata atar.<br/>
 <font color='red'> field_with_errors</font> sınıfında div de  bir hata olduğunda<font color='red'> Rails </font> otomatik olarak alanları sarar.
Onları çarpıcı yapmak için bir <font color='red'>css </font>   kuralı tanımlayabilirsiniz.<br/>
Şimdi başlık olmadan bir yazı kaydederken de bir hata mesajı alırsınız.</p>

<p><img src="http://i.imgur.com/0whYz6s.jpg" alt="" /></p>

<p> <font color='red'> CRUD </font>  işlemlerinde <font color='red'>  U  </font>  yani Update gelirsek şimdi,</p>

<p><font color='red'>posts_controller</font>  sayfamıza girersek</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">edit</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>satırını dosyamızın en altına ekliyoruz.<br/>
Henüz sayfamızı yenilemiyoruz çünkü henüz şablonumuz eksik yenilesek dahi sayfamızda değişiklik yansımayacak.<br/>
Şimdi şablonlarımız için</p>

<p><code>nano app/views/posts/edit.html.erb</code></p>

<p>sayfası diye yeni bir <font color='red'>html</font> sayfası oluşturuyoruz <font color='red'> Views </font> dizinimizde.
Oluşturduğumuz dosyanın içine ise</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Editing</span> <span class="n">post</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;%= form_for :post, url: post_path(@post), method: :patch do |f| %&gt;</span>
</span><span class='line'><span class="sr">  &lt;% if @post.errors.any? %&gt;</span>
</span><span class='line'><span class="sr">  &lt;div id=&quot;error_explanation&quot;&gt;</span>
</span><span class='line'><span class="sr">    &lt;h2&gt;&lt;%= pluralize(@post.errors.count, &quot;error&quot;) %&gt; prohibited</span>
</span><span class='line'><span class="sr">      this post from being saved:&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">% @post.errors.full_messages.each </span><span class="k">do</span> <span class="o">|</span><span class="n">msg</span><span class="o">|</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">      &lt;li&gt;</span><span class="o">&lt;</span><span class="sx">%= msg %&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="sx">    &lt;% end %&gt;</span>
</span><span class='line'><span class="sx">    &lt;/ul&gt;</span>
</span><span class='line'><span class="sx">  &lt;/div&gt;</span>
</span><span class='line'><span class="sx">  &lt;% end %&gt;</span>
</span><span class='line'><span class="sx">  &lt;p&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:title</span> <span class="sx">%&gt;&lt;br&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.text_field :title %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="sx"> </span>
</span><span class='line'><span class="sx">  &lt;p&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:text</span> <span class="sx">%&gt;&lt;br&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.text_area :text %&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="sx"> </span>
</span><span class='line'><span class="sx">  &lt;p&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx"> </span>
</span><span class='line'><span class="sx">&lt;%= link_to &#39;Back&#39;, posts_path %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ancak henüz <font color='red'>Edit</font> aksiyonumuz formumuzda yer almıyor sayfamızda bunun için yapmamız gerekenler var.
<font color='red'>Rest</font> protokole göre kaynakları güncellemek için beklenen konum <font color='red'> HTTP </font> yöntemidir.</p>

<p><code>app/controllers/posts_controller.rb</code></p>

<p>dosyasında güncelleme eylemini oluşturmanız gerekir:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">update</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="k">if</span> <span class="vi">@post</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">].</span><span class="n">permit</span><span class="p">(</span><span class="ss">:title</span><span class="p">,</span> <span class="ss">:text</span><span class="p">))</span>
</span><span class='line'><span class="err">    </span><span class="n">redirect_to</span> <span class="vi">@post</span>
</span><span class='line'><span class="err">  </span><span class="k">else</span>
</span><span class='line'><span class="err">    </span><span class="n">render</span> <span class="s1">&#39;edit&#39;</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p> <font color='red'>update  </font>  , zaten var olan bir kaydı güncelleştirmek istediğinizde kullanılır ve
  Eğer güncellemek istediğiniz nitelikleri içeren bir hash varsa onu kabul eder.</p>

<p>Daha önce de olduğu gibi, biz kullanıcıya formu geri göstermek istediğimiz zaman gönderiyi güncelleyerek bir hata varsa</p>

<p>Sonunda, bütün mesajların olduğu index listesinde <font color='red'>edit</font> aksiyonuna bir link gösterir.<br/>
Ancak <font color='red'>&lsquo;show&rsquo;</font> linkinin yanında gözükmesi için aşağıdaki adrese girip</p>

<p><code>$nano app/views/posts/index.html.erb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">table</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="n">tr</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;</span><span class="no">Title</span><span class="o">&lt;</span><span class="sr">/th&gt;</span>
</span><span class='line'><span class="sr">    &lt;th&gt;Text&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;&lt;</span><span class="sr">/th&gt;</span>
</span><span class='line'><span class="sr">    &lt;th&gt;&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;% @posts.each do |post| %&gt;</span>
</span><span class='line'><span class="sr">  &lt;tr&gt;</span>
</span><span class='line'><span class="sr">    &lt;td&gt;&lt;%= post.title %&gt;&lt;/</span><span class="n">td</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= post.text %&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="sx">    &lt;td&gt;&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Show&#39;</span><span class="p">,</span> <span class="n">post</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span> <span class="n">edit_post_path</span><span class="p">(</span><span class="n">post</span><span class="p">)</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="sr">/tr&gt;</span>
</span><span class='line'><span class="sr">&lt;% end %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">table</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>şimdi sayfamızı yenilediğimizde ve bir form doldurup gönderdiğimizde index sayfamızda resimde gördüğümüz gibi  <font color='red'>Edit</font> linkinin geldiğini görüyoruz.</p>

<p><img src="http://i.imgur.com/fnOsCN8.jpg" alt="" /></p>

<p>Ancak <font color='red'>show</font> sayfamıza geldiğimizde linkin burda olmadığını görüyoruz.</p>

<p><img src="http://i.imgur.com/I6VOZef.jpg" alt="" /></p>

<p>bunun içinde</p>

<p><code>app/views/posts/show.html.erb</code></p>

<p>komutu ile sayfamızı açıyoruz ve içine en alta</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">|</span> <span class="o">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Edit&#39;</span><span class="p">,</span> <span class="n">edit_post_path</span><span class="p">(</span><span class="vi">@post</span><span class="p">)</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>satırını ekliyoruz. Kayıt edip çıkıyoruz ve tekrar sayfamızı yeniliyoruz <font color='red'>show </font> sayfasına geliyoruz.</p>

<p>şimdi show sayfasında da  <font color='red'>Edit</font> linkinin geldiğini görürüz.</p>

<p><img src="http://i.imgur.com/moLqyBD.jpg" alt="" /></p>

<p>Viewsteki tekrarların silinmesi için<br/>
<font color='red'> Edit</font>  sayfamız<font color='red'> New </font>sayfasına çok benziyor.
Aslında her iki yerdede formu göstermek için aynı kod paylaşılır</p>

<p><code>nano app/views/posts/_form.html.erb</code><br/>
 komutu ile<br/>
Aşağıdaki içeriğe sahip yeni bir dosya oluşturalım</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for @post do |f| %&gt;</span>
</span><span class='line'><span class="sx">  &lt;% if @post.errors.any? %&gt;</span>
</span><span class='line'><span class="sx">  &lt;div id=</span><span class="s2">&quot;error_explanation&quot;</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">h2</span><span class="o">&gt;&lt;</span><span class="sx">%= pluralize(@post.errors.count, &quot;error&quot;) %&gt; prohibited</span>
</span><span class='line'><span class="sx">      this post from being saved:&lt;/h2&gt;</span>
</span><span class='line'><span class="sx">    &lt;ul&gt;</span>
</span><span class='line'><span class="sx">    &lt;% @post.errors.full_messages.each do |msg| %&gt;</span>
</span><span class='line'><span class="sx">      &lt;li&gt;&lt;%=</span> <span class="n">msg</span> <span class="sx">%&gt;&lt;/li&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">% end %&gt;</span>
</span><span class='line'><span class="sx">    &lt;/ul&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="sr">/div&gt;</span>
</span><span class='line'><span class="sr">  &lt;% end %&gt;</span>
</span><span class='line'><span class="sr">  &lt;p&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.label :title %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sr">    &lt;%= f.text_field :title %&gt;</span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.label :text %&gt;&lt;br&gt;</span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">text_area</span> <span class="ss">:text</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt;</span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <code>$nano app/views/posts/new.html.erb</code><br/>
dosyasına girelim</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">New</span> <span class="n">post</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;%= render &#39;form&#39; %&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;%= link_to &#39;Back&#39;, posts_path %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>içerikleri ekleyip kayıt edip çıkalım aynı şekilde ;</p>

<p><code>$nano app/views/posts/edit.html.erb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Edit</span> <span class="n">post</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;%= render &#39;form&#39; %&gt;</span>
</span><span class='line'><span class="sr"> </span>
</span><span class='line'><span class="sr">&lt;%= link_to &#39;Back&#39;, posts_path %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>dosyasına da  bu komutlarımızı ekliyoruz.<br/>
Ve en son sayfamızı tekrar yenileyip değişikliklere bakıyoruz.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails-3]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/03/11/ruby-on-rails-3/"/>
    <updated>2014-03-11T18:06:11+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/03/11/ruby-on-rails-3</id>
    <content type="html"><![CDATA[<p>Bir önceki yazımda form oluşturmak , oluşturduklarımızı görmek ve ve listeleme işlemleri yaptık.
Şimdi sayfaları arasında gezinmek için bazı bağlantılar ekleyelim.</p>

<p><code>$app/views/welcome/index.html.erb</code><br/>
dosyasını açıp  aşağıdaki gibi değiştirelim;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Hello</span><span class="p">,</span> <span class="no">Rails</span><span class="o">!&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;%= link_to &quot;My Blog&quot;, controller: &quot;posts&quot; %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p> <font color='red'> link_to </font> methodu <font color='brown'> Rails  </font> de <font color='brown'> View </font> katmanında  yardımcı metotlardan biridir. Gitmek istediğimiz sayfaya link oluşturur.<br/>
Dosyamıza eklediğimiz bu iki satırlık kodumuzla ilk açılışta <font color='red'> Hello,Rails!  </font>  yazısı ile
<font color='blue'> My Blog </font> linki oluşacak linke tıkladığımızada ise önceden oluşturduğumuz kayıtları görebileceğiz.
<a href="http://localhost:3000/">http://localhost:3000/</a> adresine girdiğimizde ;</p>

<p><img src="http://i.imgur.com/sqzokvt.jpg?1" alt="" /></p>

<p>resim4 !!!!Not my blog a tıkladıgında blog ları mantıklı sekılde cek</p>

<p>Şimdi bir link daha ekleyelim bu da bizi yeni bir ekleme yapmak için yönlendirecek bir link olsun o halde  <font color='blue'> New Post </font> adında yeni post oluşturmak için tekrar dosyamıza girerek<br/>
<code>$ nano app/views/posts/index.html.erb</code><br/>
komutu ile dosyamıza girip <br/>
<code>&lt;%= link_to 'New post', new_post_path %&gt;</code><br/>
 satırını ekleyeceğiz son hali aşağıdaki gibi olacak.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Hello</span><span class="p">,</span> <span class="no">Rails</span><span class="o">!&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'><span class="sr">&lt;%= link_to &quot;My Blog&quot;, controller: &quot;posts&quot; %&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;%= link_to &#39;New post&#39;, new_post_path %&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://localhost:3000/">http://localhost:3000/</a> adresine girdiğimizde;</p>

<p><img src="http://i.imgur.com/0quW0MB.jpg?1" alt="" /></p>

<p>Gördüğünüz gibi <font color='blue'> New Post </font> linkimizde geldi. Şimdi linkimize tıklarsak karşımıza aşağıdaki gibi postlarımızı oluşturduğumuz ekranımız gelecek.</p>

<p><img src="http://i.imgur.com/gSIAqmk.jpg?1" alt="" /></p>

<p>Hatırlarsak <font color='blue'> My Blog </font> linkine tıkladığımızda karşımıza <font color='brown'> index </font> sayfamız çıkmıştı tüm
kayıtlarımızın bulunduğu peki biz isteyelim ki <font color='blue'> New Post </font>&lsquo;a girelim kayıtımızı oluşturduktan sonra öyle bir linkimiz daha olsun ki bizi <font color='brown'> index </font>  sayfamıza geri götürsün.
Bunun için de <font color='blue'> Back </font> linkini oluşturalım.
Linki oluşturacağımız <font color='blue'> New Post </font>'tu. Bu bizim <font color='brown'> Views </font> dizinimizde <code>new.html.erb</code> sayfamız gideceğimizi gösterir.<br/>
<code>$app/views/posts/new.html.erb</code></p>

<p>komutu ile dosyamıza giriyoruz içinde önceden yazdığımız kodlar var ve biz bunun en altına aşağıdaki şekilde bir satır ekliyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for :post do |f| %&gt;</span>
</span><span class='line'><span class="sx">  ...</span>
</span><span class='line'><span class="sx">&lt;% end %&gt;</span>
</span><span class='line'><span class="sx"> &lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">posts_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Kayıt edip çıktıktan sonra <a href="http://localhost:3000/posts/new">http://localhost:3000/posts/new</a> adresimize girince çıkan sayfamız aşağıdaki gibi link eklenmiş olarak gelir.</p>

<p><img src="http://i.imgur.com/oM0Ru8s.jpg?1" alt="" /></p>

<p>Postumuzu oluşturduktan sonra oluşturduğumuz postu <font color='brown'> show </font> metotuyla oluşturduğumuz Text ve Title Başlıkları ile görüyorduk şimdi buraya da bir link ekleyelim ve bizi bu sayfadan <font color='brown'> index </font> sayfamıza götürsün , bunun için<br/>
<code>app/views/posts/show.html.erb</code><br/>
dosyamıza giriyoruz ve içine</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="ss">Title</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/strong&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= @post.title %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="ss">Text</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/strong&gt;</span>
</span><span class='line'><span class="sr">  &lt;%= @post.text %&gt;</span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="o">&lt;%=</span> <span class="n">link_to</span> <span class="s1">&#39;Back&#39;</span><span class="p">,</span> <span class="n">posts_path</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>yazıp kayıt ediyoruz şimdi <a href="http://localhost:3000/posts/new">http://localhost:3000/posts/new</a>  adresinden yeni bir post oluşturup <font color='brown'> Save Post </font>  butonuna tıkladıktan sonra çıkan sayfada <font color='blue'> Back </font> linkinin geldini görürsünüz .</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby on Rails-2]]></title>
    <link href="http://kadertarlan.github.io/blog/2014/03/10/ruby-on-rails-2/"/>
    <updated>2014-03-10T18:48:43+02:00</updated>
    <id>http://kadertarlan.github.io/blog/2014/03/10/ruby-on-rails-2</id>
    <content type="html"><![CDATA[<p>Şimdi bir önceki örnekte yaptığımız kısa çalışmaları biraz daha ilerletelim ve blog uygulamasında yeni olaylar oluşturalım.
Peki bunlar neler olsun mesela bir form oluşturalım ve biz buraya yeni eklemeler yapalım, eklenenleri okuyalım, güncelleyebilelim, silebilelim.
Buna <font color='brown' > CRUD </font> işlemleri diyeceğiz yani Create,Read,Update,Delete..<br/>
 <code>$nano config/routes.rb</code> <br/>
komutu ile dosyamıza bakalım. İçeriği;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>  <span class="no">Blog</span><span class="o">::</span><span class="no">Application</span><span class="o">.</span><span class="n">routes</span><span class="o">.</span><span class="n">draw</span> <span class="k">do</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="n">resources</span> <span class="ss">:posts</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="n">root</span> <span class="ss">to</span><span class="p">:</span> <span class="s2">&quot;welcome#index&quot;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
şeklindedir.</p>

<p><code>rake routes</code> komutunu çalıştırırsak  standart  RESTful aksiyonları için tüm yolları görmüş oluruz.</p>

<p><code>$rake routes</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="err">    </span><span class="n">posts</span> <span class="no">GET</span><span class="err">   </span> <span class="sr">/posts(.:format)          posts#index </span>
</span><span class='line'><span class="sr">          POST   /</span><span class="n">posts</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span><span class="err">         </span> <span class="n">posts</span><span class="c1">#create </span>
</span><span class='line'><span class="err"> </span><span class="n">new_post</span> <span class="no">GET</span><span class="err">   </span> <span class="sr">/posts/ne</span><span class="n">w</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span><span class="err">     </span> <span class="n">posts</span><span class="c1">#new </span>
</span><span class='line'><span class="n">edit_post</span> <span class="no">GET</span><span class="err">   </span> <span class="sr">/posts/</span><span class="ss">:id</span><span class="o">/</span><span class="n">edit</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span> <span class="n">posts</span><span class="c1">#edit </span>
</span><span class='line'><span class="err">     </span><span class="n">post</span> <span class="no">GET</span><span class="err">   </span> <span class="sr">/posts/</span><span class="ss">:id</span><span class="p">(</span><span class="o">.</span><span class="ss">:format</span><span class="p">)</span><span class="err">     </span> <span class="n">posts</span><span class="c1">#show </span>
</span><span class='line'><span class="err">     </span><span class="n">root</span><span class="err">       </span> <span class="sr">/                         welcome#index </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>Şimdi uygulamamızda yeni bir mesaj oluşturmak için ve  eklemek ve onları görmek için çalışmalar yapacağız.
Oluşturma ve okuma: Bu <font color='red'> CRUD </font> deyiminden gelen &ldquo;C&rdquo; ve &ldquo;R&rdquo; dir. Bunu yaptığımızda formumuz aşağıdaki gibi gözükecek.</p>

<p><img src="http://i.imgur.com/FWrbLMG.png?1" alt="" /></p>

<p>Uygulama içinde yeni bir yazı oluşturmak için ihtiyacımız olacak ilk şey, o yazı için bir yer ayırmaktır işte bunun için  harika yer;
<code>/posts/new</code> olur.</p>

<p>Route önceden tanımlanmış olan, istekleri artık uygulamasında <code>posts/new</code> için yapabilir.
Ancak <a href="http://localhost:3000/posts/new">http://localhost:3000/posts/new</a> sayfasına girdiğimizde bir hata görürüz.</p>

<p><img src="http://i.imgur.com/Y52AcwN.png?1" alt="" /></p>

<p>bu hatanın sebebi,  route'un bu  isteği sunmak için tanımlanan bir controller'a sahip olmamasıdır.
Bu özel sorunun çözümü basittir: <font color='red'>PostsController </font> adında bir controller oluşturalım.</p>

<p><code>$ rails g controller posts</code>
Komutu ile yeni oluşturulan dosyamızı<br/>
<code>$ nano app/controllers/posts_controller.rb</code> komutu ile açarsak boş olduğunu
görürsünüz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Burada controller basitçe <font color='red'> ApplicationController </font> sınıfını miras almak için tanımlanmış bir sınıftır.
Controlleri ilgilendiren aksiyonları metotlarımızla burada tanımlayacağız.
Bu aksiyonlar bizim sistem içinde postta<font color='red'> CRUD </font> işlemleri yapmamızı sağlayacak.
Controllerımızı oluşturduk şimdi sayfamızı<br/>
<code>http://localhost:3000/posts/new</code> adresini tarayıcımıza yazarak yenileyelim.
Hop yeni bir hata ile karşılastık.</p>

<p><img src="http://i.imgur.com/CRvUU3F.png?1" alt="" /></p>

<p>Bu hata ile Rails'in  üretilen PostsController'ın içinde <font color='red'>new </font> metodunu bulamadığını gösteriyor.<br/>
Controllers Rails de oluştuğu zaman varsayılan olarak boştur.
Oluşum sürecinde biz isteğimize göre eylemleri tanımlarız.<br/>
Elle bir controller içinde bir eylem tanımlamak için yapmamız gereken Controller içinde yeni bir metot tanımlamaktır. Bunun için new metodunu kullanırız index hatası almamak için de index metodunu kullarız.
<code>$nano app/controllers/posts_controller.rb</code><br/>
komutu ile dosyamızın içinde PostsController sınıfında,yeni metodumuzu aşağıdaki şekilde tanımlıyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">new</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>PostsController'da tanımlanan yeni yöntemden sonra <code>http://localhost:3000/posts/new</code> yenilersek eğer başka bir hata görürsünüz:</p>

<p><img src="http://i.imgur.com/jfbJa26.png?1" alt="" /></p>

<p>Şablonumuzun <code>posts/new</code> için eksik olduğunu söylüyor.</p>

<p><font color='brown'>Missing template posts/new, application/new with {locale:[:en], formats:[:html],
handlers:[:erb, :builder, :coffee]}. Searched in: * &ldquo;/path/to/blog/app/views&rdquo; </font><br/>
hatamız budur peki ne demek istedi bize burda. <br/>
Normalde Rails bilgilerin görüntülenmesi için <font color='red'>Views </font> adını verdiğimiz dosyalara sahiptir.
Ancak burada henüz view oluşturulmamış hatası alıyoruz. Hatayı yakından incelersek;<br/>
İlk bölümde şablondaki neler eksik onları tanımlamış. <br/>
Elimizde <font color='brown'>posts/new </font> şablonu var . İlk olarak Rails bu şablona bakıyor , eğer bulamazsa<font color='brown'> /application/new </font> şablonunu çağırıyor ve ona bakıyor.
Burdaki sebep<font color='brown'> PostController , ApplicationController </font> sınıfını miras almıştı.</p>

<p><font color='brown'>:locale </font> key yazan yerde şablonun dili düzeltilebilir. Varsayılan olarak ingilizcedir. <br/>
<font color='brown'>:formats </font> key  şablonun biçimini belirler. Varsayılan olarak HTML'dir bu yüzden Rails burada bir html şablonu arıyor.<br/>
<font color='brown'> :handlers </font> key de ise bizim şablon oluşturmak için kullanacağımız işleyicilerden bahsediyor.<br/>
<font color='brown'>:erb </font> en yaygın <font color='red'>HTML </font> şablonları için kullanılır.<br/>
<font color='brown'>:builder , </font>  <font color='red'>XML </font> şablonları için <br/>
<font color='brown'>:coffee </font>JavaScript şablonları oluştururken  CoffeScripti kullanır.</p>

<p>Basit şablon çalıştırmak için Views dosyasına ihtiyacımız olduğunu anladık o zaman<br/>
<code>$nano app/views/posts/new.html.erb</code><br/>
 dosyamızı oluşturalım.</p>

<p>Bu dosyada ilk uzatma eki yani <font color='brown'>html </font> şablon biçimini  belirtir yani format kısmıdır,
<font color='brown'> erb </font> ise kullanılacak işleyicisini belirtir yani handler kısmıdır.</p>

<p>Rails bu  uygulamamız için <code>app/views</code> dizini altındaki <code>/posts/new</code>şablonunu bulmaya çalışır.<br/>
Bu şablon için formatımızda HTML formu kullanmak istiyorsak ERB dilini kullanmamız gerekir.<br/>
Bu yüzden çağırdığımız dosya adımız <code>app/views</code> dizini altında  <code>posts/new.html.erb</code> şeklinde olur. <br/>
 Şimdi bu dosyamızın içine sadece</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">New</span> <span class="no">Post</span><span class="o">&lt;</span><span class="sr">/h1&gt; </span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>yazalım ve <code>http://localhost:3000/posts/new</code> adresimizi yenilediğimizde artık sayfada bir başlık olduğunu görürsünüz. <br/>
Route, controller, metotlar ve views artık uyumlu çalışıyor.</p>

<p>Şimdi bir yazı formu oluşturmak için Rails de <font color='red'>form_for</font> adlı bir method kullanacağız.<br/>
Bunun için  şablonumuzun içine yani<br/>
<code>$nano app/views/posts/new.html.erb</code><br/>
komutumuzla dosyamızın içine girelim ve</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="sx">%= form_for :post do |f| %&gt; </span>
</span><span class='line'><span class="sx">  &lt;p&gt; </span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:title</span> <span class="sx">%&gt;&lt;br&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.text_field :title %&gt; </span>
</span><span class='line'><span class="sx">  &lt;/p&gt; </span>
</span><span class='line'><span class="sx">  </span>
</span><span class='line'><span class="sx">  &lt;p&gt; </span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">label</span> <span class="ss">:text</span> <span class="sx">%&gt;&lt;br&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sx">%= f.text_area :text %&gt; </span>
</span><span class='line'><span class="sx">  &lt;/p&gt; </span>
</span><span class='line'><span class="sx">  </span>
</span><span class='line'><span class="sx">  &lt;p&gt; </span>
</span><span class='line'><span class="sx">    &lt;%=</span> <span class="n">f</span><span class="o">.</span><span class="n">submit</span> <span class="sx">%&gt; </span>
</span><span class='line'><span class="sx">  &lt;/p&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="sx">% end </span><span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>
komutlarını yazalım ve kaydedip çıkalım.
Şimdi sayfayı yenileyelim ve yazının başında bahsettiğimiz formumuzun oluştuğunu göreceğiz.</p>

<p>Böylece sayfamızda bir başlık ,bir yazı metni için iki etiket ve iki metin alanı, göndermek için de bir çağrıform , Gönder düğmesini ,yaratacaktır.</p>

<p>Ancak Formda başka bir yere gitmek için farklı bir URL kullanmak gerekir.
Bunun içinde form_for motodundaki <font color='brown'>:url </font> seçeneğini kullanırız.<br/>
Tipik olarak Rails'de ,bu gibi yeni bir başvuru için kullanılan eyleme <font color='brown'> create </font> denir.<br/>
Biz de formumuz da bu eylemi belirtmeliyiz. <br/>
<code>$nano app/views/posts/new.html.erb</code><br/>
komutu ile dosyamızın  içindeki <font color='brown' > form_for </font> satırı düzenleyelim o zaman;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="n">form_for</span> <span class="ss">:post</span><span class="p">,</span> <span class="ss">url</span><span class="p">:</span> <span class="n">posts_path</span> <span class="k">do</span> <span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>
şimdi formumuzu doldurmak mümkün ve doldurduktan sonra gönder düğmesine tıklamak mümkün oldu. <br/>
Ancak formu gönderdikten sonra karşımıza bir hata daha çıkacak ;
<img src="http://i.imgur.com/KpMml91.png?1" alt="" /></p>

<p><font color='brown'>&ldquo;Unknown action&rdquo;</font>  yazısını gördük bunu yok etmek için <font color='brown'> PostsControllers </font>
altında <font color='red'>create</font> metodu oluşturmalıyız.<br/>
<code>$nano app/controllers/posts_controller.rb</code><br/>
komutu ile dosyamızı açalım ve içine</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">PostsController</span> <span class="o">&lt;</span> <span class="no">ApplicationController</span>
</span><span class='line'><span class="err"> </span><span class="k">def</span> <span class="nf">new</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
yazalım. <br/>
Şimdi formu yeniden gönderelim, başka bir tanıdık hata görürsünüz: Bir şablon eksik. <br/>
Şimdilik bunu gözardı edelim. Şimdi new postumuzu database göndermek için
create aksiyomu olmalı.
Tekrar create olan methodumuza geliyoruz ve içine</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'><span class="err">  </span><span class="n">render</span> <span class="ss">text</span><span class="p">:</span> <span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">].</span><span class="n">inspect</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
komutlarını yazıyoruz.<br/>
Bu metot işlendiğinde <code>params[:post].inspect</code> satırındaki Params metodu gelen parametreleri,
sembolleri (veya alanları )formdan getiriyor.<br/>
<font color='brown'>Params </font> yöntemi dizeleri veya sembolleri kullanarak karma anahtarları erişmenizi sağlayan bir
<font color='brown' > ActiveSupport :: HashWithIndifferentAccess </font> nesnesi döndürür.<br/>
Bu durumda, önemli olan tek parametre formdan olanlardır.</p>

<p>Eğer formu bir kez daha tekrar sunarsanız şimdi artık eksik şablon hatası alırsınız.
<code>{"title"=&gt;"kader", "text"=&gt;"tarlan\r\n"}</code></p>

<p>Formdaki parametrelerin geldiğini görüyoruz . Ancak bu tam istediğimiz gibi olmadı. <br/>
Evet parametreleri görüyoruz ama hiç bir estetiği yok bunların.</p>

<p>Burada ise devreye <font color='red'> Model </font> katmanı girer.<br/>
Rails de modellerde tekil adlar kullanılır fakat bunlarla ilgili veritabanı tabloları çoğul adlarla kullanılır.</p>

<p>Rails model oluştururken terminalde;<br/>
<code>$ rails generate model Post title:string text:text</code><br/>
komutunu veririz.<br/>
Bu komut ile Rails bize Post model ile birlikte dize türünde bir başlık ile
text türünde metin texti oluşturuyor. <br/>
Bu özellikler otomatik olarak veritabanındaki posts tabloya eklenir ve post model ile  eşleştirilir.</p>

<p><code>app/models/post.rb</code> ve  <code>db/migrate/20140308145928_create_posts.rb</code> dosyaları ile ilgileneceğiz şimdide.</p>

<p>Rails model oluştururken içinde <code>db/migrate</code> dizini içinde database migration dosyası
olusturur.</p>

<p><font color='red'>Migration </font> , veritabanı tablolarını oluşturmak ve değiştirmek için basit hale getirmek için tasarlanmış
<font color='red'> Ruby </font> sınıflardır.</p>

<p>Rails migrations çalıştırmak için <font color='red'>rake </font> komutunu kullanıyor.
Aynı zamanda veritabanından bu migrationu geri almak da mümkün bu komutla .</p>

<p>Migration dosyaları yaratılmış oldukları sıraya göre çalışırlar bu yüzden işlem sırası için dosya adlarına oluşturuldukları zaman
otomatık yazılır. Benim migration dosyam;<br/>
<code>20140308145928_create_posts.rb</code><br/>
şeklindedir. Sizinki de daha farklı bir adda olur.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">CreatePosts</span> <span class="o">&lt;</span> <span class="no">ActiveRecord</span><span class="o">::</span><span class="no">Migration</span>
</span><span class='line'><span class="err">  </span><span class="k">def</span> <span class="nf">change</span>
</span><span class='line'><span class="err">    </span><span class="n">create_table</span> <span class="ss">:posts</span> <span class="k">do</span> <span class="o">|</span><span class="n">t</span><span class="o">|</span>
</span><span class='line'><span class="err">      </span><span class="n">t</span><span class="o">.</span><span class="n">string</span> <span class="ss">:title</span>
</span><span class='line'><span class="err">      </span><span class="n">t</span><span class="o">.</span><span class="n">text</span> <span class="ss">:text</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">      </span><span class="n">t</span><span class="o">.</span><span class="n">timestamps</span>
</span><span class='line'><span class="err">    </span><span class="k">end</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Yukarıdaki  migrationu çalıştırdığımız zaman migration oluşturuluyor change adındaki metotla.<br/>
Bu aksiyonda tanımladığımız metodu geri almak istediğimizde değişikliği migrasyon yapar. <br/>
Bu migrasyonu çalıştırdığımızda bize bir dize sutun ve bir metin sutunu ile bir mesaj tablosu oluşturacak.<br/>
Ayrıca post oluşturma ve güncellenmesinin süresini izlemek için Rails iki tane  <font color='brown'>timestamp fields </font> alanları oluşturuyor onlarda burada gözükecek.</p>

<p>Migration çalıştırmak için aşağıdaki komutu kullanılırız;</p>

<p><code>$ rake db:migrate</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">==</span>  <span class="ss">CreatePosts</span><span class="p">:</span> <span class="n">migrating</span> <span class="o">====================================================</span>
</span><span class='line'><span class="o">--</span> <span class="n">create_table</span><span class="p">(</span><span class="ss">:posts</span><span class="p">)</span>
</span><span class='line'>   <span class="o">-&gt;</span> <span class="mi">0</span><span class="o">.</span><span class="mo">0014</span><span class="n">s</span>
</span><span class='line'><span class="o">==</span>  <span class="ss">CreatePosts</span><span class="p">:</span> <span class="n">migrated</span> <span class="p">(</span><span class="mi">0</span><span class="o">.</span><span class="mo">0017</span><span class="n">s</span><span class="p">)</span> <span class="o">===========================================</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Bizim oluşturduğuz aksiyonlardaki değişiklikleri <font color='brown'>new Post model </font> de kullanmak için
bunu veritabanına kayıt etmek gerekir. <br/>
Bunun içinde  <code>post_controller</code> dosyamızın içine gireriz.</p>

<p><code>$nano app/controllers/posts_controller.rb</code><br/>
komutu ile dosyamızı açarız ve içindeki <font color='brown'>create </font> metodunda değişiklikler yaparız.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:post</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="err">  </span><span class="n">redirect_to</span> <span class="vi">@post</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Burada ne oluyor peki , her <font color='brown'> Rails </font> modeli otomatik olarak ilgili veritabanı sütunları eşleştirilir, ilgili nitelikleri ile başlatılabilir. <br/>
İlk satırda (hatırlıyorsanız params[<font color='blue'>: post </font>] ilgilendiğimiz özellikleri içeriyordu.). <br/>
Daha sonra, <font color='brown'> @post.save </font> veritabanındaki modelinin muhafaza etmekle sorumludur.
Son olarak,  en sonda da bu eylemi kullanıcıya yönlendirir.</p>

<p>Şimdi <a href="http://localhost:3000/posts/new">http://localhost:3000/posts/new</a> sayfamızı yenilersek bir hata ile karşılaşacağız.</p>

<p><img src="http://i.imgur.com/bn3uho5.png?1" alt="" /></p>

<p><font color='brown' > Rails </font> güvenli uygulamaları yazmak için yardımcı birçok güvenlik özellikleri kullanır ve şimdi onlardan birine koşuyoruz.<br/>
Bizim controllerimizda tam olarak hangi parametreleri kabul etmek istediğimizi Rails'e anlatmamız gerekiyor
bu parametrelere <font color='brown'>strong_parametres </font> diyoruz.</p>

<p>bu durumda biz title ve text parametrelerine izin vermek istiyoruz bu yüzden controllerda create metodunda bir kaç ekleme yaparak belirtiyoruz.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">create</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">post_params</span><span class="p">)</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span><span class="o">.</span><span class="n">save</span>
</span><span class='line'><span class="err">  </span><span class="n">redirect_to</span> <span class="vi">@post</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'><span class="err">  </span><span class="k">def</span> <span class="nf">post_params</span>
</span><span class='line'><span class="err">    </span><span class="n">params</span><span class="o">.</span><span class="n">require</span><span class="p">(</span><span class="ss">:post</span><span class="p">)</span><span class="o">.</span><span class="n">permit</span><span class="p">(</span> <span class="ss">:title</span> <span class="p">,</span> <span class="ss">:text</span><span class="p">)</span>
</span><span class='line'><span class="err">  </span><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>komut burada bir eylem başlığı ve metini kabul etmesini sağlar.</p>

<p>şimdi sayfayı yenilediğimiz tekrar formu gönderdiğimizde bu sefer Rails <font color='red'>show </font> metodunu bulamadığından yakınacak.
<img src="http://i.imgur.com/aGqJyDs.jpg?1" alt="" /></p>

<p><code>post GET    /posts/:id(.:format)      posts#show</code> <br/>
özel bir syntax görüyoruz burda :id  burası kalsın.</p>

<p><code>$nano app/controllers/posts_controller.rb</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">show</span>
</span><span class='line'><span class="err">  </span><span class="vi">@post</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
Dosyamıza girip show metodunu içine yazdık.</p>

<p>Şimdi, aşağıdaki içerikle yeni bir dosya<br/>
<code>nano app/views/posts/show.html.erb</code><br/>
oluşturalım;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="ss">Title</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/strong&gt; </span>
</span><span class='line'><span class="sr">&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="ss">Text</span><span class="p">:</span><span class="o">&lt;</span><span class="sr">/strong&gt; </span>
</span><span class='line'><span class="sr">  &lt;%= @post.text %&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>kayıt edip çıkalım ve sayfamızı (<a href="http://localhost:3000/posts/new">http://localhost:3000/posts/new</a>) tekrar tazeleyelım.</p>

<p><img src="http://i.imgur.com/F1Qcdzb.jpg?1" alt="" /></p>

<p>biz tüm mesajları ekranda görmek istiyoruz bunun için ise
<code>nano app/controllers/posts_controller.rb</code><br/>
dosyasına girip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">def</span> <span class="nf">index</span>
</span><span class='line'><span class="err">  </span><span class="vi">@posts</span> <span class="o">=</span> <span class="no">Post</span><span class="o">.</span><span class="n">all</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>
metodunu yazıyoruz.<br/>
<code>nano app/views/posts/index.html.erb</code><br/>
Dosyasında da view olusturuyoruz;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Listing</span> <span class="n">posts</span><span class="o">&lt;</span><span class="sr">/h1&gt; </span>
</span><span class='line'><span class="sr">  </span>
</span><span class='line'><span class="sr">&lt;table&gt; </span>
</span><span class='line'><span class="sr">  &lt;tr&gt; </span>
</span><span class='line'><span class="sr">    &lt;th&gt;Title&lt;/</span><span class="n">th</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="n">th</span><span class="o">&gt;</span><span class="no">Text</span><span class="o">&lt;</span><span class="sr">/th&gt; </span>
</span><span class='line'><span class="sr">  &lt;/</span><span class="n">tr</span><span class="o">&gt;</span>
</span><span class='line'><span class="err"> </span>
</span><span class='line'><span class="err">  </span><span class="o">&lt;</span><span class="sx">% @posts.each </span><span class="k">do</span> <span class="o">|</span><span class="n">post</span><span class="o">|</span> <span class="sx">%&gt; </span>
</span><span class='line'><span class="sx">    &lt;tr&gt;</span>
</span><span class='line'><span class="err">      </span><span class="o">&lt;</span><span class="n">td</span><span class="o">&gt;&lt;</span><span class="sx">%= post.title %&gt;&lt;/td&gt; </span>
</span><span class='line'><span class="sx">      &lt;td&gt;&lt;%=</span> <span class="n">post</span><span class="o">.</span><span class="n">text</span> <span class="sx">%&gt;&lt;/td&gt;</span>
</span><span class='line'><span class="err">    </span><span class="o">&lt;</span><span class="sr">/tr&gt; </span>
</span><span class='line'><span class="sr">  &lt;% end %&gt; </span>
</span><span class='line'><span class="sr">&lt;/</span><span class="n">table</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>
bunları dosyamıza yazıp kayıt ettikten sonra çıkıyoruz.</p>

<p><a href="http://localhost:3000/posts">http://localhost:3000/posts</a> adresine tekrar girip formumuza eklediğimiz tüm title,text ikililerini görebilirsiniz.</p>

<p>Böylece Oluşturma(<font color='brown'> Create </font>), Oluşturulan formaları görme (<font color='brown'> Show </font>) metotlarını inceledik sonraki yazımda <font color='red'>CRUD </font> deyiminden kalan iki metotu anlatacağım , formu güncelleme (<font color='brown'> Update </font>) ve silme(<font color='brown'> Delete </font> ).</p>

<p>İyi çalışmalar.</p>
]]></content>
  </entry>
  
</feed>
