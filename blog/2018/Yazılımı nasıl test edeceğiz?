<em>Yazılımı test etmek onun kalitesini ölçmek adına yaptığımız bir araştırmadır.</em>
<strong>
Yazılım testleri için dikkat etmemiz gereken bazı noktalar;</strong>

 
<ul>
	<li>Programlama altyapıları karmaşıktır, test ihtiyacı süreklidir ve risk taşımaya devam eder. Sadece temel başlıkları test etmek yetmez .</li>
	<li></li>
</ul>
<ul>
	<li>Test stratejimiz riski azaltmalı ve bizim için önemli olan kalite yönlerini araştırmalıdır.</li>
	<li></li>
</ul>
<ul>
	<li>Altyapı başarılı yazılım için kritik öneme sahiptir. Ancak altyapı ne kadar başarılı da olsa da kodlama devam ettikçe hataların çıkıyor olmasını kabul etmeliyiz. Geliştirilen ürüne şu şekilde yaklaşmak da fayda var, bu kod production kodu ve biz de onu test etmek zorundayız.</li>
	<li></li>
</ul>
<ul>
	<li>Yeni bir özelliği test ederken temelleri tekrar gözden geçirip, istenileni karşılıyor mu bunu kontrol etmeliyiz. Tüm bunları yaparken de <strong>Neden</strong> test ediyoruz buna odaklanmak yerine, <strong>Nasıl</strong> test ettiğimize odaklanalım.</li>
	<li></li>
</ul>
<ul>
	<li>Tek başına birim testi, bileşenlerin düzgün bir şekilde birlikte çalışıp çalışmadığı sorusuna cevap vermez. Entegrasyon testleri de gereklidir. Ancak bu Entegrasyon Test sayısını çok abartıp hiç birim testlerinin olmaması anlamını taşımıyor, çünkü bu durum da başka sorunları doğurur.</li>
	<li></li>
</ul>
<ul>Yarattığımız testlerin sayısı aşağıdaki şema ile orantılı şekilde olmalı.</ul>
<img class="alignnone size-full" src="https://kadertarlan.files.wordpress.com/2018/09/ekran-alc4b1ntc4b1sc4b1.png" />

Bu arada hatırlatma amaçlı;

Entegrasyon testi :  Sistemimizde birden fazla modül veya bileşen varsa sistemi genel anlamda kontrol eder. Amacı, geliştirme sonrası bağlı modülleri birlikte test ederek genel yapıda bir hata var mı bunu bulmaktır. Ürün son kullanıcıya teslim edilmeden önce yapılır. Entegrasyon testinin diğer adı <b>Smoke Test </b>olarak da bilinir.
